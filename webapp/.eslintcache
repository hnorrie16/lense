[{"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/index.js":"1","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/reportWebVitals.js":"2","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/App.js":"3","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/reducers/auth.js":"4","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/reducers/users.js":"5","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/reducers/clients.js":"6","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/reducers/assessments.js":"7","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/actions/auth.js":"8","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/actions/actionTypes.js":"9","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/SeriesFive.js":"10","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/SeriesSeven.js":"11","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/SeriesSix.js":"12","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/SeriesTwo.js":"13","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/SeriesOne.js":"14","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/SeriesFour.js":"15","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/StaffTable.js":"16","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/SeriesEight.js":"17","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/InactiveTable.js":"18","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/MasterTable.js":"19","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Assessment/Assessment.js":"20","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/Export.js":"21","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Auth/Auth.js":"22","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Staff/Staff.js":"23","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Clients/Clients.js":"24","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Layout/Layout.js":"25","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Auth/Logout/Logout.js":"26","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/StaffPasswordChange/StaffPasswordChange.js":"27","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/ClientProfile/ClientProfile.js":"28","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/ProtectedRoute/ProtectedRoute.js":"29","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/shared/Utility.js":"30","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/environment.js":"31","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/actions/users.js":"32","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/actions/assessments.js":"33","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/actions/clients.js":"34","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/Table/Table.js":"35","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/FeedbackGlobal/FeedbackGlobal.js":"36","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Button/Button.js":"37","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Spinner/Spinner.js":"38","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/SideNavBar/SideNavBar.js":"39","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/ConfirmModal/ConfirmModal.js":"40","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/QuestionnaireForms/AboutYou/AboutYou.js":"41","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/LinkNewClientModal/LinkNewClientModal.js":"42","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/RegisterStaffModal/RegisterStaffModal.js":"43","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/LinkSidePanel/LinkSidePanel.js":"44","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/SummaryAssessmentModal/SummaryAssessmentModal.js":"45","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/AssessmentTab/AssessmentTab.js":"46","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/GeneralModal/GeneralModal.js":"47","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AssessmentPhases/DataAnalysis/DataAnalysis.js":"48","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AssessmentPhases/Actigram/Actigram.js":"49","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AssessmentPhases/Consult/Consult.js":"50","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AssessmentPhases/Questionnaire/Questionnaire.js":"51","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AssessmentPhases/ReportGeneration/ReportGeneration.js":"52","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/Table/Row/Row.js":"53","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/NavItem/NavItem.js":"54","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Input/Input.js":"55","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Overlay/Overlay.js":"56","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/OutsideAlerter/OutsideAlerter.js":"57","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/EmailReportModal/EmailReportModal.js":"58","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/ValidationErrorModal/ValidationErrorModal.js":"59","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/PreviousSaveButtons/PreviousSaveButtons.js":"60","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Feedback/Feedback.js":"61","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/QuestionnaireForms/LifestyleFactors/LifestyleFactors.js":"62","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/QuestionnaireForms/MedicalHistory/MedicalHistory.js":"63","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/QuestionnaireForms/InsomniaIndex/InsomniaIndex.js":"64","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/QuestionnaireForms/EpworthScale/EpworthScale.js":"65","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/QuestionnaireForms/FatigueScale/FatigueScale.js":"66","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AssessmentPhases/Questionnaire/SectionTab/SectionTab.js":"67","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/QuestionnaireForms/SleepHistory/SleepHistory.js":"68","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/ViewActigramModal/ViewActigramModal.js":"69","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/ViewSummaryReportModal/ViewSummaryReportModal.js":"70","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/InterpretationForm/InterpretationForm.js":"71","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AssessmentPhases/Actigram/DayRow/DayRow.js":"72","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AssessmentPhases/DataAnalysis/SectionTab/SectionTab.js":"73","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/DataAnalysisForms/LifestyleFactors/LifestyleFactors.js":"74","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/DataAnalysisForms/ClientDetails/ClientDetails.js":"75","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/DataAnalysisForms/MedicalHistory/MedicalHistory.js":"76","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/DataAnalysisForms/SleepProfile/SleepProfile.js":"77","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/DataAnalysisForms/SleepHistory/SleepHistory.js":"78","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AnalysisTable/AnalysisTable.js":"79","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/index.js":"80","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/reportWebVitals.js":"81","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/App.js":"82","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/reducers/clients.js":"83","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/reducers/auth.js":"84","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/reducers/assessments.js":"85","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/reducers/users.js":"86","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/actions/auth.js":"87","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/actions/actionTypes.js":"88","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/SeriesTwo.js":"89","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/SeriesFour.js":"90","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/SeriesFive.js":"91","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/SeriesEight.js":"92","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/SeriesSix.js":"93","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/MasterTable.js":"94","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/SeriesSeven.js":"95","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/StaffTable.js":"96","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Auth/Auth.js":"97","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Staff/Staff.js":"98","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/ClientProfile/ClientProfile.js":"99","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/Export.js":"100","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/InactiveTable.js":"101","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/SeriesOne.js":"102","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Clients/Clients.js":"103","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Assessment/Assessment.js":"104","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Layout/Layout.js":"105","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/ProtectedRoute/ProtectedRoute.js":"106","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/StaffPasswordChange/StaffPasswordChange.js":"107","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Auth/Logout/Logout.js":"108","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/shared/Utility.js":"109","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/environment.js":"110","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/actions/users.js":"111","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/actions/assessments.js":"112","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/actions/clients.js":"113","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/Table/Table.js":"114","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/SideNavBar/SideNavBar.js":"115","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Spinner/Spinner.js":"116","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Button/Button.js":"117","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/FeedbackGlobal/FeedbackGlobal.js":"118","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/AssessmentTab/AssessmentTab.js":"119","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/ConfirmModal/ConfirmModal.js":"120","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/GeneralModal/GeneralModal.js":"121","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/SummaryAssessmentModal/SummaryAssessmentModal.js":"122","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AssessmentPhases/DataAnalysis/DataAnalysis.js":"123","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AssessmentPhases/ReportGeneration/ReportGeneration.js":"124","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AssessmentPhases/Actigram/Actigram.js":"125","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AssessmentPhases/Consult/Consult.js":"126","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AssessmentPhases/Questionnaire/Questionnaire.js":"127","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/LinkNewClientModal/LinkNewClientModal.js":"128","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/RegisterStaffModal/RegisterStaffModal.js":"129","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/LinkSidePanel/LinkSidePanel.js":"130","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/QuestionnaireForms/AboutYou/AboutYou.js":"131","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Overlay/Overlay.js":"132","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/OutsideAlerter/OutsideAlerter.js":"133","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/ValidationErrorModal/ValidationErrorModal.js":"134","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/PreviousSaveButtons/PreviousSaveButtons.js":"135","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Feedback/Feedback.js":"136","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/QuestionnaireForms/LifestyleFactors/LifestyleFactors.js":"137","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/QuestionnaireForms/FatigueScale/FatigueScale.js":"138","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/QuestionnaireForms/InsomniaIndex/InsomniaIndex.js":"139","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/QuestionnaireForms/MedicalHistory/MedicalHistory.js":"140","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/QuestionnaireForms/EpworthScale/EpworthScale.js":"141","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/QuestionnaireForms/SleepHistory/SleepHistory.js":"142","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AssessmentPhases/Questionnaire/SectionTab/SectionTab.js":"143","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Input/Input.js":"144","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AssessmentPhases/Actigram/DayRow/DayRow.js":"145","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/ViewActigramModal/ViewActigramModal.js":"146","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/EmailReportModal/EmailReportModal.js":"147","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/ViewSummaryReportModal/ViewSummaryReportModal.js":"148","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/InterpretationForm/InterpretationForm.js":"149","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/DataAnalysisForms/LifestyleFactors/LifestyleFactors.js":"150","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/DataAnalysisForms/MedicalHistory/MedicalHistory.js":"151","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/DataAnalysisForms/SleepHistory/SleepHistory.js":"152","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/DataAnalysisForms/SleepProfile/SleepProfile.js":"153","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/DataAnalysisForms/ClientDetails/ClientDetails.js":"154","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AssessmentPhases/DataAnalysis/SectionTab/SectionTab.js":"155","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/NavItem/NavItem.js":"156","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/Table/Row/Row.js":"157","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AnalysisTable/AnalysisTable.js":"158"},{"size":2945,"mtime":1621374626000,"results":"159","hashOfConfig":"160"},{"size":362,"mtime":1617339714000,"results":"161","hashOfConfig":"160"},{"size":3737,"mtime":1631703633295,"results":"162","hashOfConfig":"160"},{"size":3880,"mtime":1617339714000,"results":"163","hashOfConfig":"160"},{"size":14301,"mtime":1617339714000,"results":"164","hashOfConfig":"160"},{"size":7419,"mtime":1617339714000,"results":"165","hashOfConfig":"160"},{"size":22032,"mtime":1617339714000,"results":"166","hashOfConfig":"160"},{"size":7381,"mtime":1617339714000,"results":"167","hashOfConfig":"160"},{"size":8793,"mtime":1631831283966,"results":"168","hashOfConfig":"160"},{"size":9178,"mtime":1627586061679,"results":"169","hashOfConfig":"160"},{"size":42655,"mtime":1633554630076,"results":"170","hashOfConfig":"160"},{"size":9175,"mtime":1627586051392,"results":"171","hashOfConfig":"160"},{"size":9714,"mtime":1627586044056,"results":"172","hashOfConfig":"160"},{"size":7687,"mtime":1627892713070,"results":"173","hashOfConfig":"160"},{"size":9230,"mtime":1627586065919,"results":"174","hashOfConfig":"160"},{"size":8886,"mtime":1632700810262,"results":"175","hashOfConfig":"160"},{"size":23350,"mtime":1632697346294,"results":"176","hashOfConfig":"160"},{"size":7700,"mtime":1627920262272,"results":"177","hashOfConfig":"160"},{"size":10686,"mtime":1633028134060,"results":"178","hashOfConfig":"160"},{"size":16275,"mtime":1617339714000,"results":"179","hashOfConfig":"160"},{"size":32758,"mtime":1633610468951,"results":"180","hashOfConfig":"160"},{"size":3247,"mtime":1621408381000,"results":"181","hashOfConfig":"160"},{"size":9838,"mtime":1617339714000,"results":"182","hashOfConfig":"160"},{"size":9598,"mtime":1627399811234,"results":"183","hashOfConfig":"160"},{"size":730,"mtime":1617339714000,"results":"184","hashOfConfig":"160"},{"size":629,"mtime":1617339714000,"results":"185","hashOfConfig":"160"},{"size":3934,"mtime":1617339714000,"results":"186","hashOfConfig":"160"},{"size":5220,"mtime":1617339714000,"results":"187","hashOfConfig":"160"},{"size":780,"mtime":1617339714000,"results":"188","hashOfConfig":"160"},{"size":753,"mtime":1617339714000,"results":"189","hashOfConfig":"160"},{"size":77,"mtime":1617339714000,"results":"190","hashOfConfig":"160"},{"size":11718,"mtime":1627773600651,"results":"191","hashOfConfig":"160"},{"size":14529,"mtime":1621422661000,"results":"192","hashOfConfig":"160"},{"size":8253,"mtime":1633056751648,"results":"193","hashOfConfig":"160"},{"size":10000,"mtime":1621412411000,"results":"194","hashOfConfig":"160"},{"size":2027,"mtime":1617339714000,"results":"195","hashOfConfig":"160"},{"size":495,"mtime":1627551127112,"results":"196","hashOfConfig":"160"},{"size":1042,"mtime":1617339714000,"results":"197","hashOfConfig":"160"},{"size":10200,"mtime":1633028177529,"results":"198","hashOfConfig":"160"},{"size":1101,"mtime":1617339714000,"results":"199","hashOfConfig":"160"},{"size":8176,"mtime":1617339714000,"results":"200","hashOfConfig":"160"},{"size":6621,"mtime":1617339714000,"results":"201","hashOfConfig":"160"},{"size":6441,"mtime":1627564442404,"results":"202","hashOfConfig":"160"},{"size":3939,"mtime":1617339714000,"results":"203","hashOfConfig":"160"},{"size":1196,"mtime":1617339714000,"results":"204","hashOfConfig":"160"},{"size":2339,"mtime":1617339714000,"results":"205","hashOfConfig":"160"},{"size":1101,"mtime":1617339714000,"results":"206","hashOfConfig":"160"},{"size":10371,"mtime":1617339714000,"results":"207","hashOfConfig":"160"},{"size":34735,"mtime":1617339714000,"results":"208","hashOfConfig":"160"},{"size":15624,"mtime":1617339714000,"results":"209","hashOfConfig":"160"},{"size":15231,"mtime":1617339714000,"results":"210","hashOfConfig":"160"},{"size":4948,"mtime":1617339714000,"results":"211","hashOfConfig":"160"},{"size":6408,"mtime":1621416792000,"results":"212","hashOfConfig":"160"},{"size":696,"mtime":1632696323695,"results":"213","hashOfConfig":"160"},{"size":4004,"mtime":1617339714000,"results":"214","hashOfConfig":"160"},{"size":816,"mtime":1617339714000,"results":"215","hashOfConfig":"160"},{"size":1135,"mtime":1617339714000,"results":"216","hashOfConfig":"160"},{"size":5091,"mtime":1617339714000,"results":"217","hashOfConfig":"160"},{"size":1208,"mtime":1617339714000,"results":"218","hashOfConfig":"160"},{"size":715,"mtime":1617339714000,"results":"219","hashOfConfig":"160"},{"size":1446,"mtime":1617339714000,"results":"220","hashOfConfig":"160"},{"size":14814,"mtime":1617339714000,"results":"221","hashOfConfig":"160"},{"size":6482,"mtime":1617339714000,"results":"222","hashOfConfig":"160"},{"size":5325,"mtime":1617339714000,"results":"223","hashOfConfig":"160"},{"size":5344,"mtime":1617339714000,"results":"224","hashOfConfig":"160"},{"size":7032,"mtime":1617339714000,"results":"225","hashOfConfig":"160"},{"size":1102,"mtime":1617339714000,"results":"226","hashOfConfig":"160"},{"size":11926,"mtime":1617339714000,"results":"227","hashOfConfig":"160"},{"size":1186,"mtime":1617339714000,"results":"228","hashOfConfig":"160"},{"size":1768,"mtime":1617339714000,"results":"229","hashOfConfig":"160"},{"size":3938,"mtime":1617339714000,"results":"230","hashOfConfig":"160"},{"size":2683,"mtime":1617339714000,"results":"231","hashOfConfig":"160"},{"size":643,"mtime":1617339714000,"results":"232","hashOfConfig":"160"},{"size":1287,"mtime":1617339714000,"results":"233","hashOfConfig":"160"},{"size":688,"mtime":1617339714000,"results":"234","hashOfConfig":"160"},{"size":847,"mtime":1617339714000,"results":"235","hashOfConfig":"160"},{"size":1816,"mtime":1617339714000,"results":"236","hashOfConfig":"160"},{"size":1246,"mtime":1617339714000,"results":"237","hashOfConfig":"160"},{"size":709,"mtime":1617339714000,"results":"238","hashOfConfig":"160"},{"size":2945,"mtime":1621374626000,"results":"239","hashOfConfig":"240"},{"size":362,"mtime":1617339714000,"results":"241","hashOfConfig":"240"},{"size":3737,"mtime":1631703633295,"results":"242","hashOfConfig":"240"},{"size":7419,"mtime":1617339714000,"results":"243","hashOfConfig":"240"},{"size":3880,"mtime":1617339714000,"results":"244","hashOfConfig":"240"},{"size":22032,"mtime":1617339714000,"results":"245","hashOfConfig":"240"},{"size":14301,"mtime":1617339714000,"results":"246","hashOfConfig":"240"},{"size":7381,"mtime":1617339714000,"results":"247","hashOfConfig":"240"},{"size":8793,"mtime":1631831283966,"results":"248","hashOfConfig":"240"},{"size":9714,"mtime":1627586044056,"results":"249","hashOfConfig":"240"},{"size":9230,"mtime":1627586065919,"results":"250","hashOfConfig":"240"},{"size":9178,"mtime":1627586061679,"results":"251","hashOfConfig":"240"},{"size":23350,"mtime":1632697346294,"results":"252","hashOfConfig":"240"},{"size":9175,"mtime":1627586051392,"results":"253","hashOfConfig":"240"},{"size":10686,"mtime":1633028134060,"results":"254","hashOfConfig":"240"},{"size":42655,"mtime":1633554630076,"results":"255","hashOfConfig":"240"},{"size":8886,"mtime":1632700810262,"results":"256","hashOfConfig":"240"},{"size":3247,"mtime":1621408381000,"results":"257","hashOfConfig":"240"},{"size":9838,"mtime":1617339714000,"results":"258","hashOfConfig":"240"},{"size":5220,"mtime":1617339714000,"results":"259","hashOfConfig":"240"},{"size":32758,"mtime":1633610468951,"results":"260","hashOfConfig":"240"},{"size":7700,"mtime":1627920262272,"results":"261","hashOfConfig":"240"},{"size":7687,"mtime":1627892713070,"results":"262","hashOfConfig":"240"},{"size":9598,"mtime":1627399811234,"results":"263","hashOfConfig":"240"},{"size":16275,"mtime":1617339714000,"results":"264","hashOfConfig":"240"},{"size":730,"mtime":1617339714000,"results":"265","hashOfConfig":"240"},{"size":780,"mtime":1617339714000,"results":"266","hashOfConfig":"240"},{"size":3934,"mtime":1617339714000,"results":"267","hashOfConfig":"240"},{"size":629,"mtime":1617339714000,"results":"268","hashOfConfig":"240"},{"size":753,"mtime":1617339714000,"results":"269","hashOfConfig":"240"},{"size":78,"mtime":1644956352117,"results":"270","hashOfConfig":"240"},{"size":11718,"mtime":1627773600651,"results":"271","hashOfConfig":"240"},{"size":14529,"mtime":1621422661000,"results":"272","hashOfConfig":"240"},{"size":8253,"mtime":1633056751648,"results":"273","hashOfConfig":"240"},{"size":10000,"mtime":1621412411000,"results":"274","hashOfConfig":"240"},{"size":10200,"mtime":1633028177529,"results":"275","hashOfConfig":"240"},{"size":1042,"mtime":1617339714000,"results":"276","hashOfConfig":"240"},{"size":495,"mtime":1627551127112,"results":"277","hashOfConfig":"240"},{"size":2027,"mtime":1617339714000,"results":"278","hashOfConfig":"240"},{"size":2339,"mtime":1617339714000,"results":"279","hashOfConfig":"240"},{"size":1101,"mtime":1617339714000,"results":"280","hashOfConfig":"240"},{"size":1101,"mtime":1617339714000,"results":"281","hashOfConfig":"240"},{"size":1196,"mtime":1617339714000,"results":"282","hashOfConfig":"240"},{"size":10371,"mtime":1617339714000,"results":"283","hashOfConfig":"240"},{"size":4948,"mtime":1617339714000,"results":"284","hashOfConfig":"240"},{"size":34735,"mtime":1617339714000,"results":"285","hashOfConfig":"240"},{"size":15624,"mtime":1617339714000,"results":"286","hashOfConfig":"240"},{"size":15231,"mtime":1617339714000,"results":"287","hashOfConfig":"240"},{"size":6621,"mtime":1617339714000,"results":"288","hashOfConfig":"240"},{"size":6441,"mtime":1627564442404,"results":"289","hashOfConfig":"240"},{"size":3939,"mtime":1617339714000,"results":"290","hashOfConfig":"240"},{"size":8176,"mtime":1617339714000,"results":"291","hashOfConfig":"240"},{"size":816,"mtime":1617339714000,"results":"292","hashOfConfig":"240"},{"size":1135,"mtime":1617339714000,"results":"293","hashOfConfig":"240"},{"size":1208,"mtime":1617339714000,"results":"294","hashOfConfig":"240"},{"size":715,"mtime":1617339714000,"results":"295","hashOfConfig":"240"},{"size":1446,"mtime":1617339714000,"results":"296","hashOfConfig":"240"},{"size":14814,"mtime":1617339714000,"results":"297","hashOfConfig":"240"},{"size":7032,"mtime":1617339714000,"results":"298","hashOfConfig":"240"},{"size":5325,"mtime":1617339714000,"results":"299","hashOfConfig":"240"},{"size":6482,"mtime":1617339714000,"results":"300","hashOfConfig":"240"},{"size":5344,"mtime":1617339714000,"results":"301","hashOfConfig":"240"},{"size":11926,"mtime":1617339714000,"results":"302","hashOfConfig":"240"},{"size":1102,"mtime":1617339714000,"results":"303","hashOfConfig":"240"},{"size":4004,"mtime":1617339714000,"results":"304","hashOfConfig":"240"},{"size":2683,"mtime":1617339714000,"results":"305","hashOfConfig":"240"},{"size":1186,"mtime":1617339714000,"results":"306","hashOfConfig":"240"},{"size":5091,"mtime":1617339714000,"results":"307","hashOfConfig":"240"},{"size":1768,"mtime":1617339714000,"results":"308","hashOfConfig":"240"},{"size":3938,"mtime":1617339714000,"results":"309","hashOfConfig":"240"},{"size":1287,"mtime":1617339714000,"results":"310","hashOfConfig":"240"},{"size":847,"mtime":1617339714000,"results":"311","hashOfConfig":"240"},{"size":1246,"mtime":1617339714000,"results":"312","hashOfConfig":"240"},{"size":1816,"mtime":1617339714000,"results":"313","hashOfConfig":"240"},{"size":688,"mtime":1617339714000,"results":"314","hashOfConfig":"240"},{"size":643,"mtime":1617339714000,"results":"315","hashOfConfig":"240"},{"size":696,"mtime":1632696323695,"results":"316","hashOfConfig":"240"},{"size":6408,"mtime":1621416792000,"results":"317","hashOfConfig":"240"},{"size":709,"mtime":1617339714000,"results":"318","hashOfConfig":"240"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},"46aqbh",{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"321"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"321"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"321"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"321"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"321"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"321"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"321"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"321"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"321"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"321"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"321"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":78,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"321"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"321"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"321"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"321"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"321"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"321"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"321"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"321"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"321"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"321"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"321"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"321"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"321"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"468","messages":"469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"480","messages":"481","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"494","messages":"495","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"498","messages":"499","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},"oir0me",{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"504"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"504"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"504"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"504"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"504"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"504"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"504"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"504"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"504"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"504"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"504"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"504"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":78,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"504"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"504"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"504"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"504"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"504"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"504"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"504"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"504"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"504"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"504"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"504"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"504"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"504"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"504"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"504"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631","usedDeprecatedRules":"504"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"504"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"504"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"504"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"504"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"504"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"504"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"504"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"504"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"504"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/index.js",[],["674","675"],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/reportWebVitals.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/App.js",["676","677","678"],"import React, { useEffect } from 'react'\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Layout from './containers/Layout/Layout'\nimport Clients from './containers/Clients/Clients'\nimport SeriesOne from './containers/Series/SeriesOne'\nimport SeriesTwo from './containers/Series/SeriesTwo'\nimport SeriesFour from './containers/Series/SeriesFour'\nimport SeriesFive from './containers/Series/SeriesFive'\nimport SeriesSix from './containers/Series/SeriesSix'\nimport SeriesSeven from './containers/Series/SeriesSeven'\nimport SeriesEight from './containers/Series/SeriesEight'\nimport StaffTable from './containers/Series/StaffTable'\nimport InactiveTable from './containers/Series/InactiveTable'\nimport MasterTable from './containers/Series/MasterTable'\nimport Export from './containers/Series/Export'\nimport Auth from './containers/Auth/Auth'\nimport Staff from './containers/Staff/Staff'\nimport Assessment from './containers/Assessment/Assessment'\nimport ClientProfile from './containers/ClientProfile/ClientProfile'\nimport Logout from './containers/Auth/Logout/Logout'\nimport StaffPasswordChange from './containers/StaffPasswordChange/StaffPasswordChange'\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute'\nimport * as actions from './store/actions/auth';\nimport { connect } from 'react-redux'\n\nconst App = (props) => {\n\n  // calls the checkAuthState whenever the page refreshes\n  useEffect(() => {\n    props.onTryAutoSignup();\n  }, [props.onTryAutoSignup]);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/signin\" exact={true} component={Auth} />\n        <Redirect exact from=\"/\" to=\"/signin\" />\n        <Route path=\"/registerstaff/changepassword\" component={StaffPasswordChange} />\n        <ProtectedRoute exact={true} isAuthenticated={props.isAuthenticated} path='/clients' component={Clients} />\n        <ProtectedRoute exact={true} isAuthenticated={props.isAuthenticated} path='/seriesone' component={SeriesOne} />\n        <ProtectedRoute exact={true} isAuthenticated={props.isAuthenticated} path='/seriestwo' component={SeriesTwo} />\n        <ProtectedRoute exact={true} isAuthenticated={props.isAuthenticated} path='/seriesfour' component={SeriesFour} />\n        <ProtectedRoute exact={true} isAuthenticated={props.isAuthenticated} path='/seriesfive' component={SeriesFive} />\n        <ProtectedRoute exact={true} isAuthenticated={props.isAuthenticated} path='/seriessix' component={SeriesSix} />\n        <ProtectedRoute exact={true} isAuthenticated={props.isAuthenticated} path='/seriesseven' component={SeriesSeven} />\n        <ProtectedRoute exact={true} isAuthenticated={props.isAuthenticated} path='/serieseight' component={SeriesEight} />\n        <ProtectedRoute exact={true} isAuthenticated={props.isAuthenticated} path='/exporttable' component={Export} />\n        <ProtectedRoute exact={true} isAuthenticated={props.isAuthenticated} path='/mastertable' component={MasterTable} />\n        <ProtectedRoute exact={true} isAuthenticated={props.isAuthenticated} path='/assessmentpanel/:id' component={Assessment} />\n        <ProtectedRoute exact={true} isAuthenticated={props.isAuthenticated} path='/clientprofile/:id' component={ClientProfile} />\n        <ProtectedRoute exact={true} isAuthenticated={props.isAuthenticated} path='/stafftable' component={StaffTable} />\n        <Route path=\"/logout\" component={Logout} />\n      </Switch>\n    </Layout>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    role: state.auth.role\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/reducers/auth.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/reducers/users.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/reducers/clients.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/reducers/assessments.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/actions/auth.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/actions/actionTypes.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/SeriesFive.js",["679","680","681","682","683","684","685"],"import React, { useEffect, useState } from 'react'\nimport Table from '../../components/Table/Table'\nimport classes from './Clients.module.css'\nimport * as actions from '../../store/actions/clients';\nimport * as actionsAssessments from '../../store/actions/assessments';\nimport { connect } from 'react-redux';\nimport ConfirmModal from '../../components/UI/Modals/ConfirmModal/ConfirmModal'\nimport FeedbackGlobal from '../../components/UI/FeedbackGlobal/FeedbackGlobal'\nimport Button from '../../components/UI/Button/Button'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport { checkIfDefined } from '../../shared/Utility'\nimport { forwardRef } from 'react';\nimport MaterialTable from \"material-table\";\nimport axios from 'axios';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { useLocation } from 'react-router-dom';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n\n\nconst SeriesFive = (props) => {\n\n    const [users, setUsers] = useState([])\n    const location = useLocation();\n\n    useEffect(() => {\n       \n    })    \n    let headings = [[\"Description\", \"priority1\"], [\"Type\", \"priority6\"], [\"Date Created\", \"priority8\"], [\"Code\", \"priority2\"], [\"Type\", \"priority5\"],\n    [\"Change\", \"priority9\"], [\"Status\", \"priority4\"]]\n    \n    useEffect(() => {\n        props.OnFetchClients(props.token,\"5000\", 0, location.state.company, 0)\n    }, [])\n\n    const [state, setState] = useState({\n        fullname: \"\",\n        id: \"\"\n    })\n    \n\n    const data = props.clients !== undefined\n        ? props.clients\n        : []\n  \n\n    return (\n        <>\n            <ConfirmModal\n                show={props.showDeleteClientModal}\n                close={() => props.OnSetConfirmModalDeleteClient(false)}\n                removeHeading={props.clientDeleteComplete}\n            >{!props.loadingDeleteClient\n                ? !props.clientDeleteComplete\n                    ? <> <p>By clicking confirm you are agreeing to <strong>delete {state.fullname}</strong>.</p>\n                        <div className={classes.ButtonGroup}>\n                            <Button buttonType={\"secondary\"} clicked={() => props.OnSetConfirmModal(false)}>Cancel</Button>\n                            <Button buttonType={\"primary\"} clicked={() => props.OnDeleteClient(props.token, state.id)}>Confirm</Button>\n                        </div> </>\n                    : <FeedbackGlobal type=\"Success\" successMessage={\"Successfully deleted!\"} />\n                : <Spinner calledLocation=\"Staff\" loadingMessage={`Deleting ${state.fullname}`} />}\n            </ConfirmModal>\n\n            <div>\n                <ul>\n                    {users.map(user => (<li key={user.id}>{users.name}</li>))}\n                </ul>\n            </div>\n           \n            <div className={classes.Container}>     \n                <MaterialTable  \n                title = \"Series 5000\"         \n                columns={[\n                    { title: 'Lense_ID', field: 'LensID'}, //, field: 'sort'\n                    { title: 'Category', field: 'Category'},\n                    { title: 'Company', field: 'Company'},\n                    { title: 'SAOAGroup', field: 'SAOAGroup'},\n                    { title: 'SeriesGroup', field: 'Series_ID'},\n                    { title: 'Sort', field: 'Sort'},\n                    { title: 'LensGroup_ID', field: 'LensGroupID'}\n                    // { title: 'Category'}, //, field: 'sort'\n                    // { title: 'SAOASeries'},\n                    // { title: 'Sort'},\n                    // { title: 'Series_ID'},\n                    // { title: 'LensGroup'},\n                    // { title: 'Start Date'},\n                    // { title: 'End Date'},\n                    // { title: 'Code'},\n                    // { title: 'Change'},\n                    // { title: 'Description'}\n                ]} \n                options={{\n                    exportButton: true,\n                    filtering: true,\n                    pageSize: 20,                                                                                                                                                             \n                    rowStyle: {\n                        fontSize: 12,                                   \n                      }\n                  }}\n                \n                  editable={{\n                    onRowUpdate: (newData, oldData) =>\n                      new Promise((resolve) => {\n                        //handleRowUpdate(newData, oldData, resolve);\n                        props.OnUpdateClient(props.token, oldData.id, newData, false)\n                        resolve()\n                        window.location.reload();\n                        return\n                    \n                        \n                  }),\n                  onRowAdd: (newData) =>\n                    new Promise((resolve) => {\n                    \n                     resolve()\n                    }),\n\n                  onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                        alert('here')\n                      //handleRowDelete(oldData, resolve)\n                      props.OnDeleteClient(props.token, oldData.id)\n                      props.data.splice(0, 1);\n                      resolve()\n                   \n                      return\n                      \n                    }),\n                  }}\n                  data = {data} icons={tableIcons}/>        \n            </div>\n        </>\n    )\n\n    \n}\n\n\n\n\nconst mapStateToProps = state => {\n    return {\n        clients: state.clients.clients,\n        loading: state.clients.loading,\n        userId: state.auth.userId,\n        token: state.auth.token,\n        totalClients: state.clients.totalClients,\n        lowerRange: state.clients.lowerRange,\n        upperRange: state.clients.upperRange,\n        loadingDeleteClient: state.clients.loading_delete_client,\n        clientDeleteComplete: state.clients.clientDeleteComplete,\n        showDeleteClientModal: state.clients.showDeleteClientModal,\n        role: state.auth.role,\n        totals: state.clients.totals\n    };\n}\n//can access these function to dispatch actions - via props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnFetchClients: (token, filter, userId, limit, pageNumber) => dispatch(actions.fetchClients(token, filter, userId, limit, pageNumber)),\n        OnFetchClient: (token, client_id) => dispatch(actions.fetchClient(token, client_id)),\n        OnFetchAssessment: (token, assessment_id, client_id) => dispatch(actionsAssessments.fetchAssessment(token, assessment_id, client_id)),\n        OnSearchClients: (token, search, filter, userId) => dispatch(actions.searchClients(token, search, filter, userId)),\n        OnUpdateClient: (token, client_id, updated_client, isArchived) => dispatch(actions.updateClient(token, client_id, updated_client, isArchived)),\n        OnDeleteClient: (token, client_id) => dispatch(actions.deleteClient(token, client_id)),\n        OnSetConfirmModalDeleteClient: (val) => dispatch(actions.setConfirmModalDeleteClient(val)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SeriesFive)","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/SeriesSeven.js",["686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718"],"import React, { useEffect, useState } from 'react'\nimport Table from '../../components/Table/Table'\nimport classes from './Clients.module.css'\nimport * as actions from '../../store/actions/clients';\nimport * as actionsAssessments from '../../store/actions/assessments';\nimport { connect } from 'react-redux';\nimport ConfirmModal from '../../components/UI/Modals/ConfirmModal/ConfirmModal'\nimport FeedbackGlobal from '../../components/UI/FeedbackGlobal/FeedbackGlobal'\nimport Button from '../../components/UI/Button/Button'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport { checkIfDefined } from '../../shared/Utility'\nimport { forwardRef } from 'react';\nimport MaterialTable from \"material-table\";\nimport axios from 'axios';\nimport AddBox from '@material-ui/icons/AddBox';\nimport Save from '@material-ui/icons/Save';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { useLocation } from 'react-router-dom';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { Modal, Form, Col, Row} from \"react-bootstrap\";\nimport { FormGroup, Icon, TextareaAutosize } from '@material-ui/core'\nimport Select from 'react-select';\nimport Moment from 'moment';\nimport { format } from 'date-fns';\n\n\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n\n\nconst SeriesSeven = (props) => {\n\n    const [users, setUsers] = useState([])\n    const location = useLocation();\n\n\n    // Modal Data \n    // ======================================================\n\n    const [show, setShow] = useState(false);\n    const [customRowData, setCustomRowData] = useState({});\n\n    const handleClose = () => setShow(false);\n    const handleShow = (rowData) => {\n        setShow(true);\n        setCustomRowData(rowData);\n\n    }\n    \n\n    const addClient = (e) => {\n        alert('Lets add a supplier!')\n        alert('Done!')\n        e.preventDefault();\n        handleClose();\n      };\n\n\n      // ======================================================\n\n \n    let headings = [[\"Description\", \"priority1\"], [\"Type\", \"priority6\"], [\"Date Created\", \"priority8\"], [\"Code\", \"priority2\"], [\"Type\", \"priority5\"],\n    [\"Change\", \"priority9\"], [\"Status\", \"priority4\"]]\n    \n    useEffect(() => {\n\n        props.OnFetchClients(props.token, \"7000\", 0, location.state.supplierchild, 0)\n     \n        //alert(location.state.supplierchild) //Succesfully shows users supplierchild\n        // alert(props.clients.length)\n    }, [])\n\n    const data = props.clients !== undefined\n        ? props.clients\n        : []\n  \n\n    return (\n        <>\n<Modal  show={show} onHide={handleClose} style = {{position: 'absolute'}}>\n        <Modal.Header closeButton>\n          <Modal.Title>New Lenses</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <LoginForm onSubmit={addClient} custData={customRowData} />\n        </Modal.Body>\n      </Modal>\n\n            <div>\n                <ul>\n                    {users.map(user => (<li key={user.id}>{users.name}</li>))}\n                </ul>\n            </div>\n           \n            <div className={classes.Container}>     \n                <MaterialTable  \n                title = \"Series 7000\"   \n                \n                \n                \n                columns={[\n                    { title: 'Code', field: 'Code', editable: 'never'}, //, field: 'sort'\n                    { title: 'Change', field: 'Change', editable: 'never'},\n                    { title: 'Description', field: 'Description'},\n                    { title: 'Stock', field: 'Stock', editable: 'never'},\n                    { title: 'Index', field: 'Index'},\n                    { title: 'RqsHC', field: 'RqsHC', lookup: {\n                        'YES': 'YES',\n                        'NO': 'NO'\n                    }},\n                    { title: 'Sort', field: 'Sort'},\n                    { title: 'Lens Type', field: 'LenseGroupID',\n                lookup: {\n\n                    //'1': 'Base Lenses Gladd (n=1.523)',\n                    '1': 'STOCK Single Vision - Add to 71BS001',\n                    '2': 'SURFACED Single Vision - Add to 72BS001',\n                    '4': 'Bi/Trifocals (Add to 74BS001)',\n                    '6': 'Varifocal Distance/Near (Add to 76BS001)',\n                    '7': 'Add-Ons - Coatings',\n                    '8': 'Add-Ons - Tints',\n                    '9': 'Add-Ons - Other'\n                }         \n            \n            },\n                { title: 'lense_id', field: 'LensID', hidden: true},\n                { title: 'category', field: 'Category', hidden: true},\n                { title: 'abbreviation', field: 'Abbreviation', hidden: true},\n                { title: 'OAPrint', field: 'OAPrint', hidden: true},  \n                { title: 'supplier_parent', field: 'SupplierParent', hidden: true},\n                { title: 'Supplier Child', field: 'SupplierChild',  hidden: true},\n                { title: 'series_id', field: 'Series_ID', hidden: true},\n                { title: 'lense_group', field: 'LenseGroup', hidden: true},\n                { title: 'rule_1', field: 'Rule1', hidden: true},\n                { title: 'rule_2', field: 'Rule2', hidden: true},\n                { title: 'rule_4', field: 'Rule3', hidden: true},\n                { title: 'type', field: 'Type', hidden: true},\n                { title: 'start_date', field: 'StartDate', hidden: true},\n                { title: 'end_date', field: 'EndDate', hidden: true},\n                { title: 'active', field: 'Active', hidden: true},\n                { title: 'description', field: 'Description', hidden: true},\n                { title: 'Code', field: 'Code', hidden: true},\n                { title: 'change', field: 'Change', hidden: true},\n                { title: 'pack', field: 'Pack', hidden: true},\n                { title: 'stock', field: 'Stock', hidden: true},\n                { title: 'index', field: 'Index', hidden: true},\n                { title: 'saoa', field: 'SAOAGroup',  hidden: true},\n\n                { title: 'UV', field: 'UV', lookup: {\n                    'UV': 'UV',\n                    '': ''\n                }},\n                { title: 'AR', field: 'AR', type: 'checkbox', lookup: {\n                    'AR': 'YES',\n                    '': 'NO'\n                }},\n                { title: 'HC', field: 'HC', type: 'checkbox', lookup: {\n                    'HC': 'YES',\n                    '': 'NO'\n                }},\n                { title: 'PH', field: 'PH', type: 'checkbox', lookup: {\n                    'PH': 'YES',\n                    '': 'NO'\n                }},\n                { title: 'PO', field: 'PO', type: 'checkbox', lookup: {\n                    'PO': 'YES',\n                    '': 'NO'\n                }},\n                { title: 'TL', field: 'TL', type: 'checkbox', lookup: {\n                    'TL': 'YES',\n                    '': 'NO'\n                }},\n                { title: 'TD', field: 'TD', type: 'checkbox', lookup: {\n                    'TD': 'YES',\n                    '': 'NO'\n                }},\n                { title: 'MC', field: 'MC', type: 'checkbox', lookup: {\n                    'MC': 'YES',\n                    '': 'NO'\n                }\n                \n            },\n\n\n\n                ]} \n                options={{\n                    filtering: true,\n                    pageSize: 20,  \n                    addRowPosition: \"first\", \n                                                                                                                                                                              \n                    rowStyle: {\n                        fontSize: 12,\n                      //  backgroundColor: '#EEE'                                  \n                      },\n                      headerStyle: {\n                        backgroundColor: '#01579b',\n                        color: '#FFF'\n                      }\n\n                  }}\n\n                  actions={[\n                    // {\n                    //   //icon: AddCircleOutlineIcon,\n                    //   tooltip: 'Add series 7000 after current selection',\n                    //   onClick: (event, rowData) => handleShow(rowData)\n                    // }\n                  ]}\n                \n                detailPanel={[\n                    {\n                      tooltip: 'Show Name',\n                      render: rowData => {\n                        return (\n                          <div\n                            style={{\n                              fontSize: 18,\n                              textAlign: 'left',\n                              color: 'white',\n                              padding: '20px',\n                              backgroundColor: '#01579b',\n                            }}\n                          >\n                              <strong>Details: </strong> <br />\n                             \n                            Code: {rowData.Company} <br />\n                            Change: {rowData.Change} <br />\n                            Decription: {rowData.Description} <br />\n                            Stock: {rowData.Stock}<br />\n                            Index: {rowData.Index}<br />\n                            RsqHC:{rowData.RsqHC}<br />\n                            Sort: {rowData.Sort}<br />\n                            Lense Group ID:{ rowData.LensGroupID} <br />\n                            UV: {rowData.UV}<br />\n                            AR: {rowData.AR}<br />\n                            HC: {rowData.HC}<br />\n                            PH: {rowData.PH}<br />\n                            PO: {rowData.PO}<br />\n                            TL: {rowData.TL}<br />\n                            TD: {rowData.TD}<br />\n                            MC: {rowData.MC}<br />\n                          </div>\n                        )\n                      },\n                    }]}\n\n                  editable={{\n                    onRowUpdate: (newData, oldData) => //Must refresh after edit AND LensGroupID doesn't work\n                      new Promise((resolve) => {\n                        if(oldData.Description != newData.Description){\n                          newData.Change = \"s\"\n                        } \n\n\n                        if(newData.LenseGroupID == '1'){\n                          //alert(newData.LenseGroupID)\n                            newData.LenseGroup = 'STOCK Single Vision - Add to 71BS001'\n                            newData.Rule1 = \"Can add to 71BS001\"\n                            newData.Type = 'CORE'\n                        } else if(newData.LenseGroupID == '2'){\n                            newData.LenseGroup = 'SURFACED Single Vision - Add to 72BS001'\n                            newData.Rule1 = \"Can add to 72BS001\"\n                            newData.Type = 'CORE'\n                            newData.TL = ''\n                        } else if(newData.LenseGroupID == '4'){\n                            newData.LenseGroup = 'Bi/Trifocals (Add to 74BS001)'\n                            newData.Rule1 = \"Can add to 74BS001\"\n                            newData.Type = 'CORE'\n                            newData.TL = ''\n                        } else if(newData.LenseGroupID == '6'){\n                            newData.LenseGroup = 'Varifocal Distance/Near (Add to 76BS001)'\n                            newData.Rule1 = \"Can add to 76BS001\"\n                            newData.Type = 'CORE'\n                            newData.PO = ''\n                            newData.TL = ''\n                        } else if(newData.LenseGroupID == '7'){\n                            newData.LenseGroup = 'Add-Ons - Coatings'\n                            newData.Rule2 = 'Can add to all GLASS Base, Stock and Core lenses'\n                            newData.Type = 'ADDON'\n                            newData.Index = ''\n                            newData.UV = ''\n                            newData.AR = ''\n                            newData.HC = ''\n                            newData.PH = ''\n                            newData.PO = ''\n                            \n                        } else if(newData.LenseGroupID == '8'){\n                          alert('Here')\n                            newData.LenseGroup = 'Add-Ons - Tints'\n                            newData.Rule2 = 'Can add to all GLASS Base, Stock and Core lenses'\n                            newData.Type = 'ADDON'\n                            newData.Index = ''\n                            newData.UV = ''\n                            newData.AR = ''\n                            newData.HC = ''\n                            newData.PH = ''\n                            newData.PO = ''\n                        } else if(newData.LenseGroupID == '9'){\n                            newData.LenseGroup = 'Add-Ons - Other'\n                            newData.Rule2 = 'Can add to all GLASS Core lenses'\n                            newData.Type = 'ADDON'\n                            newData.Index = ''\n                            newData.UV = ''\n                            newData.AR = ''\n                            newData.HC = ''\n                            newData.PH = ''\n                            newData.PO = ''\n                            newData.TL = ''\n                            newData.TD = ''\n                            newData.MC = ''\n                        }\n\n                        \n                        //Change MODIFIED DATE \n                    \n                        \n                        props.OnUpdateClient(props.token, oldData.id, newData, false)\n                        resolve()\n                  }),\n                  onRowAdd: (newData) => //Develop Create Routes etc\n                    new Promise((resolve) => {\n\n                \n                //Setting the deafult values!\n                newData.Series_ID = 'Glass Lenses'\n                newData.LensID = ''\n                newData.Category = 'Material Lenses'\n                newData.SAOAGroup = '7000'\n                \n                \n\n                //Setting LenseGroup\n                newData.Rule1 = ''\n                newData.Rule2 = ''\n                newData.Rule3 = ''\n                newData.Stock = 'N'\n                if(newData.RqsHC == 'YES'){\n                    newData.Rule3 = 'Requires Hard Coat'\n                }\n                \n                // if(newData.LensGroupID == '1'){\n                //     newData.LenseGroup = 'Base Lenses Glass (n=1.523)'\n                //     newData.Type = 'STOCK'\n                //     newData.Stock = 'Y'\n                //     newData.TL = ''\n                // }\n                if(newData.LenseGroupID == '1'){\n                  //alert(newData.LenseGroupID)\n                    newData.LenseGroup = 'STOCK Single Vision - Add to 71BS001'\n                    newData.Rule1 = \"Can add to 71BS001\"\n                    newData.Type = 'CORE'\n                } else if(newData.LenseGroupID == '2'){\n                    newData.LenseGroup = 'SURFACED Single Vision - Add to 72BS001'\n                    newData.Rule1 = \"Can add to 72BS001\"\n                    newData.Type = 'CORE'\n                    newData.TL = ''\n                } else if(newData.LenseGroupID == '4'){\n                    newData.LenseGroup = 'Bi/Trifocals (Add to 74BS001)'\n                    newData.Rule1 = \"Can add to 74BS001\"\n                    newData.Type = 'CORE'\n                    newData.TL = ''\n                } else if(newData.LenseGroupID == '6'){\n                    newData.LenseGroup = 'Varifocal Distance/Near (Add to 76BS001)'\n                    newData.Rule1 = \"Can add to 76BS001\"\n                    newData.Type = 'CORE'\n                    newData.PO = ''\n                    newData.TL = ''\n                } else if(newData.LenseGroupID == '7'){\n                    newData.LenseGroup = 'Add-Ons - Coatings'\n                    newData.Rule2 = 'Can add to all GLASS Base, Stock and Core lenses'\n                    newData.Type = 'ADDON'\n                    newData.Index = ''\n                    newData.UV = ''\n                    newData.AR = ''\n                    newData.HC = ''\n                    newData.PH = ''\n                    newData.PO = ''\n                    \n                } else if(newData.LenseGroupID == '8'){\n                  alert('Here')\n                    newData.LenseGroup = 'Add-Ons - Tints'\n                    newData.Rule2 = 'Can add to all GLASS Base, Stock and Core lenses'\n                    newData.Type = 'ADDON'\n                    newData.Index = ''\n                    newData.UV = ''\n                    newData.AR = ''\n                    newData.HC = ''\n                    newData.PH = ''\n                    newData.PO = ''\n                } else if(newData.LenseGroupID == '9'){\n                    newData.LenseGroup = 'Add-Ons - Other'\n                    newData.Rule2 = 'Can add to all GLASS Core lenses'\n                    newData.Type = 'ADDON'\n                    newData.Index = ''\n                    newData.UV = ''\n                    newData.AR = ''\n                    newData.HC = ''\n                    newData.PH = ''\n                    newData.PO = ''\n                    newData.TL = ''\n                    newData.TD = ''\n                    newData.MC = ''\n                }\n\n                newData.Active = \"TRUE\"\n                newData.Change = 'N'\n                newData.Pack = ''\n                newData.OAPrint = 'TRUE'\n                newData.MedAidPrint = ''\n                \n\n\n                //Extras\n                  newData.field3= \"\"\n                       newData.field39= \"\"\n                       newData.field40= \"\"\n                       newData.field41= \"\"\n                       newData.DiscPrint=\"\"\n                       newData.Company = \"\"\n\n                       //Todo\n                       newData.Abbreviation = \"\"\n                       newData.StartDate = format(new Date(), 'yyyy/MM/dd')\n                       newData.EndDate = \"\"\n                       newData.Code = \"\"\n                       newData.SupplierChild = \"\"\n                        newData.SupplierParent =  \"\"\n\n         \n\n//ABBREVIATION\n\n                switch(location.state.supplierchild) {\n                  case \"*Base Lenses\" :\n                    newData.Abbreviation = \"BS\"\n                    break;\n                    case \"*Generic\" :\n                      newData.Abbreviation = \"GN\"\n                      break;\n                      case \"20/20 Vision Care\" :\n                        newData.Abbreviation = \"UM\"\n                        // code block\n                        break;\n                        case \"Apex Optical (Pty) Ltd\" :\n                          newData.Abbreviation = \"AP\"\n                    // code block\n                    break;\n                    case \"Arc Optics\" :\n                      newData.Abbreviation = \"AR\"\n                    // code block\n                    break;\n                    case \"Basic Optical\" :\n                      newData.Abbreviation = \"BA\"\n                    // code block\n                    break;\n                    case \"BBGR\" :\n                      newData.Abbreviation = \"BB\"\n                    // code block\n                    break;\n                    case \"BONO OPTICS\" :\n                      newData.Abbreviation = \"BN\"\n                    // code block\n                    break;\n                    case \"Carl Zeiss Vision - Synchrony\" :\n                      newData.Abbreviation = \"CS\"\n                    // code block\n                    break;\n                    case \"Carl Zeiss Vision - Zeiss\" :\n                      newData.Abbreviation = \"CZ\"\n                    // code block\n                    break;\n                    case \"Classic Eyes\" :\n                      newData.Abbreviation = \"CE\"\n                    // code block\n                    break;\n                    case \"Complete Eyewear\" :\n                      newData.Abbreviation = \"CY\"\n                      // code block\n                      break;\n                      case \"Crystalbrite\" :\n                        newData.Abbreviation = \"CB\"\n                        // code block\n                        break;\n                        case \"Damar Lab\" :\n                          newData.Abbreviation = \"LS\"\n                          // code block\n                          break;\n                          case \"Eagle Optical\" :\n                            newData.Abbreviation = \"EA\"\n                            // code block\n                            break;\n                            case \"Easyview\" :\n                              newData.Abbreviation = \"EW\"\n                              // code block\n                              break;\n                              case \"Elite Optical\" :\n                                newData.Abbreviation = \"ET\"\n                                // code block\n                                break;\n                                case \"Entry\" :\n                                  newData.Abbreviation = \"VS\"\n                                  // code block\n                                  break;\n                                  case \"eOptics\" :\n                                    newData.Abbreviation = \"EL\"\n                                    // code block\n                                    break;\n                                    case \"Essilor\" :\n                                      newData.Abbreviation = \"ES\"\n                                      // code block\n                                      break;\n                                      case \"Eyecon\" :\n                                        newData.Abbreviation = \"EC\"\n                                        // code block\n                                        break;\n                                        case \"Falcon Eyelab\" :\n                                          newData.Abbreviation = \"FE\"\n                                          // code block\n                                          break;\n                                          case \"Focus Optical\" :\n                                            newData.Abbreviation = \"FC\"\n                                            // code block\n                                            break;\n                                            case \"GKB\" :\n                                              newData.Abbreviation = \"GK\"\n                                              // code block\n                                              break;\n                                              case \"HLM Optics\" :\n                                                newData.Abbreviation = \"HL\"\n                                              // code block\n                                              break;\n                                              case \"Hoya\" :\n                                                newData.Abbreviation = \"HY\"\n                                              // code block\n                                              break;\n                                              case \"Indico\" :\n                                                newData.Abbreviation = \"ND\"\n                                              // code block\n                                              break;\n                                              case \"KFML\" :\n                                                newData.Abbreviation = \"KF\"\n                                              // code block\n                                              break;\n                                              case \"Kodak\" :\n                                                newData.Abbreviation = \"KD\"\n                                              // code block\n                                              break;\n                                              case \"Lenscape eOptics\" : newData.Abbreviation = \"EL\"\n                                              // code block\n                                              break;\n                                              case \"Lenzxpress\" : newData.Abbreviation = \"LX\"\n                                              // code block\n                                              break;\n                                              case \"Maui Jim\" : newData.Abbreviation = \"MJ\"\n                                              // code block\n                                              break;\n                                              case \"MGear Eyewear\" :newData.Abbreviation = \"MG\"\n                                              // code block\n                                              break;\n                                              case \"MR Lenses\" :newData.Abbreviation = \"MR\"\n                                              // code block\n                                              break;\n                                              case \"Oakley\" :newData.Abbreviation = \"KL\"\n                                              // code block\n                                              break;\n                                              case \"OS Optical\" :newData.Abbreviation = \"SC\"\n                                              // code block\n                                              break;\n                                              case \"OTL Lens Lab\" :newData.Abbreviation = \"TL\"\n                                              // code block\n                                              break;\n                                              case \"Pentax\" :newData.Abbreviation = \"PN\"\n                                              // code block\n                                              break;\n                                              case \"Precision Optical\" :newData.Abbreviation = \"PP\"\n                                              // code block\n                                              break;\n                                              case \"Quality Optical\" :newData.Abbreviation = \"LT\"\n                                              // code block\n                                              break;\n                                              case \"Ray-Ban\" :newData.Abbreviation = \"RB\"\n                                              // code block\n                                              break;\n                                              case \"Republic Optical\" :newData.Abbreviation = \"RP\"\n                                              // code block\n                                              break;\n                                              case \"RVT Optical\" :newData.Abbreviation = \"RV\"\n                                              // code block\n                                              break;\n                                              case \"Seiko\" :newData.Abbreviation = \"SK\"\n                                              // code block\n                                              break;\n                                              case \"Seiko - Starvision\" :newData.Abbreviation = \"SV\"\n                                              // code block\n                                              break;\n                                              case \"Shamir\" :newData.Abbreviation = \"SH\"\n                                              // code block\n                                              break;\n                                              case \"Smith Optics\" :newData.Abbreviation = \"SM\"\n                                              // code block\n                                              break;\n                                              case \"Specialized\" :newData.Abbreviation = \"SZ\"\n                                              // code block\n                                              break;\n                                              case \"SpectiVision\" :newData.Abbreviation = \"SP\"\n                                              // code block\n                                              break;\n                                              case \"Spherical\" :newData.Abbreviation = \"PH\"\n                                              // code block\n                                              break;\n                                              case \"STEPPER\" :newData.Abbreviation = \"ST\"\n                                              // code block\n                                              break;\n                                              case \"Thai Optical Group\" :newData.Abbreviation = \"TH\"\n                                              // code block\n                                              break;\n                                              case \"The Lens Warehouse\" :newData.Abbreviation = \"LW\"\n                                                // code block\n                                                break;\n                                                case \"Torga\" :newData.Abbreviation = \"TG\"\n                                                  // code block\n                                                  break;\n                                                  case \"Ultimate Optical\" :newData.Abbreviation = \"UT\"\n                                                    // code block\n                                                    break;\n                                                    case \"Unbranded\" :newData.Abbreviation = \"UB\"\n                                                      // code block\n                                                      break;\n                                                      case \"Unique Optical\" :newData.Abbreviation = \"UP\"\n                                                        // code block\n                                                        break;\n                                                        case \"VM5 Optical\" :newData.Abbreviation = \"VT\"\n                                                          // code block\n                                                          break;\n                                                          case \"VME\" :newData.Abbreviation = \"VM\"\n                                                            // code block\n                                                            break;\n                                                            case \"Vue Optical\" :newData.Abbreviation = \"VE\"\n                                                            // code block\n                                                            break;\n                                                            case \"Wize Eyes\" :newData.Abbreviation = \"WE\"\n                                                            // code block\n                                                            break;\n                                                            case \"Younger\" :newData.Abbreviation = \"YG\"\n                                                            // code block\n                                                            break;\n\n\n                  default:\n                    // code block\n                }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n                const dat = {\n                  'LensID': newData.LensID, \n                  'Category': newData.Category, \n                  'field3': newData.field3,\n                  'Sort': newData.Sort,\n                  'SupplierParent': location.state.supplierchild,\n                  'SupplierChild': location.state.supplierchild,\n                  'Abbreviation': newData.Abbreviation,\n                  'Series_ID': newData.Series_ID,\n                  'LenseGroupID': newData.LenseGroupID, \n                  'LenseGroup': newData.LenseGroup,\n                  'Rule1': newData.Rule1,\n                  'Rule2': newData.Rule2,\n                  'Rule3': newData.Rule3,\n                  'RqsHC': newData.RqsHC,\n                  'Type': newData.Type,\n                  'StartDate': newData.StartDate,\n                  'EndDate': newData.EndDate, \n                  'Active': newData.Active,\n                  'Code': newData.Code,\n                  'Change': newData.Change,\n                  'Description': newData.Description,\n                  'Pack': newData.Pack,\n                  'Stock': newData.Stock,\n                  'Index': newData.Index,\n                  'UV': newData.UV,\n                  'AR': newData.AR,\n                  'HC': newData.HC, \n                  'PH': newData.PH,\n                  'PO': newData.PO,\n                  'TL': newData.TL,\n                  'TD': newData.TD,\n                  'MC': newData.MC,\n                  'OAPrint': newData.OA,\n                  'MedAidPrint': newData.MedAidPrint,\n                  'DiscPrint': newData.DiscPrint,\n                  'Company': location.state.supplierchild,\n                  'field39': newData.field39,\n                  'field40': newData.field40,\n                  'field41': newData.field41,\n                  'SAOAGroup': newData.SAOAGroup\n                }\n\n\n                // const dat = {\n                //   'LensID': \"53\", \n                //   'Category': \"Materials Lenses\", \n                //   'field3': \"\",\n                //   'Sort': \"11\",\n                //   'SupplierParent': \"Unbranded\",\n                //   'SupplierChild': \"Unbranded\",\n                //   'Abbreviation': \"UB\",\n                //   'Series_ID': \"Plastic (CR39) Lenses\",\n                //   'LenseGroupID': \"1\", \n                //   'LenseGroup': \"STOCK Single Vision - Add to 81BS001\",\n                //   'Rule1': \"Can add to 81BS001\",\n                //   'Rule2': \"\",\n                //   'Rule3': \"\",\n                //   'RqsHC': \"NO\",\n                //   'Type': \"STOCK\",\n                //   'StartDate': \"05/01/2017\",\n                //   'EndDate': \"\", \n                //   'Active': \"1\",\n                //   'Code': \"22222\",\n                //   'Change': \"\",\n                //   'Description': \"grant 1.50 Uncoated 1.5 Standard\",\n                //   'Pack': \"\",\n                //   'Stock': \"Y\",\n                //   'Index': \"1.65\",\n                //   'UV': \"UV\",\n                //   'AR': \"AR\",\n                //   'HC': \"HC\", \n                //   'PH': \"PH\",\n                //   'PO': \"PO\",\n                //   'TL': \"TL\",\n                //   'TD': \"TD\",\n                //   'MC': \"MC\",\n                //   'OAPrint': \"1\",\n                //   'MedAidPrint': \"1\",\n                //   'DiscPrint': \"1\",\n                //   'Company': \"Zeiss\",\n                //   'field39': \"\",\n                //   'field40': \"\",\n                //   'field41': \"\",\n                //   'SAOAGroup': \"7000\"\n                // }\n                //ADDING TO DB!!\n                //alert(JSON.stringify(newData, null, 4));\n                   props.OnCreate(props.token, dat)\n\n\n\n\n\n           \n\n\n\n // new Promise((resolve) => {\n                    //   props.OnDeleteClient(props.token, oldData.id)\n                    //   props.data.splice(0, 1);\n                    //   resolve()\n                   \n                    //   return\n                      \n                    // }\n\n\n\n                     resolve()\n                    }),\n\n                  onRowDelete: (oldData) => //Working\n                  new Promise((resolve) => {\n                    var newData = oldData\n                    newData.EndDate = format(new Date(), 'yyyy/MM/dd')\n                    newData.Change = \"X\"\n                    props.OnUpdateClient(props.token, oldData.id, newData, false)\n                    resolve()\n              }),\n                  }}\n                  data = {data} icons={tableIcons}/>        \n            </div>\n        </>\n    )\n\n    \n}\n\n\nconst LoginForm = ({ onSubmit, custData }) => {\n\n    return (\n\n<Form noValidate >\n          <Row className=\"mb-3\">\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n    <Form.Label>Description</Form.Label>\n    <Form.Control as=\"textarea\" rows={3} />\n  </Form.Group>\n  </Row>\n\n\n  <Row className=\"mb-3\">\n\n  <Form.Group\n              as={Col}\n              md=\"2\"\n              controlId=\"validationFormik103\"\n              className=\"position-relative\"\n            >\n              <Form.Label>Index</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"\"\n                name=\"\"\n              />\n\n              <Form.Control.Feedback type=\"invalid\" tooltip>\n           \n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group\n              as={Col}\n              md=\"6\"\n              controlId=\"validationFormik103\"\n              className=\"position-relative\"\n            >\n              <Form.Label>Sort</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"\"\n                name=\"\"\n                defaultValue={custData.Sort} //Add one!!\n              />\n\n              <Form.Control.Feedback type=\"invalid\" tooltip>\n           \n              </Form.Control.Feedback>\n            </Form.Group>\n\n\n            <Row className=\"mb-3\">\n<Form.Group\n              as={Col}\n              md=\"4\"\n              className=\"position-relative\">\n                  <Form.Label>Lense Group</Form.Label>\n                  \n<select class=\"mb-3\">\n<option>Default select</option>\n  <option value=\"1\">STOCK Single Vision - Add to 71BS001</option>\n  <option value=\"2\">SURFACED Single Vision - Add to 72BS001</option>\n  <option value=\"4\">Bi/Trifocals (Add to 74BS001)</option>\n  <option value=\"6\">Varifocal Distance/Near (Add to 76BS001)</option>\n  <option value=\"7\">Add-Ons - Coatings</option>\n  <option value=\"8\">Add-Ons - Tints</option>\n  <option value=\"9\">Add-Ons - Other</option>\n</select></Form.Group>\n</Row>\n\n            \n            </Row>\n\n            <Row className=\"mb-6\">\n\n    <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"RqsHQ\" />\n  </Form.Group>\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"UV\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"AR\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"HC\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"PH\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"PO\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"TL\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"TD\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"MC\" />\n  </Form.Group>\n  </Row>\n\n\n       \n         \n         \n          <Button type=\"submit\" clicked={() => {onSubmit()} }>Submit form</Button>\n      \n        </Form>\n    );\n  };\n\nconst mapStateToProps = state => {\n    return {\n        clients: state.clients.clients,\n        loading: state.clients.loading,\n        userId: state.auth.userId,\n        token: state.auth.token,\n        totalClients: state.clients.totalClients,\n        lowerRange: state.clients.lowerRange,\n        upperRange: state.clients.upperRange,\n        loadingDeleteClient: state.clients.loading_delete_client,\n        clientDeleteComplete: state.clients.clientDeleteComplete,\n        showDeleteClientModal: state.clients.showDeleteClientModal,\n        role: state.auth.role,\n        totals: state.clients.totals\n    };\n}\n//can access these function to dispatch actions - via props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnFetchClients: (token, filter, userId, limit, pageNumber) => dispatch(actions.fetchClients(token, filter, userId, limit, pageNumber)),\n        OnFetchClient: (token, client_id) => dispatch(actions.fetchClient(token, client_id)),\n        OnFetchAssessment: (token, assessment_id, client_id) => dispatch(actionsAssessments.fetchAssessment(token, assessment_id, client_id)),\n        OnSearchClients: (token, search, filter, userId) => dispatch(actions.searchClients(token, search, filter, userId)),\n        OnUpdateClient: (token, client_id, updated_client, isArchived) => dispatch(actions.updateClient(token, client_id, updated_client, isArchived)),\n        OnDeleteClient: (token, client_id) => dispatch(actions.deleteClient(token, client_id)),\n        OnSetConfirmModalDeleteClient: (val) => dispatch(actions.setConfirmModalDeleteClient(val)),\n        OnCreate: (token, client_id) => dispatch(actions.createClient(token, client_id))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SeriesSeven)\n\n\n             ","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/SeriesSix.js",["719","720","721","722","723","724","725"],"import React, { useEffect, useState } from 'react'\nimport Table from '../../components/Table/Table'\nimport classes from './Clients.module.css'\nimport * as actions from '../../store/actions/clients';\nimport * as actionsAssessments from '../../store/actions/assessments';\nimport { connect } from 'react-redux';\nimport ConfirmModal from '../../components/UI/Modals/ConfirmModal/ConfirmModal'\nimport FeedbackGlobal from '../../components/UI/FeedbackGlobal/FeedbackGlobal'\nimport Button from '../../components/UI/Button/Button'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport { checkIfDefined } from '../../shared/Utility'\nimport { forwardRef } from 'react';\nimport MaterialTable from \"material-table\";\nimport axios from 'axios';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { useLocation } from 'react-router-dom';\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n\n\nconst SeriesSix = (props) => {\n\n    const [users, setUsers] = useState([])\n    const location = useLocation();\n\n    useEffect(() => {\n       \n    })    \n    let headings = [[\"Description\", \"priority1\"], [\"Type\", \"priority6\"], [\"Date Created\", \"priority8\"], [\"Code\", \"priority2\"], [\"Type\", \"priority5\"],\n    [\"Change\", \"priority9\"], [\"Status\", \"priority4\"]]\n    \n    useEffect(() => {\n        props.OnFetchClients(props.token,\"6000\", 0, location.state.company, 0)\n    }, [])\n\n    const [state, setState] = useState({\n        fullname: \"\",\n        id: \"\"\n    })\n    \n\n    const data = props.clients !== undefined\n        ? props.clients\n        : []\n  \n\n    return (\n        <>\n            <ConfirmModal\n                show={props.showDeleteClientModal}\n                close={() => props.OnSetConfirmModalDeleteClient(false)}\n                removeHeading={props.clientDeleteComplete}\n            >{!props.loadingDeleteClient\n                ? !props.clientDeleteComplete\n                    ? <> <p>By clicking confirm you are agreeing to <strong>delete {state.fullname}</strong>.</p>\n                        <div className={classes.ButtonGroup}>\n                            <Button buttonType={\"secondary\"} clicked={() => props.OnSetConfirmModal(false)}>Cancel</Button>\n                            <Button buttonType={\"primary\"} clicked={() => props.OnDeleteClient(props.token, state.id)}>Confirm</Button>\n                        </div> </>\n                    : <FeedbackGlobal type=\"Success\" successMessage={\"Successfully deleted!\"} />\n                : <Spinner calledLocation=\"Staff\" loadingMessage={`Deleting ${state.fullname}`} />}\n            </ConfirmModal>\n\n            <div>\n                <ul>\n                    {users.map(user => (<li key={user.id}>{users.name}</li>))}\n                </ul>\n            </div>\n           \n            <div className={classes.Container}>     \n                <MaterialTable  \n                title = \"Series 6000\"         \n                columns={[\n                    { title: 'Lense_ID', field: 'LensID'}, //, field: 'sort'\n                    { title: 'Category', field: 'Category'},\n                    { title: 'Company', field: 'Company'},\n                    { title: 'SAOAGroup', field: 'SAOAGroup'},\n                    { title: 'SeriesGroup', field: 'Series_ID'},\n                    { title: 'Sort', field: 'Sort'},\n                    { title: 'LensGroup_ID', field: 'LensGroupID'}\n                    // { title: 'Category'}, //, field: 'sort'\n                    // { title: 'SAOASeries'},\n                    // { title: 'Sort'},\n                    // { title: 'Series_ID'},\n                    // { title: 'LensGroup'},\n                    // { title: 'Start Date'},\n                    // { title: 'End Date'},\n                    // { title: 'Code'},\n                    // { title: 'Change'},\n                    // { title: 'Description'}\n                ]} \n                options={{\n                    exportButton: true,\n                    filtering: true,\n                    pageSize: 20,                                                                                                                                                             \n                    rowStyle: {\n                        fontSize: 12,                                   \n                      }\n                  }}\n                \n                  editable={{\n                    onRowUpdate: (newData, oldData) =>\n                      new Promise((resolve) => {\n                        //handleRowUpdate(newData, oldData, resolve);\n                        props.OnUpdateClient(props.token, oldData.id, newData, false)\n                        resolve()\n                        window.location.reload();\n                        return\n                    \n                        \n                  }),\n                  onRowAdd: (newData) =>\n                    new Promise((resolve) => {\n                    \n                     resolve()\n                    }),\n\n                  onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                        alert('here')\n                      //handleRowDelete(oldData, resolve)\n                      props.OnDeleteClient(props.token, oldData.id)\n                      props.data.splice(0, 1);\n                      resolve()\n                   \n                      return\n                      \n                    }),\n                  }}\n                  data = {data} icons={tableIcons}/>        \n            </div>\n        </>\n    )\n\n    \n}\n\n\n\n\nconst mapStateToProps = state => {\n    return {\n        clients: state.clients.clients,\n        loading: state.clients.loading,\n        userId: state.auth.userId,\n        token: state.auth.token,\n        totalClients: state.clients.totalClients,\n        lowerRange: state.clients.lowerRange,\n        upperRange: state.clients.upperRange,\n        loadingDeleteClient: state.clients.loading_delete_client,\n        clientDeleteComplete: state.clients.clientDeleteComplete,\n        showDeleteClientModal: state.clients.showDeleteClientModal,\n        role: state.auth.role,\n        totals: state.clients.totals\n    };\n}\n//can access these function to dispatch actions - via props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnFetchClients: (token, filter, userId, limit, pageNumber) => dispatch(actions.fetchClients(token, filter, userId, limit, pageNumber)),\n        OnFetchClient: (token, client_id) => dispatch(actions.fetchClient(token, client_id)),\n        OnFetchAssessment: (token, assessment_id, client_id) => dispatch(actionsAssessments.fetchAssessment(token, assessment_id, client_id)),\n        OnSearchClients: (token, search, filter, userId) => dispatch(actions.searchClients(token, search, filter, userId)),\n        OnUpdateClient: (token, client_id, updated_client, isArchived) => dispatch(actions.updateClient(token, client_id, updated_client, isArchived)),\n        OnDeleteClient: (token, client_id) => dispatch(actions.deleteClient(token, client_id)),\n        OnSetConfirmModalDeleteClient: (val) => dispatch(actions.setConfirmModalDeleteClient(val)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SeriesSix)","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/SeriesTwo.js",["726","727","728","729","730","731","732"],"import React, { useEffect, useState } from 'react'\nimport Table from '../../components/Table/Table'\nimport classes from './Clients.module.css'\nimport * as actions from '../../store/actions/clients';\nimport * as actionsAssessments from '../../store/actions/assessments';\nimport { connect } from 'react-redux';\nimport ConfirmModal from '../../components/UI/Modals/ConfirmModal/ConfirmModal'\nimport FeedbackGlobal from '../../components/UI/FeedbackGlobal/FeedbackGlobal'\nimport Button from '../../components/UI/Button/Button'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport { checkIfDefined } from '../../shared/Utility'\nimport { forwardRef } from 'react';\nimport MaterialTable from \"material-table\";\nimport axios from 'axios';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { useLocation } from 'react-router-dom';\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n\n\nconst SeriesTwo = (props) => {\n    const location = useLocation();\n    const [users, setUsers] = useState([])\n\n\n    useEffect(() => {\n       \n    })    \n    let headings = [[\"Description\", \"priority1\"], [\"Type\", \"priority6\"], [\"Date Created\", \"priority8\"], [\"Code\", \"priority2\"], [\"Type\", \"priority5\"],\n    [\"Change\", \"priority9\"], [\"Status\", \"priority4\"]]\n    \n    useEffect(() => {\n        let comp = location.state.company\n        props.OnFetchClients(props.token, \"2000\", 0, comp, 0)\n    }, [])\n\n    const [state, setState] = useState({\n        fullname: \"\",\n        id: \"\"\n    })\n    \n\n    const data = props.clients !== undefined\n        ? props.clients\n        : []\n  \n\n    return (\n        <>\n            <ConfirmModal\n                show={props.showDeleteClientModal}\n                close={() => props.OnSetConfirmModalDeleteClient(false)}\n                removeHeading={props.clientDeleteComplete}\n            >{!props.loadingDeleteClient\n                ? !props.clientDeleteComplete\n                    ? <> <p>By clicking confirm you are agreeing to <strong>delete {state.fullname}</strong>.</p>\n                        <div className={classes.ButtonGroup}>\n                            <Button buttonType={\"secondary\"} clicked={() => props.OnSetConfirmModal(false)}>Cancel</Button>\n                            <Button buttonType={\"primary\"} clicked={() => props.OnDeleteClient(props.token, state.id)}>Confirm</Button>\n                        </div> </>\n                    : <FeedbackGlobal type=\"Success\" successMessage={\"Successfully deleted!\"} />\n                : <Spinner calledLocation=\"Staff\" loadingMessage={`Deleting ${state.fullname}`} />}\n            </ConfirmModal>\n\n            <div>\n                <ul>\n                    {users.map(user => (<li key={user.id}>{users.name}</li>))}\n                </ul>\n            </div>\n           \n            <div className={classes.Container}>     \n                <MaterialTable  \n                title = \"Series 2000\"         \n                columns={[\n                    { title: 'Lense_ID', field: 'LensID'}, //, field: 'sort'\n                    { title: 'Category', field: 'Category'},\n                    { title: 'Company', field: 'Company'},\n                    { title: 'SAOAGroup', field: 'SAOAGroup'},\n                    { title: 'SeriesGroup', field: 'Series_ID'},\n                    { title: 'Sort', field: 'Sort'},\n                    { title: 'LensGroup_ID', field: 'LensGroupID'}\n                    // { title: 'Category'}, //, field: 'sort'\n                    // { title: 'SAOASeries'},\n                    // { title: 'Sort'},\n                    // { title: 'Series_ID'},\n                    // { title: 'LensGroup_ID'},\n                    // { title: 'LensGroup'},\n                    // { title: 'Rule1'},\n                    // { title: 'Rule2'},\n                    // { title: 'Rule3'},\n                    // { title: 'Code'},\n                    // { title: 'Start Date'},\n                    // { title: 'End Date'},\n                    // { title: 'Modified Date'},\n                    // { title: 'Active'},\n                    // { title: 'OAPrint'},\n                    // { title: 'Supplier Parent'},\n                    // { title: 'Supplier Child'},\n                    // { title: 'Additional Rules'},\n                    // { title: 'Change'},\n                    // { title: 'Description'},\n                    // { title: 'Pack'}\n\n\n\n                ]} \n                options={{\n                    exportButton: true,\n                    filtering: true,\n                    pageSize: 20,                                                                                                                                                             \n                    rowStyle: {\n                        fontSize: 12,                                   \n                      }\n                  }}\n                \n                  editable={{\n                    onRowUpdate: (newData, oldData) =>\n                      new Promise((resolve) => {\n                        //handleRowUpdate(newData, oldData, resolve);\n                        props.OnUpdateClient(props.token, oldData.id, newData, false)\n                        resolve()\n                        window.location.reload();\n                        return\n                    \n                        \n                  }),\n                  onRowAdd: (newData) =>\n                    new Promise((resolve) => {\n                    \n                     resolve()\n                    }),\n\n                  onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                        alert('here')\n                      //handleRowDelete(oldData, resolve)\n                      props.OnDeleteClient(props.token, oldData.id)\n                      props.data.splice(0, 1);\n                      resolve()\n                   \n                      return\n                      \n                    }),\n                  }}\n                  data = {data} icons={tableIcons}/>        \n            </div>\n        </>\n    )\n\n    \n}\n\n\n\n\nconst mapStateToProps = state => {\n    return {\n        clients: state.clients.clients,\n        loading: state.clients.loading,\n        userId: state.auth.userId,\n        token: state.auth.token,\n        totalClients: state.clients.totalClients,\n        lowerRange: state.clients.lowerRange,\n        upperRange: state.clients.upperRange,\n        loadingDeleteClient: state.clients.loading_delete_client,\n        clientDeleteComplete: state.clients.clientDeleteComplete,\n        showDeleteClientModal: state.clients.showDeleteClientModal,\n        role: state.auth.role,\n        totals: state.clients.totals\n    };\n}\n//can access these function to dispatch actions - via props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnFetchClients: (token, filter, userId, limit, pageNumber) => dispatch(actions.fetchClients(token, filter, userId, limit, pageNumber)),\n        OnFetchClient: (token, client_id) => dispatch(actions.fetchClient(token, client_id)),\n        OnFetchAssessment: (token, assessment_id, client_id) => dispatch(actionsAssessments.fetchAssessment(token, assessment_id, client_id)),\n        OnSearchClients: (token, search, filter, userId) => dispatch(actions.searchClients(token, search, filter, userId)),\n        OnUpdateClient: (token, client_id, updated_client, isArchived) => dispatch(actions.updateClient(token, client_id, updated_client, isArchived)),\n        OnDeleteClient: (token, client_id) => dispatch(actions.deleteClient(token, client_id)),\n        OnSetConfirmModalDeleteClient: (val) => dispatch(actions.setConfirmModalDeleteClient(val)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SeriesTwo)","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/SeriesOne.js",["733","734","735","736"],"import React, { useEffect, useState } from 'react'\nimport classes from './Clients.module.css'\nimport * as actions from '../../store/actions/clients';\nimport * as actionsAssessments from '../../store/actions/assessments';\nimport { connect } from 'react-redux';\nimport { forwardRef } from 'react';\nimport MaterialTable from \"material-table\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { useLocation } from 'react-router-dom';\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n\n\nconst SeriesOne = (props) => {\n    const [users, setUsers] = useState([])\n    const location = useLocation();\n\n \n    \n    useEffect(() => {\n        \n    props.OnFetchClients(props.token, \"1000\", 0, location.state.company, 0)\n    \n    }, [])\n\n    const [state, setState] = useState({\n        fullname: \"\",\n        id: \"\"\n    })\n    \n\n    const data = props.clients !== undefined\n        ? props.clients\n        : [] \n\n\n    return (\n        <>\n\n            <div>\n                <ul>\n                    {users.map(user => (<li key={user.id}>{users.name}</li>))}\n                </ul>\n            </div>\n           \n            <div className={classes.Container}>     \n                <MaterialTable  \n                title = \"Series 1000\"         \n                columns={[\n                { title: 'Lense_ID', field: 'LensID'}, //, field: 'sort'\n                { title: 'Category', field: 'Category'},\n                { title: 'Company', field: 'Company'},\n                { title: 'SAOAGroup', field: 'SAOAGroup'},\n                { title: 'SeriesGroup', field: 'Series_ID'},\n                { title: 'Sort', field: 'Sort'},\n                { title: 'LensGroup_ID', field: 'LensGroupID'},\n                { title: 'Rule1', field: 'Rule1'},\n                { title: 'Rule2', field: 'Rule2'},\n                { title: 'Rule3', field: 'Rule3'},\n                { title: 'Rule4', field: 'Rule4'},\n                { title: 'Rule5', field: 'Rule5'},\n                { title: 'Additional Rules', field: 'Additional Rules'},\n                { title: 'Start Date', field: 'Start Date'},\n                { title: 'End Date'},\n                { title: 'Active'},\n                { title: 'Code'},\n                { title: 'Change'},\n                { title: 'Description'},                            \n                { title: 'RVU'} \n                ]} \n                    options={{\n                    exportButton: true,\n                    filtering: true,\n                    pageSize: 50,                                                                                                                                                       \n                    rowStyle: {\n                        fontSize: 12,                                   \n                      }\n                  }}\n                  \n                \n                  editable={{\n                    onRowUpdate: (newData, oldData) =>\n                      new Promise((resolve) => {\n                        //handleRowUpdate(newData, oldData, resolve);\n                        props.OnUpdateClient(props.token, oldData.id, newData, false)\n                        resolve()\n                        window.location.reload();\n                        return\n                    \n                        \n                  }),\n                  onRowAdd: (newData) =>\n                    new Promise((resolve) => {\n                     resolve()\n                    }),\n\n                  onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                        alert('here')\n                      //handleRowDelete(oldData, resolve)\n                      props.OnDeleteClient(props.token, oldData.id)\n                      props.data.splice(0, 1);\n                      resolve()\n                   \n                      return\n                      \n                    }),\n                  }}\n                  data = {data} icons={tableIcons}/>        \n            </div>\n        </>\n    )\n\n    \n}\n\n\n\n\nconst mapStateToProps = state => {\n    return {\n        clients: state.clients.clients,\n        loading: state.clients.loading,\n        userId: state.auth.userId,\n        token: state.auth.token,\n        totalClients: state.clients.totalClients,\n        lowerRange: state.clients.lowerRange,\n        upperRange: state.clients.upperRange,\n        loadingDeleteClient: state.clients.loading_delete_client,\n        clientDeleteComplete: state.clients.clientDeleteComplete,\n        showDeleteClientModal: state.clients.showDeleteClientModal,\n        role: state.auth.role,\n        totals: state.clients.totals\n    };\n}\n//can access these function to dispatch actions - via props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnFetchClients: (token, filter, userId, limit, pageNumber) => dispatch(actions.fetchClients(token, filter, userId, limit, pageNumber)),\n        OnFetchClient: (token, client_id) => dispatch(actions.fetchClient(token, client_id)),\n        OnFetchAssessment: (token, assessment_id, client_id) => dispatch(actionsAssessments.fetchAssessment(token, assessment_id, client_id)),\n        OnSearchClients: (token, search, filter, userId) => dispatch(actions.searchClients(token, search, filter, userId)),\n        OnUpdateClient: (token, client_id, updated_client, isArchived) => dispatch(actions.updateClient(token, client_id, updated_client, isArchived)),\n        OnDeleteClient: (token, client_id) => dispatch(actions.deleteClient(token, client_id)),\n        OnSetConfirmModalDeleteClient: (val) => dispatch(actions.setConfirmModalDeleteClient(val)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SeriesOne)","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/SeriesFour.js",["737","738","739","740","741","742","743"],"import React, { useEffect, useState } from 'react'\nimport Table from '../../components/Table/Table'\nimport classes from './Clients.module.css'\nimport * as actions from '../../store/actions/clients';\nimport * as actionsAssessments from '../../store/actions/assessments';\nimport { connect } from 'react-redux';\nimport ConfirmModal from '../../components/UI/Modals/ConfirmModal/ConfirmModal'\nimport FeedbackGlobal from '../../components/UI/FeedbackGlobal/FeedbackGlobal'\nimport Button from '../../components/UI/Button/Button'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport { checkIfDefined } from '../../shared/Utility'\nimport { forwardRef } from 'react';\nimport MaterialTable from \"material-table\";\nimport axios from 'axios';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { useLocation } from 'react-router-dom';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n\n\nconst SeriesFour = (props) => {\n\n    const [users, setUsers] = useState([])\n    const location = useLocation();\n\n    useEffect(() => {\n       \n    })    \n    let headings = [[\"Description\", \"priority1\"], [\"Type\", \"priority6\"], [\"Date Created\", \"priority8\"], [\"Code\", \"priority2\"], [\"Type\", \"priority5\"],\n    [\"Change\", \"priority9\"], [\"Status\", \"priority4\"]]\n    \n    useEffect(() => {\n        props.OnFetchClients(props.token, \"4000\", 0, location.state.company, 0)\n    }, [])\n\n    const [state, setState] = useState({\n        fullname: \"\",\n        id: \"\"\n    })\n    \n\n    const data = props.clients !== undefined\n        ? props.clients\n        : []\n  \n\n    return (\n        <>\n            <ConfirmModal\n                show={props.showDeleteClientModal}\n                close={() => props.OnSetConfirmModalDeleteClient(false)}\n                removeHeading={props.clientDeleteComplete}\n            >{!props.loadingDeleteClient\n                ? !props.clientDeleteComplete\n                    ? <> <p>By clicking confirm you are agreeing to <strong>delete {state.fullname}</strong>.</p>\n                        <div className={classes.ButtonGroup}>\n                            <Button buttonType={\"secondary\"} clicked={() => props.OnSetConfirmModal(false)}>Cancel</Button>\n                            <Button buttonType={\"primary\"} clicked={() => props.OnDeleteClient(props.token, state.id)}>Confirm</Button>\n                        </div> </>\n                    : <FeedbackGlobal type=\"Success\" successMessage={\"Successfully deleted!\"} />\n                : <Spinner calledLocation=\"Staff\" loadingMessage={`Deleting ${state.fullname}`} />}\n            </ConfirmModal>\n\n            <div>\n                <ul>\n                    {users.map(user => (<li key={user.id}>{users.name}</li>))}\n                </ul>\n            </div>\n           \n            <div className={classes.Container}>     \n                <MaterialTable  \n                title = \"Series 4000\"         \n                columns={[\n                    { title: 'Lense_ID', field: 'LensID'}, //, field: 'sort'\n                    { title: 'Category', field: 'Category'},\n                    { title: 'Company', field: 'Company'},\n                    { title: 'SAOAGroup', field: 'SAOAGroup'},\n                    { title: 'SeriesGroup', field: 'Series_ID'},\n                    { title: 'Sort', field: 'Sort'},\n                    { title: 'LensGroup_ID', field: 'LensGroupID'}\n\n                    // { title: 'Category'}, //, field: 'sort'\n                    // { title: 'SAOASeries'},\n                    // { title: 'Sort'},\n                    // { title: 'Series_ID'},\n                    // { title: 'LensGroup'},\n                    // { title: 'Start Date'},\n                    // { title: 'End Date'},\n                    // { title: 'Modified Date'},\n                    // { title: 'Code'},\n                    // { title: 'Change'},\n                    // { title: 'Description'}\n                ]} \n                options={{\n                    exportButton: true,\n                    filtering: true,\n                    pageSize: 20,                                                                                                                                                             \n                    rowStyle: {\n                        fontSize: 12,                                   \n                      }\n                  }}\n                \n                  editable={{\n                    onRowUpdate: (newData, oldData) =>\n                      new Promise((resolve) => {\n                        //handleRowUpdate(newData, oldData, resolve);\n                        props.OnUpdateClient(props.token, oldData.id, newData, false)\n                        resolve()\n                        window.location.reload();\n                        return\n                    \n                        \n                  }),\n                  onRowAdd: (newData) =>\n                    new Promise((resolve) => {\n                    \n                     resolve()\n                    }),\n\n                  onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                        alert('here')\n                      //handleRowDelete(oldData, resolve)\n                      props.OnDeleteClient(props.token, oldData.id)\n                      props.data.splice(0, 1);\n                      resolve()\n                   \n                      return\n                      \n                    }),\n                  }}\n                  data = {data} icons={tableIcons}/>        \n            </div>\n        </>\n    )\n\n    \n}\n\n\n\n\nconst mapStateToProps = state => {\n    return {\n        clients: state.clients.clients,\n        loading: state.clients.loading,\n        userId: state.auth.userId,\n        token: state.auth.token,\n        totalClients: state.clients.totalClients,\n        lowerRange: state.clients.lowerRange,\n        upperRange: state.clients.upperRange,\n        loadingDeleteClient: state.clients.loading_delete_client,\n        clientDeleteComplete: state.clients.clientDeleteComplete,\n        showDeleteClientModal: state.clients.showDeleteClientModal,\n        role: state.auth.role,\n        totals: state.clients.totals\n    };\n}\n//can access these function to dispatch actions - via props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnFetchClients: (token, filter, userId, limit, pageNumber) => dispatch(actions.fetchClients(token, filter, userId, limit, pageNumber)),\n        OnFetchClient: (token, client_id) => dispatch(actions.fetchClient(token, client_id)),\n        OnFetchAssessment: (token, assessment_id, client_id) => dispatch(actionsAssessments.fetchAssessment(token, assessment_id, client_id)),\n        OnSearchClients: (token, search, filter, userId) => dispatch(actions.searchClients(token, search, filter, userId)),\n        OnUpdateClient: (token, client_id, updated_client, isArchived) => dispatch(actions.updateClient(token, client_id, updated_client, isArchived)),\n        OnDeleteClient: (token, client_id) => dispatch(actions.deleteClient(token, client_id)),\n        OnSetConfirmModalDeleteClient: (val) => dispatch(actions.setConfirmModalDeleteClient(val)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SeriesFour)","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/StaffTable.js",["744","745","746","747","748","749"],"import React, { useEffect, useState } from 'react'\nimport classes from './Clients.module.css'\nimport * as actions from '../../store/actions/clients';\nimport * as userActions from '../../store/actions/users';\nimport * as actionsAssessments from '../../store/actions/assessments';\nimport { connect } from 'react-redux';\nimport { forwardRef } from 'react';\nimport MaterialTable from \"material-table\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { useLocation } from 'react-router-dom';\nimport { Button } from 'bootstrap';\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n\n\nconst SeriesOne = (props) => {\n    const [users, setUsers] = useState([])\n    const location = useLocation();\n\n \n    \n    useEffect(() => {\n\n    \n        props.OnFetchUsers(props.token, \"\", 0, 0)\n        //props.OnFetchClients(props.token, \"1000\", 0, location.state.company , 0)\n        \n    }, [])\n\n    const [state, setState] = useState({\n        fullname: \"\",\n        id: \"\"\n    })\n    \n\n    const data = props.users !== undefined\n        ? props.users\n        : [] \n\n    return (\n        <>\n\n            <div>\n                <ul>\n                    {users.map(user => (<li key={user.id}>{users.name}</li>))}\n                </ul>\n            </div>\n\n            \n            {/* fullname:{\n\n            },\n            role:{\n\n            contact_number: {\n       \n                \n            },\n            email:{\n ,\n                minlength: [5, \"Maximum name length of 5 characters\"]\n            },\n            password:{\n                type: String,\n                required: [true, \"Password is required\"]\n            },\n            supplier_parent:{\n     \n            },supplier_child:{\n              \n            }, */}\n            <div className={classes.Container}>     \n                <MaterialTable  \n                title = \"Users\"         \n                columns={[\n                { title: 'Name', field: 'fullname'}, //, field: 'sort'\n                { title: 'Role', field: 'role', \n                lookup: {\n\n                    //'1': 'Base Lenses Gladd (n=1.523)',\n                    'admin': 'Admin',\n                    'superuser': 'Superuser',\n                    'supplier': 'Supplier'\n                }         },\n                { title: 'Email', field: 'email'},\n                { title: 'Password', field: 'password'},\n                { title: 'Supplier Parent', field: 'supplierparent'},\n                { title: 'Supplier Child', field: 'supplierchild'},\n                // { title: 'Rule1', field: 'Rule1'},\n                // { title: 'Rule2', field: 'Rule2'},\n                // { title: 'Rule3', field: 'Rule3'},\n                // { title: 'Rule4', field: 'Rule4'},\n                // { title: 'Rule5', field: 'Rule5'},\n                // { title: 'Additional Rules', field: 'Additional Rules'},\n                // { title: 'Start Date', field: 'Start Date'},\n                // { title: 'End Date'},\n                // { title: 'Active'},\n                // { title: 'Code'},\n                // { title: 'Change'},\n                // { title: 'Description'},                            \n                // { title: 'RVU'} \n                ]} \n                    options={{\n                    exportButton: true,\n                    filtering: true,\n                    pageSize: 20,                                                                                                                                                       \n                    rowStyle: {\n                        fontSize: 12,                                   \n                      }\n                  }}\n                  \n                \n                  editable={{\n                    onRowUpdate: (newData, oldData) =>\n                      new Promise((resolve) => {\n                        props.onUpdateStaff(props.token, oldData.id, newData)\n                        resolve()\n\n                    \n                        \n                  }),\n                  onRowAdd: (newData) =>\n                  new Promise((resolve) => {\n                      props.onRegisterStaff(props.token, newData)\n                      resolve()\n                      return\n                      \n                    }),\n\n                  onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                      //handleRowDelete(oldData, resolve)\n                      props.onDeleteStaff(props.token, oldData.id)\n                      resolve()\n                      return\n                    }),\n                  }}\n                  data = {data} icons={tableIcons}/>        \n            </div>\n            \n\n        \n        \n        </>\n    )\n\n    \n}\n\n\n\n\nconst mapStateToProps = state => {\n    return {\n        clients: state.clients.clients,\n        users: state.users.staff,\n        loading: state.clients.loading,\n        userId: state.auth.userId,\n        token: state.auth.token,\n        totalClients: state.clients.totalClients,\n        lowerRange: state.clients.lowerRange,\n        upperRange: state.clients.upperRange,\n        loadingDeleteClient: state.clients.loading_delete_client,\n        clientDeleteComplete: state.clients.clientDeleteComplete,\n        showDeleteClientModal: state.clients.showDeleteClientModal,\n        role: state.auth.role,\n        totals: state.clients.totals\n    };\n}\n//can access these function to dispatch actions - via props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnFetchUsers: (token, filter, limit, pageNumber) => dispatch(userActions.fetchStaff(token, filter, limit, pageNumber)),\n        OnFetchClients: (token, filter, userId, limit, pageNumber) => dispatch(actions.fetchClients(token, filter, userId, limit, pageNumber)),\n        OnFetchClient: (token, client_id) => dispatch(actions.fetchClient(token, client_id)),\n        OnFetchAssessment: (token, assessment_id, client_id) => dispatch(actionsAssessments.fetchAssessment(token, assessment_id, client_id)),\n        OnSearchClients: (token, search, filter, userId) => dispatch(actions.searchClients(token, search, filter, userId)),\n        OnUpdateClient: (token, client_id, updated_client, isArchived) => dispatch(actions.updateClient(token, client_id, updated_client, isArchived)),\n        OnDeleteClient: (token, client_id) => dispatch(actions.deleteClient(token, client_id)),\n        OnSetConfirmModalDeleteClient: (val) => dispatch(actions.setConfirmModalDeleteClient(val)),\n        onDeleteStaff: (auth, staff_id) => dispatch(userActions.deleteStaff(auth, staff_id)),\n        onUpdateStaff: (auth, staff_id, updatedStaff) => dispatch(userActions.updateStaff(auth, staff_id, updatedStaff)),\n        onRegisterStaff: (auth, staff) => dispatch(userActions.registerStaffUser(auth, staff))\n        // auth, staff_id\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SeriesOne)","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/SeriesEight.js",["750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771"],"import React, { useEffect, useState } from 'react'\nimport Table from '../../components/Table/Table'\nimport classes from './Clients.module.css'\nimport * as actions from '../../store/actions/clients';\nimport * as actionsAssessments from '../../store/actions/assessments';\nimport { connect } from 'react-redux';\nimport ConfirmModal from '../../components/UI/Modals/ConfirmModal/ConfirmModal'\nimport FeedbackGlobal from '../../components/UI/FeedbackGlobal/FeedbackGlobal'\nimport Button from '../../components/UI/Button/Button'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport { checkIfDefined } from '../../shared/Utility'\nimport { forwardRef } from 'react';\nimport MaterialTable from \"material-table\";\nimport axios from 'axios';\nimport AddBox from '@material-ui/icons/AddBox';\nimport Save from '@material-ui/icons/Save';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { useLocation } from 'react-router-dom';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { Modal, Form, Col, Row} from \"react-bootstrap\";\nimport { FormGroup, Icon, TextareaAutosize } from '@material-ui/core'\nimport Select from 'react-select';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n\n\nconst SeriesEight = (props) => {\n\n    const [users, setUsers] = useState([])\n    const location = useLocation();\n\n\n    // Modal Data \n    // ======================================================\n\n    const [show, setShow] = useState(false);\n    const [customRowData, setCustomRowData] = useState({});\n\n    const handleClose = () => setShow(false);\n    const handleShow = (rowData) => {\n        setShow(true);\n        setCustomRowData(rowData);\n\n    }\n    //alert(rowData.Sort) Works!!\n    \n\n    const onLoginFormSubmit = (e) => {\n        alert('Lets add a supplier!')\n        props.onRegisterStaffUser(props.token, 'Hayden', 'norrie')\n        alert('Done!')\n        e.preventDefault();\n        handleClose();\n      };\n\n      // ======================================================\n\n \n    let headings = [[\"Description\", \"priority1\"], [\"Type\", \"priority6\"], [\"Date Created\", \"priority8\"], [\"Code\", \"priority2\"], [\"Type\", \"priority5\"],\n    [\"Change\", \"priority9\"], [\"Status\", \"priority4\"]]\n    \n    useEffect(() => {\n        props.OnFetchClients(props.token, \"8000\", 0, location.state.supplierchild, 0)\n        alert(props.clients.length)\n    }, [])\n\n    const data = props.clients !== undefined\n        ? props.clients\n        : []\n  \n\n    return (\n        <>\n<Modal  show={show} onHide={handleClose} style = {{position: 'absolute'}}>\n        <Modal.Header closeButton>\n          <Modal.Title>New Lenses</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <LoginForm onSubmit={onLoginFormSubmit} custData={customRowData} />\n        </Modal.Body>\n      </Modal>\n\n            <div>\n                <ul>\n                    {users.map(user => (<li key={user.id}>{users.name}</li>))}\n                </ul>\n            </div>\n           \n            <div className={classes.Container}>     \n                <MaterialTable  \n                title = \"Series 7000\"   \n                \n                \n                \n                columns={[\n                    { title: 'Code', field: 'Code', editable: 'never'}, //, field: 'sort'\n                    { title: 'Change', field: 'Change', editable: 'never'},\n                    { title: 'Description', field: 'Description'},\n                    { title: 'Stock', field: 'Stock', editable: 'never'},\n                    { title: 'Index', field: 'Index'},\n                    { title: 'RqsHC', field: 'RqsHC', lookup: {\n                        'YES': 'YES',\n                        'NO': 'NO'\n                    }},\n                    { title: 'Sort', field: 'Sort'},\n                    { title: 'Lens Group ID', field: 'LensGroupID',\n                lookup: {\n\n                    //'1': 'Base Lenses Gladd (n=1.523)',\n                    '1': 'STOCK Single Vision - Add to 71BS001',\n                    '2': 'SURFACED Single Vision - Add to 72BS001',\n                    '4': 'Bi/Trifocals (Add to 74BS001)',\n                    '6': 'Varifocal Distance/Near (Add to 76BS001)',\n                    '7': 'Add-Ons - Coatings',\n                    '8': 'Add-Ons - Tints',\n                    '9': 'Add-Ons - Other'\n                }         \n            \n            },\n                { title: 'lense_id', field: 'LensID', hidden: true},\n                { title: 'category', field: 'Category', hidden: true},\n                { title: 'abbreviation', field: 'Abbreviation', hidden: true},\n                { title: 'OAPrint', field: 'OAPrint'},  \n                { title: 'supplier_parent', field: 'SupplierParent', hidden: true},\n                { title: 'abbreviation', field: 'SupplierChild', hidden: true},\n                { title: 'series_id', field: 'Series_ID', hidden: true},\n                { title: 'lense_group_id', field: 'LenseGroupID', hidden: true},\n                { title: 'lense_group', field: 'LenseGroup', hidden: true},\n                { title: 'rule_1', field: 'Rule1', hidden: true},\n                { title: 'rule_2', field: 'Rule2', hidden: true},\n                { title: 'rule_4', field: 'Rule3', hidden: true},\n                { title: 'type', field: 'Type', hidden: true},\n                { title: 'start_date', field: 'StartDate', hidden: true},\n                { title: 'end_date', field: 'EndDate', hidden: true},\n                { title: 'active', field: 'Active', hidden: true},\n                { title: 'description', field: 'Description', hidden: true},\n                { title: 'code', field: 'Code', hidden: true},\n                { title: 'change', field: 'Change', hidden: true},\n                { title: 'pack', field: 'Pack', hidden: true},\n                { title: 'stock', field: 'Stock', hidden: true},\n                { title: 'index', field: 'Index', hidden: true},\n                { title: 'saoa', field: 'SAOAGroup'},\n                { title: 'UV', field: 'UV', type: 'boolean', lookup: {\n                    'UV': true,\n                    '': false\n                }},\n                { title: 'AR', field: 'AR', type: 'boolean', lookup: {\n                    'AR': true,\n                    '': false\n                }},\n                { title: 'HC', field: 'HC', type: 'boolean', lookup: {\n                    'HC': true,\n                    '': false\n                }},\n                { title: 'PH', field: 'PH', type: 'boolean', lookup: {\n                    'PH': true,\n                    '': false\n                }},\n                { title: 'PO', field: 'PO', type: 'boolean', lookup: {\n                    'PO': true,\n                    '': false\n                }},\n                { title: 'TL', field: 'TL', type: 'boolean', lookup: {\n                    'TL': true,\n                    '': false\n                }},\n                { title: 'TD', field: 'TD', type: 'boolean', lookup: {\n                    'TD': true,\n                    '': false\n                }},\n                { title: 'MC', field: 'MC', type: 'boolean', lookup: {\n                    'MC': true,\n                    '': false\n                }\n                \n            },\n\n\n\n                ]} \n                options={{\n                    exportButton: true,\n                    filtering: true,\n                    pageSize: 20,   \n                                                                                                                                                                              \n                    rowStyle: {\n                        fontSize: 12,\n                      //  backgroundColor: '#EEE'                                  \n                      },\n                      headerStyle: {\n                        backgroundColor: '#01579b',\n                        color: '#FFF'\n                      }\n\n                  }}\n\n                  actions={[\n                    {\n                      icon: AddCircleOutlineIcon,\n                      tooltip: 'Add series 7000 after current selection',\n                      onClick: (event, rowData) => handleShow(rowData)\n                    }\n                  ]}\n                \n                detailPanel={[\n                    {\n                      tooltip: 'Show Name',\n                      render: rowData => {\n                        return (\n                          <div\n                            style={{\n                              fontSize: 18,\n                              textAlign: 'left',\n                              color: 'white',\n                              padding: '20px',\n                              backgroundColor: '#01579b',\n                            }}\n                          >\n                              <strong>Details: </strong> <br />\n                             \n                            Code: {rowData.Company} <br />\n                            Change: {rowData.Change} <br />\n                            Decription: {rowData.Description} <br />\n                            Stock: {rowData.Stock}<br />\n                            Index: {rowData.Index}<br />\n                            RsqHC:{rowData.RsqHC}<br />\n                            Sort: {rowData.Sort}<br />\n                            Lense Group ID:{ rowData.LensGroupID} <br />\n                            UV: {rowData.UV}<br />\n                            AR: {rowData.AR}<br />\n                            HC: {rowData.HC}<br />\n                            PH: {rowData.PH}<br />\n                            PO: {rowData.PO}<br />\n                            TL: {rowData.TL}<br />\n                            TD: {rowData.TD}<br />\n                            MC: {rowData.MC}<br />\n                          </div>\n                        )\n                      },\n                    }]}\n\n                  editable={{\n                    onRowUpdate: (newData, oldData) => //Must refresh after edit AND LensGroupID doesn't work\n                      new Promise((resolve) => {\n                        props.OnUpdateClient(props.token, oldData.id, newData, false)\n                        resolve()\n                  }),\n                  onRowAdd: (newData) => //Develop Create Routes etc\n                    new Promise((resolve) => {\n\n                \n                //Setting the deafult values!\n                newData.Series_ID = 'Glass Lenses'\n                newData.LensID = ''\n                newData.Category = 'Material Lenses'\n                newData.SAOAGroup = '7000'\n\n                //Setting LenseGroup\n                newData.Rule1 = ''\n                newData.Rule2 = ''\n                newData.Rule3 = ''\n                newData.Stock = 'N'\n                if(newData.RqsHC == 'YES'){\n                    newData.Rule3 = 'Requires Hard Coat'\n                }\n                \n                // if(newData.LensGroupID == '1'){\n                //     newData.LenseGroup = 'Base Lenses Glass (n=1.523)'\n                //     newData.Type = 'STOCK'\n                //     newData.Stock = 'Y'\n                //     newData.TL = ''\n                // }\n                if(newData.LensGroupID == '1'){\n                    newData.LenseGroup = 'STOCK Single Vision - Add to 71BS001'\n                    newData.Rule1 = \"Can add to 71BS001\"\n                    newData.Type = 'CORE'\n                } else if(newData.LensGroupID == '2'){\n                    newData.LenseGroup = 'SURFACED Single Vision - Add to 72BS001'\n                    newData.Rule1 = \"Can add to 72BS001\"\n                    newData.Type = 'CORE'\n                    newData.TL = ''\n                } else if(newData.LensGroupID == '4'){\n                    newData.LenseGroup = 'Bi/Trifocals (Add to 74BS001)'\n                    newData.Rule1 = \"Can add to 74BS001\"\n                    newData.Type = 'CORE'\n                    newData.TL = ''\n                } else if(newData.LensGroupID == '6'){\n                    newData.LenseGroup = 'Varifocal Distance/Near (Add to 76BS001)'\n                    newData.Rule1 = \"Can add to 76BS001\"\n                    newData.Type = 'CORE'\n                    newData.PO = ''\n                    newData.TL = ''\n                } else if(newData.LensGroupID == '7'){\n                    newData.LenseGroup = 'Add-Ons - Coatings'\n                    newData.Rule2 = 'Can add to all GLASS Base, Stock and Core lenses'\n                    newData.Type = 'ADDON'\n                    newData.Index = ''\n                    newData.UV = ''\n                    newData.AR = ''\n                    newData.HC = ''\n                    newData.PH = ''\n                    newData.PO = ''\n                    \n                } else if(newData.LensGroupID == '8'){\n                    newData.LenseGroup = 'Add-Ons - Tints'\n                    newData.Rule2 = 'Can add to all GLASS Base, Stock and Core lenses'\n                    newData.Type = 'ADDON'\n                    newData.Index = ''\n                    newData.UV = ''\n                    newData.AR = ''\n                    newData.HC = ''\n                    newData.PH = ''\n                    newData.PO = ''\n                } else if(newData.LensGroupID == '9'){\n                    newData.LenseGroup = 'Add-Ons - Other'\n                    newData.Rule2 = 'Can add to all GLASS Core lenses'\n                    newData.Type = 'ADDON'\n                    newData.Index = ''\n                    newData.UV = ''\n                    newData.AR = ''\n                    newData.HC = ''\n                    newData.PH = ''\n                    newData.PO = ''\n                    newData.TL = ''\n                    newData.TD = ''\n                    newData.MC = ''\n                }\n\n                newData.Active = \"TRUE\"\n                newData.Change = 'N'\n                newData.Pack = ''\n                newData.OAPrint = 'TRUE'\n\n\n\n                \n                   // props.OnCreate(props.token, newData)\n                     resolve()\n                    }),\n\n                  onRowDelete: (oldData) => //Working\n                    new Promise((resolve) => {\n                      props.OnDeleteClient(props.token, oldData.id)\n                      props.data.splice(0, 1);\n                      resolve()\n                   \n                      return\n                      \n                    }),\n                  }}\n                  data = {data} icons={tableIcons}/>        \n            </div>\n        </>\n    )\n\n    \n}\n\n\nconst LoginForm = ({ onSubmit, custData }) => {\n\n    return (\n\n<Form noValidate >\n          <Row className=\"mb-3\">\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n    <Form.Label>Description</Form.Label>\n    <Form.Control as=\"textarea\" rows={3} />\n  </Form.Group>\n  </Row>\n\n\n  <Row className=\"mb-3\">\n\n  <Form.Group\n              as={Col}\n              md=\"2\"\n              controlId=\"validationFormik103\"\n              className=\"position-relative\"\n            >\n              <Form.Label>Index</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"\"\n                name=\"\"\n              />\n\n              <Form.Control.Feedback type=\"invalid\" tooltip>\n           \n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group\n              as={Col}\n              md=\"6\"\n              controlId=\"validationFormik103\"\n              className=\"position-relative\"\n            >\n              <Form.Label>Sort</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"\"\n                name=\"\"\n                defaultValue={custData.Sort} //Add one!!\n              />\n\n              <Form.Control.Feedback type=\"invalid\" tooltip>\n           \n              </Form.Control.Feedback>\n            </Form.Group>\n\n\n            <Row className=\"mb-3\">\n<Form.Group\n              as={Col}\n              md=\"4\"\n              className=\"position-relative\">\n                  <Form.Label>Lense Group</Form.Label>\n                  \n<select class=\"mb-3\">\n<option>Default select</option>\n  <option value=\"1\">STOCK Single Vision - Add to 71BS001</option>\n  <option value=\"2\">SURFACED Single Vision - Add to 72BS001</option>\n  <option value=\"4\">Bi/Trifocals (Add to 74BS001)</option>\n  <option value=\"6\">Varifocal Distance/Near (Add to 76BS001)</option>\n  <option value=\"7\">Add-Ons - Coatings</option>\n  <option value=\"8\">Add-Ons - Tints</option>\n  <option value=\"9\">Add-Ons - Other</option>\n</select></Form.Group>\n</Row>\n\n            \n            </Row>\n\n            <Row className=\"mb-6\">\n\n    <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"RqsHQ\" />\n  </Form.Group>\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"UV\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"AR\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"HC\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"PH\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"PO\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"TL\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"TD\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"MC\" />\n  </Form.Group>\n  </Row>\n\n\n       \n         \n         \n          <Button type=\"submit\">Submit form</Button>\n        </Form>\n    );\n  };\n\nconst mapStateToProps = state => {\n    return {\n        clients: state.clients.clients,\n        loading: state.clients.loading,\n        userId: state.auth.userId,\n        token: state.auth.token,\n        totalClients: state.clients.totalClients,\n        lowerRange: state.clients.lowerRange,\n        upperRange: state.clients.upperRange,\n        loadingDeleteClient: state.clients.loading_delete_client,\n        clientDeleteComplete: state.clients.clientDeleteComplete,\n        showDeleteClientModal: state.clients.showDeleteClientModal,\n        role: state.auth.role,\n        totals: state.clients.totals\n    };\n}\n//can access these function to dispatch actions - via props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnFetchClients: (token, filter, userId, limit, pageNumber) => dispatch(actions.fetchClients(token, filter, userId, limit, pageNumber)),\n        OnFetchClient: (token, client_id) => dispatch(actions.fetchClient(token, client_id)),\n        OnFetchAssessment: (token, assessment_id, client_id) => dispatch(actionsAssessments.fetchAssessment(token, assessment_id, client_id)),\n        OnSearchClients: (token, search, filter, userId) => dispatch(actions.searchClients(token, search, filter, userId)),\n        OnUpdateClient: (token, client_id, updated_client, isArchived) => dispatch(actions.updateClient(token, client_id, updated_client, isArchived)),\n        OnDeleteClient: (token, client_id) => dispatch(actions.deleteClient(token, client_id)),\n        OnSetConfirmModalDeleteClient: (val) => dispatch(actions.setConfirmModalDeleteClient(val)),\n        OnCreate: (token, client_id) => dispatch(actions.createClient(token, client_id))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SeriesEight)\n\n\n                //     const dat = {\n                //     'LensID': \"53\",\n                //     'Category': \"Materials Lenses\",\n                //     'field3': \"\",\n                //     'Sort': \"11\",\n                //     'SupplierParent': \"Unbranded\",\n                //     'SupplierChild': \"Unbranded\",\n                //     'Abbreviation': \"UB\",\n                //     'Series_ID': \"Plastic (CR39) Lenses\",\n                //     'LenseGroupID': \"1\",\n                //     'LenseGroup': \"STOCK Single Vision - Add to 81BS001\",\n                //     'Rule1': \"Can add to 81BS001\",\n                //     'Rule2': \"\",\n                //     'Rule3': \"\",\n                //     'RqsHC': \"NO\",\n                //     'Type': \"STOCK\",\n                //     'StartDate': \"05/01/2017\",\n                //     'EndDate': \"\", \n                //     'Active': \"1\",\n                //     'Code': \"22222\",\n                //     'Change': \"\",\n                //     'Description': \"Unbranded 1.50 Uncoated 1.5 Standard\",\n                //     'Pack': \"\",\n                //     'Stock': \"Y\",\n                //     'Index': \"1.65\",\n                //     'UV': \"UV\",\n                //     'AR': \"AR\",\n                //     'HC': \"HC\", \n                //     'PH': \"PH\",\n                //     'PO': \"PO\",\n                //     'TL': \"TL\",\n                //     'TD': \"TD\",\n                //     'MC': \"MC\",\n                //     'OAPrint': \"1\",\n                //     'MedAidPrint': \"1\",\n                //     'DiscPrint': \"1\",\n                //     'Company': \"Zeiss\",\n                //     'field39': \"\",\n                //     'field40': \"\",\n                //     'field41': \"\",\n                //     'SAOAGroup': \"7000\"\n                //   }","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/InactiveTable.js",["772","773","774","775"],"import React, { useEffect, useState } from 'react'\nimport classes from './Clients.module.css'\nimport * as actions from '../../store/actions/clients';\nimport * as actionsAssessments from '../../store/actions/assessments';\nimport { connect } from 'react-redux';\nimport { forwardRef } from 'react';\nimport MaterialTable from \"material-table\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { useLocation } from 'react-router-dom';\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n\n\nconst InactiveTable = (props) => {\n    const [users, setUsers] = useState([])\n    const location = useLocation();\n\n \n    \n    useEffect(() => {\n        \n  //  props.OnFetchClients(props.token, \"1000\", 0, location.state.company, 0)\n    \n    }, [])\n\n    const [state, setState] = useState({\n        fullname: \"\",\n        id: \"\"\n    })\n    \n\n    const data = props.clients !== undefined\n        ? props.clients\n        : [] \n\n\n    return (\n        <>\n\n            <div>\n                <ul>\n                    {users.map(user => (<li key={user.id}>{users.name}</li>))}\n                </ul>\n            </div>\n           \n            <div className={classes.Container}>     \n                <MaterialTable  \n                title = \"Inactive Table\"         \n                columns={[\n                { title: 'Lense_ID', field: 'LensID'}, //, field: 'sort'\n                { title: 'Category', field: 'Category'},\n                { title: 'Company', field: 'Company'},\n                { title: 'SAOAGroup', field: 'SAOAGroup'},\n                { title: 'SeriesGroup', field: 'Series_ID'},\n                { title: 'Sort', field: 'Sort'},\n                { title: 'LensGroup_ID', field: 'LensGroupID'},\n                { title: 'Rule1', field: 'Rule1'},\n                { title: 'Rule2', field: 'Rule2'},\n                { title: 'Rule3', field: 'Rule3'},\n                { title: 'Rule4', field: 'Rule4'},\n                { title: 'Rule5', field: 'Rule5'},\n                { title: 'Additional Rules', field: 'Additional Rules'},\n                { title: 'Start Date', field: 'Start Date'},\n                { title: 'End Date'},\n                { title: 'Active'},\n                { title: 'Code'},\n                { title: 'Change'},\n                { title: 'Description'},                            \n                { title: 'RVU'} \n                ]} \n                    options={{\n                    exportButton: true,\n                    filtering: true,\n                    pageSize: 50,                                                                                                                                                       \n                    rowStyle: {\n                        fontSize: 12,                                   \n                      }\n                  }}\n                  \n                \n                  editable={{\n                    onRowUpdate: (newData, oldData) =>\n                      new Promise((resolve) => {\n                        //handleRowUpdate(newData, oldData, resolve);\n                        props.OnUpdateClient(props.token, oldData.id, newData, false)\n                        resolve()\n                        window.location.reload();\n                        return\n                    \n                        \n                  }),\n                  onRowAdd: (newData) =>\n                    new Promise((resolve) => {\n                     resolve()\n                    }),\n\n                  onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                        alert('here')\n                      //handleRowDelete(oldData, resolve)\n                      props.OnDeleteClient(props.token, oldData.id)\n                      props.data.splice(0, 1);\n                      resolve()\n                   \n                      return\n                      \n                    }),\n                  }}\n                  data = {data} icons={tableIcons}/>        \n            </div>\n        </>\n    )\n\n    \n}\n\n\n\n\nconst mapStateToProps = state => {\n    return {\n        clients: state.clients.clients,\n        loading: state.clients.loading,\n        userId: state.auth.userId,\n        token: state.auth.token,\n        totalClients: state.clients.totalClients,\n        lowerRange: state.clients.lowerRange,\n        upperRange: state.clients.upperRange,\n        loadingDeleteClient: state.clients.loading_delete_client,\n        clientDeleteComplete: state.clients.clientDeleteComplete,\n        showDeleteClientModal: state.clients.showDeleteClientModal,\n        role: state.auth.role,\n        totals: state.clients.totals\n    };\n}\n//can access these function to dispatch actions - via props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnFetchClients: (token, filter, userId, limit, pageNumber) => dispatch(actions.fetchClients(token, filter, userId, limit, pageNumber)),\n        OnFetchClient: (token, client_id) => dispatch(actions.fetchClient(token, client_id)),\n        OnFetchAssessment: (token, assessment_id, client_id) => dispatch(actionsAssessments.fetchAssessment(token, assessment_id, client_id)),\n        OnSearchClients: (token, search, filter, userId) => dispatch(actions.searchClients(token, search, filter, userId)),\n        OnUpdateClient: (token, client_id, updated_client, isArchived) => dispatch(actions.updateClient(token, client_id, updated_client, isArchived)),\n        OnDeleteClient: (token, client_id) => dispatch(actions.deleteClient(token, client_id)),\n        OnSetConfirmModalDeleteClient: (val) => dispatch(actions.setConfirmModalDeleteClient(val)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InactiveTable)","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/MasterTable.js",["776","777","778","779"],"import React, { useEffect, useState } from 'react'\nimport classes from './Clients.module.css'\nimport * as actions from '../../store/actions/clients';\nimport * as actionsAssessments from '../../store/actions/assessments';\nimport { connect } from 'react-redux';\nimport { forwardRef } from 'react';\nimport MaterialTable from \"material-table\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { useLocation } from 'react-router-dom';\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n\n\nconst MasterTable = (props) => {\n    const [users, setUsers] = useState([])\n    const location = useLocation();\n\n \n    \n    useEffect(() => {\n        \n        props.OnFetchClients(props.token, \"exporttable\", 0, location.state.supplierchild, 0)\n    \n    }, [])\n\n    const [state, setState] = useState({\n        fullname: \"\",\n        id: \"\"\n    })\n    \n\n    const data = props.clients !== undefined\n        ? props.clients\n        : [] \n\n\n    return (\n        <>\n\n            <div>\n                <ul>\n                    {users.map(user => (<li key={user.id}>{users.name}</li>))}\n                </ul>\n            </div>\n           \n            <div className={classes.Container}>     \n                <MaterialTable  \n                title = \"Master Table\"         \n                columns={[\n                    { title: 'Code', field: 'Code', editable: 'never'}, // Done\n                    { title: 'Change', field: 'Change', editable: 'never'}, //Done\n                    { title: 'Description', field: 'Description'}, //Done\n                    { title: 'Stock', field: 'Stock', editable: 'never'}, //Done\n                    { title: 'Index', field: 'Index', type: 'numeric'}, //\n                    { title: 'RqsHC', field: 'RqsHC', type: 'boolean', lookup: {\n                        'YES': true,\n                        'NO': false\n                    }},\n                    { title: 'Sort', field: 'Sort'},\n                    { title: 'Lens Group ID', field: 'LensGroupID',\n                    lookup: {\n    //Is a numeric value from 1- 9 but has been converted to text for the sake of the user understanding\n                        1: 'Base Lenses Gladd (n=1.49)',\n                        2: 'STOCK Single Vision - Add to 81BS001',\n                        3: 'SURFACED Single Vision - Add to 82BS001',\n                        4: 'Bi/Trifocals (Add to 84BS001)',\n                        5: 'Varifocal Intermediate/Near (Add to 85BS001)',\n                        6: 'Varifocal Distance/Near (Add to 86BS001)',\n                        7: 'Add-Ons - Coatings',\n                        8: 'Add-Ons - Tints',\n                        9: 'Add-Ons - Other'\n                    }\n                \n                \n                \n                \n                },\n                { title: 'lense_id', field: 'LenseID'},\n                { title: 'category', field: 'Category'},\n                { title: 'sort', field: 'Sort'}, \n                { title: 'supplier_parent', field: 'SupplierParent'},\n                { title: 'abbreviation', field: 'Abbreviation'},\n                { title: 'series_id', field: 'Series_ID'},\n                { title: 'lense_group_id', field: 'LensGroupID'},\n                { title: 'lense_group', field: 'LensGroup'},\n                { title: 'rule_1', field: 'Rule1'},\n                { title: 'rule_2', field: 'Rule2'},\n                { title: 'rule_3', field: 'Rule3'},\n        \n                { title: 'type', field: 'Type'},\n                { title: 'start_date', field: 'StartDate'},\n                { title: 'end_date', field: 'EndDate'},\n                { title: 'active', field: 'Active'},\n                { title: 'description', field: 'Description'},\n                { title: 'code', field: 'Code'},\n                { title: 'change', field: 'Change'},\n                { title: 'pack', field: 'Pack'},\n                { title: 'stock', field: 'Stock'},\n                { title: 'index', field: 'Index'},\n                { title: 'UV', field: 'UV', type: 'boolean', lookup: {\n                    'UV': true,\n                    '': false\n                }},\n                { title: 'AR', field: 'AR', type: 'boolean', lookup: {\n                    'AR': true,\n                    '': false\n                }},\n                { title: 'HC', field: 'HC', type: 'boolean', lookup: {\n                    'HC': true,\n                    '': false\n                }},\n                { title: 'PH', field: 'PH', type: 'boolean', lookup: {\n                    'PH': true,\n                    '': false\n                }},\n                { title: 'PO', field: 'PO', type: 'boolean', lookup: {\n                    'PO': true,\n                    '': false\n                }},\n                { title: 'TL', field: 'TL', type: 'boolean', lookup: {\n                    'TL': true,\n                    '': false\n                }},\n                { title: 'TD', field: 'TD', type: 'boolean', lookup: {\n                    'TD': true,\n                    '': false\n                }},\n                { title: 'MC', field: 'MC', type: 'boolean', lookup: {\n                    'MC': true,\n                    '': false\n                }},\n                // { title: 'oaprint', field: 'OAPrint'},\n                // { title: 'medaidprint', field: 'MedAidPrint'},\n                // { title: 'discprint', field: 'DiscPrint'}\n                ]} \n                    options={{\n                    exportButton: true,\n                    filtering: true,\n                    pageSize: 50,                                                                                                                                                       \n                    rowStyle: {\n                        fontSize: 12,                                   \n                      }\n                  }}\n                  \n                \n                  editable={{\n                    onRowUpdate: (newData, oldData) =>\n                      new Promise((resolve) => {\n                        //handleRowUpdate(newData, oldData, resolve);\n                        props.OnUpdateClient(props.token, oldData.id, newData, false)\n                        resolve()\n                        window.location.reload();\n                        return\n                    \n                        \n                  }),\n                  onRowAdd: (newData) =>\n                    new Promise((resolve) => {\n                     resolve()\n                    }),\n\n                  onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                      //handleRowDelete(oldData, resolve)\n                      props.OnDeleteClient(props.token, oldData.id)\n                      props.data.splice(0, 1);\n                      resolve()\n                   \n                      return\n                      \n                    }),\n                  }}\n                  data = {data} icons={tableIcons}/>        \n            </div>\n        </>\n    )\n\n    \n}\n\n\n\n\nconst mapStateToProps = state => {\n    return {\n        clients: state.clients.clients,\n        loading: state.clients.loading,\n        userId: state.auth.userId,\n        token: state.auth.token,\n        totalClients: state.clients.totalClients,\n        lowerRange: state.clients.lowerRange,\n        upperRange: state.clients.upperRange,\n        loadingDeleteClient: state.clients.loading_delete_client,\n        clientDeleteComplete: state.clients.clientDeleteComplete,\n        showDeleteClientModal: state.clients.showDeleteClientModal,\n        role: state.auth.role,\n        totals: state.clients.totals\n    };\n}\n//can access these function to dispatch actions - via props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnFetchClients: (token, filter, userId, limit, pageNumber) => dispatch(actions.fetchClients(token, filter, userId, limit, pageNumber)),\n        OnFetchClient: (token, client_id) => dispatch(actions.fetchClient(token, client_id)),\n        OnFetchAssessment: (token, assessment_id, client_id) => dispatch(actionsAssessments.fetchAssessment(token, assessment_id, client_id)),\n        OnSearchClients: (token, search, filter, userId) => dispatch(actions.searchClients(token, search, filter, userId)),\n        OnUpdateClient: (token, client_id, updated_client, isArchived) => dispatch(actions.updateClient(token, client_id, updated_client, isArchived)),\n        OnDeleteClient: (token, client_id) => dispatch(actions.deleteClient(token, client_id)),\n        OnSetConfirmModalDeleteClient: (val) => dispatch(actions.setConfirmModalDeleteClient(val)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MasterTable)","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Assessment/Assessment.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Series/Export.js",["780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857"],"import React, { useEffect, useState } from 'react'\nimport Table from '../../components/Table/Table'\nimport classes from './Clients.module.css'\nimport * as actions from '../../store/actions/clients';\nimport * as actionsAssessments from '../../store/actions/assessments';\nimport { connect } from 'react-redux';\nimport ConfirmModal from '../../components/UI/Modals/ConfirmModal/ConfirmModal'\nimport FeedbackGlobal from '../../components/UI/FeedbackGlobal/FeedbackGlobal'\nimport Button from '../../components/UI/Button/Button'\nimport ButtonStyle from '../../components/UI/Button/Button.module.css'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport { checkIfDefined } from '../../shared/Utility'\nimport { forwardRef } from 'react';\nimport MaterialTable from 'material-table';\nimport axios from 'axios';\nimport AddBox from '@material-ui/icons/AddBox';\nimport Save from '@material-ui/icons/Save';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { useLocation } from 'react-router-dom';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { Modal, Form, Col, Row} from 'react-bootstrap';\nimport { FormGroup, Icon, TextareaAutosize } from '@material-ui/core'\nimport Select from 'react-select';\nimport styls from '../../components/Table/Table.module.css'\nimport Moment from 'moment';\n\nconst _filefy = require(\"filefy\");\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n  const exportCsv = (allColumns, allData) => {\n    const columns = allColumns.filter(columnDef => columnDef[\"export\"] !== false);\n    const exportedData = allData.map(rowData => columns.map(columnDef => rowData[columnDef.field]));\n    new _filefy.CsvBuilder('filename_' + Moment().format('YYYY-MM-DDTHHmmss'))\n      .setDelimeter(';')\n      .setColumns(columns.map(columnDef => columnDef.title))\n      .addRows(exportedData)\n      .exportFile();\n  }\n\n\nconst Export = (props) => {\n\n    const [users, setUsers] = useState([])\n    const location = useLocation();\n\n\n    // Modal Data \n    // ======================================================\n\n    const [show, setShow] = useState(false);\n    const [customRowData, setCustomRowData] = useState({});\n\n    const handleClose = () => setShow(false);\n    const handleShow = (rowData) => {\n        setShow(true);\n        setCustomRowData(rowData);\n\n    }\n    //alert(rowData.Sort) Works!!\n\n\n\n\n    const generateCodes = (e) => {\n      \n      alert('Generating all codes...')\n      var codesDict = new Object();\n\n     for(var client in props.clients){\n\n        \n        var newClient = Object.assign({}, props.clients[client]);\n      //  var newClient = props.clients[2056]\n      //  alert(newClient.Description)\n        \n\n        //=============== CREATING CODES ===================\n\n        //1. Create Variables for each CHAR in Code\n        let char1 = ''\n        let char2 = ''\n        let char34 = ''\n        let char56 = ''\n        let char7 = ''\n        \n        //IF lenses are Glass   --> Char1 = G\n        //IF lenses are Plastic --> Char1 = P\n        if(newClient.SAOAGroup == '7000'){\n            char1 = '7'\n        } else if (newClient.SAOAGroup == '8000'){\n            char1 = '8'\n        }\n\n        //Char2 = LENSEGROUP ID\n        char2 = newClient.LensGroupID\n\n        //Char34 = ABBREVIATION\n        char34 = newClient.Abbreviation\n             \n\n        \n   \n        //CHAR7\n        if (newClient.Type == '' || newClient.Type == 'BASE'){\n            //IGNORE\n            \n        } \n        \n        if(newClient.Type == 'ADDON'){\n\n          if(newClient.TD == 'TD'){\n              char7 = 'Q'\n          } else if (newClient.MC == 'MC') {\n              char7 = 'R'\n          } else if (newClient.PH == 'PH') {\n              char7 = 'N'\n          } else if (newClient.PO == 'PO') {\n              char7 = 'S'\n          } else {\n\n              if(newClient.TL == 'TL') {\n                char7 = 'P'\n              } \n              \n              \n              else if (newClient.UV == 'UV' && newClient.AR == 'AR' && newClient.HC == 'HC') {\n                char7 = 'F'\n              } else if (newClient.TL == 'TL' && newClient.UV == 'UV' && newClient.AR == 'AR' && newClient.HC == 'HC') {\n                char7 = 'F'\n              }\n\n\n              else if (newClient.UV == 'UV' && newClient.AR == 'AR') {\n                char7 = 'G'\n              } else if (newClient.TL == 'TL' && newClient.UV == 'UV' && newClient.AR == 'AR') {\n                char7 = 'G'\n              }\n\n              else if (newClient.UV == 'UV' && newClient.HC == 'HC') {\n                char7 = 'E'\n              } else if (newClient.UV == 'UV' && newClient.HC == 'HC' && newClient.TL == 'TL') {\n                char7 = 'E'\n              }\n\n              else if (newClient.AR == 'AR' && newClient.HC == 'HC') {\n                char7 = 'D'\n              } else if (newClient.AR == 'AR' && newClient.HC == 'HC' && newClient.TL == 'TL') {\n                char7 = 'D'\n              }\n\n              else if (newClient.UV == 'UV') {\n                char7 = 'C'\n              } else if (newClient.UV == 'UV' && newClient.TL == 'TL') {\n                char7 = 'C'\n              }\n\n              else if (newClient.AR == 'AR') {\n                char7 = 'B'\n              } else if (newClient.AR == 'AR' && newClient.TL == 'TL') {\n                char7 = 'B'\n              }\n\n              else if (newClient.HC == 'HC') {\n                char7 = 'A'\n              } else if (newClient.HC == 'HC' && newClient.TL == 'TL') {\n                char7 = 'A'\n              }\n          }\n\n\n        } \n                \n        if (newClient.Type == 'CORE' || newClient.Type == 'STOCK'){\n\n          //========================================================================================================\n          if(parseFloat(newClient.Index) < 1.51){\n              char7 = '1'\n          } else if (1.51 <= parseFloat(newClient.Index) && parseFloat(newClient.Index) <= 1.6 )\n          {\n            char7 = '2'\n          } else {\n            char7 = '3'\n          }\n          //========================================================================================================\n\n\n\n\n\n\n\n          if (newClient.PH == 'PH' && newClient.PO != 'PO') {\n            char7 = (parseFloat(char7) + 3) + ''\n\n            // console.log(char7)\n          } else if (newClient.PO == 'PO' && newClient.PH != 'PH') {\n            char7 = (parseFloat(char7) + 6) + ''\n           \n             // console.log(char7)\n          } else if (newClient.PO == 'PO' && newClient.PH == 'PH') {     \n       \n                  if(parseFloat(newClient.Index ) < 1.51 ){\n                      char7 = 'A'\n                  } else if (1.51 <= parseFloat(newClient.Index) && parseFloat(newClient.Index) <= 1.6 )\n                  {\n                    char7 = 'B'\n                  } else{\n                    char7 = 'C'\n                  }\n              }\n           \n\n              \n\n\n\n          if(newClient.Type == 'CORE') {\n\n              if (newClient.UV == 'UV') {\n                if(parseFloat(newClient.Index) < 1.51){\n                  char7 = 'D'\n              } else if (1.51 <= parseFloat(newClient.Index) && parseFloat(newClient.Index) <= 1.6 )\n              {\n                char7 = 'E'\n              } else if (1.6 < parseFloat(newClient.Index)) {\n                char7 = 'F'\n              } else{}\n              }\n          }\n\n          if (newClient.TD == 'TD' || newClient.MC == 'MC') {\n              char7 = 'Q'\n          } else{}\n\n        }\n\n\n        //Deal with char 5&6\n        // {\n        //   81CY5: 0\n        //   72JC0: 2\n        //   81CY2: 0\n        // }\n\n        //Add each code to a global dictionairy, and everytime the same code appears, and 1 to the counter\n\n        \n\n        var temp_code = char1 + '' + char2 + '' + char34 + '' + char7\n\n        if(temp_code in codesDict){\n          codesDict[temp_code] += 1\n        } else {\n          codesDict[temp_code] = 1\n        }\n\n        char56 = ind[codesDict[temp_code]]\n\n        newClient.Code = char1 + '' + char2 + '' + '' +char34 +  '' + char56 + '' + char7\n        \n       \n       \n\n\n        //=============== END CODES ===================\n        new Promise((resolve) => {\n          \n         props.OnUpdateClient(props.token, props.clients[client].id, newClient, false);\n          resolve() \n        })\n        \n\n    }\n\n\n      \n    };\n    \n   \n    const clearCodes = (e) => {\n      \n      alert('Clearing all codes...')\n  \n      // Fetch all glasses data for series 7000 & 8000\n\n      //Loop through each one and set its code to blank and update it on MongoDB\n      for(var client in props.clients){\n\n        \n\n        \n        var newClient = Object.assign({}, props.clients[client]);\n        // alert(newClient.Description)\n        newClient.Code = ''\n        console.log(newClient.Code + ' --> CODE')\n\n        \n        props.OnUpdateClient(props.token, props.clients[client].id, newClient, false);\n        // alert(JSON.stringify(client, null, 4));\n      }\n\n\n  \n      // token, client_id, updated_client, isArchived\n      alert('Clearing codes completed!')\n  \n      \n    };\n\n\n\n    const ClearChanges = (e) => {\n      \n      alert('Deleting items marked X')\n\n\n      for(var client in props.clients){\n        if(props.clients[client].Change == 'X'){\n          props.OnDeleteClient(props.token, props.clients[client].id)\n        }\n      }\n\n\n      for(var client in props.clients){\n\n        \n        var newClient = Object.assign({}, props.clients[client]);\n        // alert(newClient.Description)\n        newClient.Change = '';\n        props.OnUpdateClient(props.token, props.clients[client].id, newClient, false);\n        // alert(JSON.stringify(client, null, 4));\n      }\n\n\n      alert('Clearing items marked S and N')\n  \n      // Fetch all glasses data for series 7000 & 8000\n\n      for(var client in props.clients){\n\n        \n        var newClient = Object.assign({}, props.clients[client]);\n        // alert(newClient.Description)\n        newClient.Change = '';\n        props.OnUpdateClient(props.token, props.clients[client].id, newClient, false);\n        // alert(JSON.stringify(client, null, 4));\n      }\n\n\n  \n      // token, client_id, updated_client, isArchived\n      alert('Clearing codes completed!')\n  \n      \n    };\n\n\n    const onLoginFormSubmit = (e) => {\n        alert('Lets add a supplier!')\n        props.onRegisterStaffUser(props.token, 'Hayden', 'norrie')\n        alert('Done!')\n        e.preventDefault();\n        handleClose();\n      };\n\n      // ======================================================\n    let headings = [['Description', 'priority1'], ['Type', 'priority6'], ['Date Created', 'priority8'], ['Code', 'priority2'], ['Type', 'priority5'],\n    ['Change', 'priority9'], ['Status', 'priority4']]\n    \n    useEffect(() => {\n        props.OnFetchClients(props.token, 'exporttable', 0, location.state.supplierchild, 0)\n       // alert(JSON.stringify(props.clients[0], null, 4));\n\n\n    }, [])\n\n    const data = props.clients !== undefined\n        ? props.clients\n        : []\n  \n\n    return (\n        <>\n<Modal  show={show} onHide={handleClose} style = {{position: 'absolute'}}>\n        <Modal.Header closeButton>\n          <Modal.Title>New Lenses</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <LoginForm onSubmit={onLoginFormSubmit} custData={customRowData} />\n        </Modal.Body>\n      </Modal>\n\n            <div>\n                <ul>\n                    {users.map(user => (<li key={user.id}>{users.name}</li>))}\n                </ul>\n            </div>\n            \n            <div className={classes.Container}>  \n            <div className={classes.ButtonGroup} style={{display: 'flex', justifyContent:'left'}}>    \n            <Button  clicked={() => {clearCodes()} }>Clear codes</Button>\n            <Button  clicked={() => {generateCodes()} }>Generate codes</Button>\n            <Button  clicked={() => {ClearChanges()} }>Start new Cycle</Button>\n            </div>   \n\n            <div className={classes.Container}>  \n            </div>\n            \n                <MaterialTable  \n                title = 'Export Table'   \n                \n                \n                \n                columns={[\n                    { title: 'Code', field: 'Code', editable: 'never'}, //, field: 'sort'\n                    { title: 'Change', field: 'Change', editable: 'never'},\n                    { title: 'Description', field: 'Description'},\n                    { title: 'Stock', field: 'Stock', editable: 'never'},\n                    { title: 'Index', field: 'Index'},\n                    { title: 'RqsHC', field: 'RqsHC', lookup: {\n                        'YES': 'YES',\n                        'NO': 'NO'\n                    }},\n                    { title: 'Sort', field: 'Sort'},\n                    { title: 'Lens Group ID', field: 'LensGroupID',\n                lookup: {\n\n                    //'1': 'Base Lenses Gladd (n=1.523)',\n                    '1': 'STOCK Single Vision - Add to 71BS001',\n                    '2': 'SURFACED Single Vision - Add to 72BS001',\n                    '4': 'Bi/Trifocals (Add to 74BS001)',\n                    '6': 'Varifocal Distance/Near (Add to 76BS001)',\n                    '7': 'Add-Ons - Coatings',\n                    '8': 'Add-Ons - Tints',\n                    '9': 'Add-Ons - Other'\n                }         \n            \n            },\n                { title: 'lense_id', field: 'LensID', hidden: true},\n                { title: 'category', field: 'Category', hidden: true},\n                { title: 'abbreviation', field: 'Abbreviation', hidden: true},\n                { title: 'OAPrint', field: 'OAPrint'},  \n                { title: 'supplier_parent', field: 'SupplierParent', hidden: true},\n                { title: 'supplierchild', field: 'SupplierChild', hidden: true},\n                { title: 'series_id', field: 'Series_ID', hidden: true},\n                { title: 'lense_group_id', field: 'LenseGroupID', hidden: true},\n                { title: 'lense_group', field: 'LenseGroup', hidden: true},\n                { title: 'rule_1', field: 'Rule1', hidden: true},\n                { title: 'rule_2', field: 'Rule2', hidden: true},\n                { title: 'rule_3', field: 'Rule3', hidden: true},\n                { title: 'type', field: 'Type', hidden: true},\n                { title: 'start_date', field: 'StartDate', hidden: true},\n                { title: 'end_date', field: 'EndDate', hidden: true},\n                { title: 'active', field: 'Active', hidden: true},\n                { title: 'description', field: 'Description', hidden: true},\n                { title: 'code', field: 'Code', hidden: true},\n                { title: 'change', field: 'Change', hidden: true},\n                { title: 'pack', field: 'Pack', hidden: true},\n                { title: 'stock', field: 'Stock', hidden: true},\n                { title: 'index', field: 'Index', hidden: true},\n                { title: 'saoa', field: 'SAOAGroup', hidden: true},\n                { title: 'UV', field: 'UV', type: 'boolean', lookup: {\n                    'UV': true,\n                    '': false\n                }},\n                { title: 'AR', field: 'AR', type: 'boolean', lookup: {\n                    'AR': true,\n                    '': false\n                }},\n                { title: 'HC', field: 'HC', type: 'boolean', lookup: {\n                    'HC': true,\n                    '': false\n                }},\n                { title: 'PH', field: 'PH', type: 'boolean', lookup: {\n                    'PH': true,\n                    '': false\n                }},\n                { title: 'PO', field: 'PO', type: 'boolean', lookup: {\n                    'PO': true,\n                    '': false\n                }},\n                { title: 'TL', field: 'TL', type: 'boolean', lookup: {\n                    'TL': true,\n                    '': false\n                }},\n                { title: 'TD', field: 'TD', type: 'boolean', lookup: {\n                    'TD': true,\n                    '': false\n                }},\n                { title: 'MC', field: 'MC', type: 'boolean', lookup: {\n                    'MC': true,\n                    '': false\n                }\n                \n            },\n\n\n\n                ]} \n                options={{\n                \n                  exportButton: true,\n                  exportCsv,\n                    Button: true,\n                    filtering: true,\n                    pageSize: 20,   \n                                                                                                                                                                              \n                    rowStyle: {\n                        fontSize: 12,\n                      //  backgroundColor: '#EEE'                                  \n                      },\n                      headerStyle: {\n                        backgroundColor: '#01579b',\n                        color: '#FFF'\n                      }\n\n                  }}\n\n                  \n                \n                detailPanel={[\n                    {\n                      tooltip: 'Show Name',\n                      render: rowData => {\n                        return (\n                          <div\n                            style={{\n                              fontSize: 18,\n                              textAlign: 'left',\n                              color: 'white',\n                              padding: '20px',\n                              backgroundColor: '#01579b',\n                            }}\n                          >\n                              <strong>Details: </strong> <br />\n                             \n                            Code: {rowData.Company} <br />\n                            Change: {rowData.Change} <br />\n                            Decription: {rowData.Description} <br />\n                            Stock: {rowData.Stock}<br />\n                            Index: {rowData.Index}<br />\n                            RsqHC:{rowData.RsqHC}<br />\n                            Sort: {rowData.Sort}<br />\n                            Lense Group ID:{ rowData.LensGroupID} <br />\n                            UV: {rowData.UV}<br />\n                            AR: {rowData.AR}<br />\n                            HC: {rowData.HC}<br />\n                            PH: {rowData.PH}<br />\n                            PO: {rowData.PO}<br />\n                            TL: {rowData.TL}<br />\n                            TD: {rowData.TD}<br />\n                            MC: {rowData.MC}<br />\n                          </div>\n                        )\n                      },\n                    }]}\n\n          \n                  data = {data} icons={tableIcons}/>        \n            </div>\n        </>\n    )\n\n    \n}\n\n\nconst LoginForm = ({ onSubmit, custData }) => {\n\n    return (\n\n<Form noValidate >\n          <Row className='mb-3'>\n          <Form.Group className='mb-3' controlId='exampleForm.ControlTextarea1'>\n    <Form.Label>Description</Form.Label>\n    <Form.Control as='textarea' rows={3} />\n  </Form.Group>\n  </Row>\n\n\n  <Row className='mb-3'>\n\n  <Form.Group\n              as={Col}\n              md='2'\n              controlId='validationFormik103'\n              className='position-relative'\n            >\n              <Form.Label>Index</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='\n                name='\n              />\n\n              <Form.Control.Feedback type='invalid' tooltip>\n           \n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group\n              as={Col}\n              md='6'\n              controlId='validationFormik103'\n              className='position-relative'\n            >\n              <Form.Label>Sort</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='\n                name='\n                defaultValue={custData.Sort} //Add one!!\n              />\n\n              <Form.Control.Feedback type='invalid' tooltip>\n           \n              </Form.Control.Feedback>\n            </Form.Group>\n\n\n            <Row className='mb-3'>\n<Form.Group\n              as={Col}\n              md='4'\n              className='position-relative'>\n                  <Form.Label>Lense Group</Form.Label>\n                  \n<select class='mb-3'>\n<option>Default select</option>\n  <option value='1'>STOCK Single Vision - Add to 71BS001</option>\n  <option value='2'>SURFACED Single Vision - Add to 72BS001</option>\n  <option value='4'>Bi/Trifocals (Add to 74BS001)</option>\n  <option value='6'>Varifocal Distance/Near (Add to 76BS001)</option>\n  <option value='7'>Add-Ons - Coatings</option>\n  <option value='8'>Add-Ons - Tints</option>\n  <option value='9'>Add-Ons - Other</option>\n</select></Form.Group>\n</Row>\n\n            \n            </Row>\n\n            <Row className='mb-6'>\n\n    <Form.Group className='mb-3' controlId='formBasicCheckbox'>\n    <Form.Check type='checkbox' label='RqsHQ' />\n  </Form.Group>\n  <Form.Group className='mb-3' controlId='formBasicCheckbox'>\n    <Form.Check type='checkbox' label='UV' />\n  </Form.Group>\n\n  <Form.Group className='mb-3' controlId='formBasicCheckbox'>\n    <Form.Check type='checkbox' label='AR' />\n  </Form.Group>\n\n  <Form.Group className='mb-3' controlId='formBasicCheckbox'>\n    <Form.Check type='checkbox' label='HC' />\n  </Form.Group>\n\n  <Form.Group className='mb-3' controlId='formBasicCheckbox'>\n    <Form.Check type='checkbox' label='PH' />\n  </Form.Group>\n\n  <Form.Group className='mb-3' controlId='formBasicCheckbox'>\n    <Form.Check type='checkbox' label='PO' />\n  </Form.Group>\n\n  <Form.Group className='mb-3' controlId='formBasicCheckbox'>\n    <Form.Check type='checkbox' label='TL' />\n  </Form.Group>\n\n  <Form.Group className='mb-3' controlId='formBasicCheckbox'>\n    <Form.Check type='checkbox' label='TD' />\n  </Form.Group>\n\n  <Form.Group className='mb-3' controlId='formBasicCheckbox'>\n    <Form.Check type='checkbox' label='MC' />\n  </Form.Group>\n  </Row>\n\n\n       \n         \n         \n          <Button type='submit'>Submit form</Button>\n        </Form>\n    );\n  };\n\nconst mapStateToProps = state => {\n    return {\n        clients: state.clients.clients,\n        loading: state.clients.loading,\n        userId: state.auth.userId,\n        token: state.auth.token,\n        totalClients: state.clients.totalClients,\n        lowerRange: state.clients.lowerRange,\n        upperRange: state.clients.upperRange,\n        loadingDeleteClient: state.clients.loading_delete_client,\n        clientDeleteComplete: state.clients.clientDeleteComplete,\n        showDeleteClientModal: state.clients.showDeleteClientModal,\n        role: state.auth.role,\n        totals: state.clients.totals\n    };\n}\n//can access these function to dispatch actions - via props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnFetchClients: (token, filter, userId, limit, pageNumber) => dispatch(actions.fetchClients(token, filter, userId, limit, pageNumber)),\n        OnFetchClient: (token, client_id) => dispatch(actions.fetchClient(token, client_id)),\n        OnFetchAssessment: (token, assessment_id, client_id) => dispatch(actionsAssessments.fetchAssessment(token, assessment_id, client_id)),\n        OnSearchClients: (token, search, filter, userId) => dispatch(actions.searchClients(token, search, filter, userId)),\n        OnUpdateClient: (token, client_id, updated_client, isArchived) => dispatch(actions.updateClient(token, client_id, updated_client, isArchived)),\n        OnDeleteClient: (token, client_id) => dispatch(actions.deleteClient(token, client_id)),\n        OnSetConfirmModalDeleteClient: (val) => dispatch(actions.setConfirmModalDeleteClient(val)),\n        OnCreate: (token, client_id) => dispatch(actions.createClient(token, client_id))\n    };\n}\n\n\nconst ind = {\n\n1:'00',2:'01',3:'02',4:'03',5:'04',6:'05',7:'06',8:'07',9:'08',10:'09',11:'10',12:'11',13:'12',14:'13',15:'14',16:'15',17:'16',18:'17',19:'18',20:'19',21:'20',22:'21',23:'22',24:'23',25:'24',26:'25',27:'26',28:'27',29:'28',30:'29',31:'30',32:'31',33:'32',34:'33',35:'34',36:'35',37:'36',38:'37',39:'38',40:'39',41:'40',42:'41',43:'42',44:'43',45:'44',46:'45',47:'46',48:'47',49:'48',50:'49',51:'50',52:'51',53:'52',54:'53',55:'54',56:'55',57:'56',58:'57',59:'58',60:'59',61:'60',62:'61',63:'62',64:'63',65:'64',66:'65',67:'66',68:'67',69:'68',70:'69',71:'70',72:'71',73:'72',74:'73',75:'74',76:'75',77:'76',78:'77',79:'78',80:'79',81:'80',82:'81',83:'82',84:'83',85:'84',86:'85',87:'86',88:'87',89:'88',90:'89',91:'90',92:'91',93:'92',94:'93',95:'94',96:'95',97:'96',98:'97',99:'98',100:'99',101:'A0',102:'A1',103:'A2',104:'A3',105:'A4',106:'A5',107:'A6',108:'A7',109:'A8',110:'A9',111:'B0',112:'B1',113:'B2',114:'B3',115:'B4',116:'B5',117:'B6',118:'B7',119:'B8',120:'B9',121:'C0',122:'C1',123:'C2',124:'C3',125:'C4',126:'C5',127:'C6',128:'C7',129:'C8',130:'C9',131:'D0',132:'D1',133:'D2',134:'D3',135:'D4',136:'D5',137:'D6',138:'D7',139:'D8',140:'D9',141:'E0',142:'E1',143:'E2',144:'E3',145:'E4',146:'E5',147:'E6',148:'E7',149:'E8',150:'E9',151:'F0',152:'F1',153:'F2',154:'F3',155:'F4',156:'F5',157:'F6',158:'F7',159:'F8',160:'F9',161:'G0',162:'G1',163:'G2',164:'G3',165:'G4',166:'G5',167:'G6',168:'G7',169:'G8',170:'G9',171:'H0',172:'H1',173:'H2',174:'H3',175:'H4',176:'H5',177:'H6',178:'H7',179:'H8',180:'H9',181:'J0',182:'J1',183:'J2',184:'J3',185:'J4',186:'J5',187:'J6',188:'J7',189:'J8',190:'J9',191:'K0',192:'K1',193:'K2',194:'K3',195:'K4',196:'K5',197:'K6',198:'K7',199:'K8',200:'K9',201:'L0',202:'L1',203:'L2',204:'L3',205:'L4',206:'L5',207:'L6',208:'L7',209:'L8',210:'L9',211:'M0',212:'M1',213:'M2',214:'M3',215:'M4',216:'M5',217:'M6',218:'M7',219:'M8',220:'M9',221:'N0',222:'N1',223:'N2',224:'N3',225:'N4',226:'N5',227:'N6',228:'N7',229:'N8',230:'N9',231:'P0',232:'P1',233:'P2',234:'P3',235:'P4',236:'P5',237:'P6',238:'P7',239:'P8',240:'P9',241:'Q0',242:'Q1',243:'Q2',244:'Q3',245:'Q4',246:'Q5',247:'Q6',248:'Q7',249:'Q8',250:'Q9',251:'R0',252:'R1',253:'R2',254:'R3',255:'R4',256:'R5',257:'R6',258:'R7',259:'R8',260:'R9',261:'S0',262:'S1',263:'S2',264:'S3',265:'S4',266:'S5',267:'S6',268:'S7',269:'S8',270:'S9',271:'T0',272:'T1',273:'T2',274:'T3',275:'T4',276:'T5',277:'T6',278:'T7',279:'T8',280:'T9',281:'U0',282:'U1',283:'U2',284:'U3',285:'U4',286:'U5',287:'U6',288:'U7',289:'U8',290:'U9',291:'V0',292:'V1',293:'V2',294:'V3',295:'V4',296:'V5',297:'V6',298:'V7',299:'V8',300:'V9',301:'W0',302:'W1',303:'W2',304:'W3',305:'W4',306:'W5',307:'W6',308:'W7',309:'W8',310:'W9',311:'X0',312:'X1',313:'X2',314:'X3',315:'X4',316:'X5',317:'X6',318:'X7',319:'X8',320:'X9',321:'Y0',322:'Y1',323:'Y2',324:'Y3',325:'Y4',326:'Y5',327:'Y6',328:'Y7',329:'Y8',330:'Y9',331:'Z0',332:'Z1',333:'Z2',334:'Z3',335:'Z4',336:'Z5',337:'Z6',338:'Z7',339:'Z8',340:'Z9',341:'0A',342:'1A',343:'2A',344:'3A',345:'4A',346:'5A',347:'6A',348:'7A',349:'8A',350:'9A',351:'0B',352:'1B',353:'2B',354:'3B',355:'4B',356:'5B',357:'6B',358:'7B',359:'8B',360:'9B',361:'0C',362:'1C',363:'2C',364:'3C',365:'4C',366:'5C',367:'6C',368:'7C',369:'8C',370:'9C',371:'0D',372:'1D',373:'2D',374:'3D',375:'4D',376:'5D',377:'6D',378:'7D',379:'8D',380:'9D',381:'0E',382:'1E',383:'2E',384:'3E',385:'4E',386:'5E',387:'6E',388:'7E',389:'8E',390:'9E',391:'0F',392:'1F',393:'2F',394:'3F',395:'4F',396:'5F',397:'6F',398:'7F',399:'8F',400:'9F',401:'0G',402:'1G',403:'2G',404:'3G',405:'4G',406:'5G',407:'6G',408:'7G',409:'8G',410:'9G',411:'0H',412:'1H',413:'2H',414:'3H',415:'4H',416:'5H',417:'6H',418:'7H',419:'8H',420:'9H',421:'0J',422:'1J',423:'2J',424:'3J',425:'4J',426:'5J',427:'6J',428:'7J',429:'8J',430:'9J',431:'0K',432:'1K',433:'2K',434:'3K',435:'4K',436:'5K',437:'6K',438:'7K',439:'8K',440:'9K',441:'0L',442:'1L',443:'2L',444:'3L',445:'4L',446:'5L',447:'6L',448:'7L',449:'8L',450:'9L',451:'0M',452:'1M',453:'2M',454:'3M',455:'4M',456:'5M',457:'6M',458:'7M',459:'8M',460:'9M',461:'0N',462:'1N',463:'2N',464:'3N',465:'4N',466:'5N',467:'6N',468:'7N',469:'8N',470:'9N',471:'0P',472:'1P',473:'2P',474:'3P',475:'4P',476:'5P',477:'6P',478:'7P',479:'8P',480:'9P',481:'0Q',482:'1Q',483:'2Q',484:'3Q',485:'4Q',486:'5Q',487:'6Q',488:'7Q',489:'8Q',490:'9Q',491:'0R',492:'1R',493:'2R',494:'3R',495:'4R',496:'5R',497:'6R',498:'7R',499:'8R',500:'9R',501:'0S',502:'1S',503:'2S',504:'3S',505:'4S',506:'5S',507:'6S',508:'7S',509:'8S',510:'9S',511:'0T',512:'1T',513:'2T',514:'3T',515:'4T',516:'5T',517:'6T',518:'7T',519:'8T',520:'9T',521:'0U',522:'1U',523:'2U',524:'3U',525:'4U',526:'5U',527:'6U',528:'7U',529:'8U',530:'9U',531:'0V',532:'1V',533:'2V',534:'3V',535:'4V',536:'5V',537:'6V',538:'7V',539:'8V',540:'9V',541:'0W',542:'1W',543:'2W',544:'3W',545:'4W',546:'5W',547:'6W',548:'7W',549:'8W',550:'9W',551:'0X',552:'1X',553:'2X',554:'3X',555:'4X',556:'5X',557:'6X',558:'7X',559:'8X',560:'9X',561:'0Y',562:'1Y',563:'2Y',564:'3Y',565:'4Y',566:'5Y',567:'6Y',568:'7Y',569:'8Y',570:'9Y',571:'0Z',572:'1Z',573:'2Z',574:'3Z',575:'4Z',576:'5Z',577:'6Z',578:'7Z',579:'8Z',580:'9Z',\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Export)\n\n\n                //     const dat = {\n                //     'LensID': '53',\n                //     'Category': 'Materials Lenses',\n                //     'field3': ',\n                //     'Sort': '11',\n                //     'SupplierParent': 'Unbranded',\n                //     'SupplierChild': 'Unbranded',\n                //     'Abbreviation': 'UB',\n                //     'Series_ID': 'Plastic (CR39) Lenses',\n                //     'LenseGroupID': '1',\n                //     'LenseGroup': 'STOCK Single Vision - Add to 81BS001',\n                //     'Rule1': 'Can add to 81BS001',\n                //     'Rule2': ',\n                //     'Rule3': ',\n                //     'RqsHC': 'NO',\n                //     'Type': 'STOCK',\n                //     'StartDate': '05/01/2017',\n                //     'EndDate': ', \n                //     'Active': '1',\n                //     'Code': '22222',\n                //     'Change': ',\n                //     'Description': 'Unbranded 1.50 Uncoated 1.5 Standard',\n                //     'Pack': ',\n                //     'Stock': 'Y',\n                //     'Index': '1.65',\n                //     'UV': 'UV',\n                //     'AR': 'AR',\n                //     'HC': 'HC', \n                //     'PH': 'PH',\n                //     'PO': 'PO',\n                //     'TL': 'TL',\n                //     'TD': 'TD',\n                //     'MC': 'MC',\n                //     'OAPrint': '1',\n                //     'MedAidPrint': '1',\n                //     'DiscPrint': '1',\n                //     'Company': 'Zeiss',\n                //     'field39': ',\n                //     'field40': ',\n                //     'field41': ',\n                //     'SAOAGroup': '7000'\n                //   }","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Auth/Auth.js",["858"],"import React from 'react'\nimport classes from './Auth.module.css'\nimport Logo from '../../Assets/Images/Sleep Science Logo File.png'\nimport { useFormik } from 'formik';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/auth';\nimport { Redirect } from 'react-router-dom';\n\nconst Auth = (props) => {\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        },\n        onSubmit: values => {\n            props.OnAuth(values)\n        },\n    });\n\n    let redirect = null\n\n    if (props.isAuthenticated) {\n        redirect = <Redirect to=\"/clients\" />\n    }\n\n    const errorMsg = props.loading ? null : props.error ? props.error : null\n\n\n    return (\n        <div className={classes.Container} style={{display: 'flex', justifyContent: 'center'}}>\n                <div className={classes.Box}>\n                    <h4>Welcome to LenseCODESk</h4>\n                    <h1>Log into your Account</h1>\n                    <p> {errorMsg} </p>\n\n                    <div>\n                        <form onSubmit={formik.handleSubmit} className={classes.Form}>\n                            <label htmlFor=\"email\">Email Address</label>\n                            <input\n                                id=\"email\"\n                                name=\"email\"\n                                type=\"email\"\n                                onChange={formik.handleChange}\n                                value={formik.values.email}\n                                className={classes.EmailInput}\n                                placeholder=\"example@example.com\"\n                            />\n                            <label htmlFor=\"password\">Password</label>\n                            <input\n                                id=\"password\"\n                                name=\"password\"\n                                type=\"password\"\n                                onChange={formik.handleChange}\n                                value={formik.values.password}\n                                className={classes.PasswordInput}\n                                placeholder=\"Password\"\n                            />\n                            <div className={classes.SignIn}>\n                                {!props.loading\n                                    ? <button type=\"submit\">Sign In</button>\n                                    : <button disabled={true} type=\"button\"><i className=\"fa fa-circle-o-notch fa-spin\"></i></button>\n                                }\n                            </div>\n                        </form>\n\n                    </div>\n\n                </div>\n            {redirect}\n        </div>\n    )\n}\n\n//this is used for getting the relevant data from the store which the components in this container require\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null,\n        loading: state.auth.loading,\n        error: state.auth.error\n    };\n}\n//This allows dispatching action functions as props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnAuth: (email, password) => dispatch(actions.auth(email, password))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Staff/Staff.js",["859"],"import React, { useEffect, useState } from 'react'\nimport Table from '../../components/Table/Table'\nimport classes from './Staff.module.css'\nimport * as actions from '../../store/actions/users';\n// import * as actionsClients from '../../store/actions/clients';\nimport { connect } from 'react-redux';\nimport LinkSidePanel from '../../components/LinkSidePanel/LinkSidePanel'\nimport LinkNewClientModal from '../../components/UI/Modals/LinkNewClientModal/LinkNewClientModal'\nimport { checkIfDefined } from '../../shared/Utility'\nimport RegisterStaffModal from '../../components/UI/Modals/RegisterStaffModal/RegisterStaffModal'\nimport ConfirmModal from '../../components/UI/Modals/ConfirmModal/ConfirmModal'\nimport FeedbackGlobal from '../../components/UI/FeedbackGlobal/FeedbackGlobal'\nimport Button from '../../components/UI/Button/Button'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nconst Staff = React.memo(props => {\n    let headings = [[\"Full Name\", \"priority1\"], [\"Contact Number\", \"priority4\"], [\"Email\", \"priority2\"]]\n\n    useEffect(() => {\n        props.OnFetchStaff(props.token, \"Staff\", 5, 1)\n    }, [])\n\n    const data = props.staff !== undefined\n        ? props.staff\n        : []\n\n    const [state, setState] = useState({\n        fullname: \"\",\n        id: \"\"\n    })\n\n    return (\n        <>\n            <ConfirmModal\n                show={props.showDeleteStaffModal}\n                close={() => props.OnSetConfirmModalDeleteStaff(false)}\n                removeHeading={props.staffDeleteLoadingComplete}\n            >{!props.loading_delete_staff\n                ? !props.staffDeleteLoadingComplete\n                    ? <> <p>By clicking confirm you are agreeing to <strong>delete {state.fullname}</strong>.</p>\n                        <div className={classes.ButtonGroup}>\n                            <Button buttonType={\"secondary\"} clicked={() => props.OnSetConfirmModal(false)}>Cancel</Button>\n                            <Button buttonType={\"primary\"} clicked={() => props.OnDeleteStaff(props.token, state.id)}>Confirm</Button>\n                        </div> </>\n                    : <FeedbackGlobal type=\"Success\" successMessage={\"Successfully deleted!\"} />\n                : <Spinner calledLocation=\"Staff\" loadingMessage={`Deleting ${state.fullname}`} />}\n            </ConfirmModal>\n            <div className={classes.Container}>\n                <div className={classes.SummaryHeader}>\n                    <div className={classes.BoxOne}>\n\n                    </div>\n                    <div className={classes.BoxTwo}>\n\n                    </div>\n                    <div className={classes.BoxThree}>\n\n                    </div>\n                    <div className={classes.BoxFour}>\n\n                    </div>\n                </div>\n                <Table\n                    title={\"Staff\"}\n                    createNewButtonTitle={\"Staff\"}\n                    headings={headings}\n                    data={data}\n                    OnSetStaffClientLinkPanel={props.OnSetStaffClientLinkPanel}\n                    OnSearchStaff={props.OnSearchStaff}\n                    OnFetchStaff={props.OnFetchStaff}\n                    OnDeleteStaff={props.OnDeleteStaff}\n                    OnSetConfirmModalDeleteStaff={props.OnSetConfirmModalDeleteStaff}\n                    showDeleteStaffModal={props.showDeleteStaffModal}\n                    OnSetStaffDeleteLoadingComplete={props.OnSetStaffDeleteLoadingComplete}\n                    staffDeleteLoadingComplete={props.staffDeleteLoadingComplete}\n                    loading_delete_staff={props.loading_delete_staff}\n                    OnFetchStaffClients={props.OnFetchStaffClients}\n                    loading={props.loading}\n                    totalUsers={props.totalUsers}\n                    lowerRange={props.lowerRange}\n                    upperRange={props.upperRange}\n                    OnSetRegisterStaffModal={props.OnSetRegisterStaffModal}\n                    role={props.role}\n                    loading_update_privileges={props.loading_update_privileges}\n                    OnUpdatePrivileges={props.OnUpdatePrivileges}\n                    setState={setState}\n                    token={props.token}\n                />\n            </div>\n            <LinkSidePanel\n                isOpen={props.showStaffClientLinkPanel}\n                OnSetStaffClientLinkModal={props.OnSetStaffClientLinkModal}\n                close={() => props.OnSetStaffClientLinkPanel(false)}\n                selectedStaff={props.selectedStaff}\n                OnDeleteStaffClientLink={props.OnDeleteStaffClientLink}\n                loading_delete_link={props.loading_delete_link}\n                selectedStaffClients={checkIfDefined(props.selectedStaffClients, [])}\n                loadingFetchingStaffClients={props.loadingFetchingStaffClients}\n                token={props.token}\n            />\n            < LinkNewClientModal\n                show={props.showStaffClientLinkModal}\n                close={() => props.OnSetStaffClientLinkModal(false)}\n                selectedStaff={props.selectedStaff}\n                clients={props.clients}\n                OnSearchClients={props.OnSearchClientsLinkModal}\n                OnCreateStaffClientLink={props.OnCreateStaffClientLink}\n                loading_link={props.loading_link}\n                userId={props.userId}\n                loadingSearchStaffClients={props.loadingSearchStaffClients}\n                OnDeleteStaffClientLink={props.OnDeleteStaffClientLink}\n                loading_delete_link={props.loading_delete_link}\n                token={props.token}\n            />\n            <RegisterStaffModal\n                show={props.showRegisterStaffModal}\n                close={() => props.OnSetRegisterStaffModal(false)}\n                showRegisterStaffConfirmModal={props.showRegisterStaffConfirmModal}\n                registeringStaffComplete={props.registeringStaffComplete}\n                OnSetRegisterStaffConfirmModal={props.OnSetRegisterStaffConfirmModal}\n                OnSetRegisteringStaffComplete={props.OnSetRegisteringStaffComplete}\n                loadingRegisterStaff={props.loadingRegisterStaff}\n                OnRegisterStaffUser={props.OnRegisterStaffUser}\n                error={props.error}\n                token={props.token}\n            />\n        </>\n    )\n})\n\nconst mapStateToProps = state => {\n    return {\n        staff: state.users.staff,\n        loading: state.users.loading,\n        showStaffClientLinkModal: state.users.showStaffClientLinkModal,\n        showStaffClientLinkPanel: state.users.showStaffClientLinkPanel,\n        selectedStaff: state.users.selectedStaff,\n        clients: state.users.clients,\n        showDeleteStaffModal: state.users.showDeleteStaffModal,\n        staffDeleteLoadingComplete: state.users.staffDeleteLoadingComplete,\n        loading_delete_staff: state.users.loading_delete_staff,\n        loading_link: state.users.loading_link,\n        loading_delete_link: state.users.loading_delete_link,\n        selectedStaffClients: state.users.selectedStaffClients,\n        totalUsers: state.users.totalUsers,\n        lowerRange: state.users.lowerRange,\n        upperRange: state.users.upperRange,\n        userId: state.auth.userId,\n\n        showRegisterStaffModal: state.users.showRegisterStaffModal,\n        showRegisterStaffConfirmModal: state.users.showRegisterStaffConfirmModal,\n        registeringStaffComplete: state.users.registeringStaffComplete,\n        loadingRegisterStaff: state.users.loadingRegisterStaff,\n        role: state.auth.role,\n        loading_update_privileges: state.users.loading_update_privileges,\n\n        error: state.users.error,\n        loadingSearchStaffClients: state.users.loadingSearchStaffClients,\n        loadingFetchingStaffClients: state.users.loadingFetchingStaffClients,\n\n        token: state.auth.token\n\n    };\n}\n//can access these function to dispatch actions - via props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnFetchStaff: (token, filter, limit, pageNumber) => dispatch(actions.fetchStaff(token, filter, limit, pageNumber)),\n        OnSetStaffClientLinkModal: (val) => dispatch(actions.setStaffClientLinkModal(val)),\n        OnSetStaffClientLinkPanel: (val, selectedStaff) => dispatch(actions.setStaffClientLinkPanel(val, selectedStaff)),\n        OnSearchStaff: (token, filter, search) => dispatch(actions.searchStaff(token, filter, search)),\n        OnSearchClientsLinkModal: (token, search) => dispatch(actions.searchClientsLinkModal(token, search)),\n        OnCreateStaffClientLink: (token, staff_id, updated_client_list, client) => dispatch(actions.createStaffClientLink(token, staff_id, updated_client_list, client)),\n        OnDeleteStaffClientLink: (token, staff_id, updated_client_list, client) => dispatch(actions.deleteStaffClientLink(token, staff_id, updated_client_list, client)),\n        OnDeleteStaff: (token, staff_id) => dispatch(actions.deleteStaff(token, staff_id)),\n        OnSetConfirmModalDeleteStaff: (staff_id) => dispatch(actions.setConfirmModalDeleteStaff(staff_id)),\n        OnSetStaffDeleteLoadingComplete: (value) => dispatch(actions.setStaffDeleteLoadingComplete(value)),\n        OnFetchStaffClients: (token, staff_id) => dispatch(actions.fetchStaffClients(token, staff_id)),\n        OnSetRegisterStaffModal: (val) => dispatch(actions.setRegisterStaffModal(val)),\n        OnSetRegisterStaffConfirmModal: (val) => dispatch(actions.setRegisterStaffConfirmModal(val)),\n        OnSetRegisteringStaffComplete: (val) => dispatch(actions.setRegisteringStaffComplete(val)),\n        OnRegisterStaffUser: (token, user) => dispatch(actions.registerStaffUser(token, user)),\n        OnUpdatePrivileges: (token, user_id, role) => dispatch(actions.updatePrivileges(token, user_id, role)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Staff)","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Clients/Clients.js",["860","861","862","863","864","865","866"],"import React, { useEffect, useState } from 'react'\nimport Table from '../../components/Table/Table'\nimport classes from './Clients.module.css'\nimport * as actions from '../../store/actions/clients';\nimport * as actionsAssessments from '../../store/actions/assessments';\nimport { connect } from 'react-redux';\nimport ConfirmModal from '../../components/UI/Modals/ConfirmModal/ConfirmModal'\nimport FeedbackGlobal from '../../components/UI/FeedbackGlobal/FeedbackGlobal'\nimport Button from '../../components/UI/Button/Button'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport { checkIfDefined } from '../../shared/Utility'\nimport { forwardRef } from 'react';\nimport MaterialTable from \"material-table\";\nimport axios from 'axios';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n\n\nconst Clients = (props) => {\n\n    const [users, setUsers] = useState([])\n\n\n    useEffect(() => {\n       \n    })    \n    let headings = [[\"Description\", \"priority1\"], [\"Type\", \"priority6\"], [\"Date Created\", \"priority8\"], [\"Code\", \"priority2\"], [\"Type\", \"priority5\"],\n    [\"Change\", \"priority9\"], [\"Status\", \"priority4\"]]\n    \n    useEffect(() => {\n        props.OnFetchClients(props.token,)\n    }, [])\n\n    const [state, setState] = useState({\n        fullname: \"\",\n        id: \"\"\n    })\n    \n\n    const data = props.clients !== undefined\n        ? props.clients\n        : []\n  \n\n    return (\n        <>\n            <ConfirmModal\n                show={props.showDeleteClientModal}\n                close={() => props.OnSetConfirmModalDeleteClient(false)}\n                removeHeading={props.clientDeleteComplete}\n            >{!props.loadingDeleteClient\n                ? !props.clientDeleteComplete\n                    ? <> <p>By clicking confirm you are agreeing to <strong>delete {state.fullname}</strong>.</p>\n                        <div className={classes.ButtonGroup}>\n                            <Button buttonType={\"secondary\"} clicked={() => props.OnSetConfirmModal(false)}>Cancel</Button>\n                            <Button buttonType={\"primary\"} clicked={() => props.OnDeleteClient(props.token, state.id)}>Confirm</Button>\n                        </div> </>\n                    : <FeedbackGlobal type=\"Success\" successMessage={\"Successfully deleted!\"} />\n                : <Spinner calledLocation=\"Staff\" loadingMessage={`Deleting ${state.fullname}`} />}\n            </ConfirmModal>\n\n            <div>\n                <ul>\n                    {users.map(user => (<li key={user.id}>{users.name}</li>))}\n                </ul>\n            </div>\n           \n            <div className={classes.Container}>     \n                <MaterialTable  \n                title = \"Series 1000\"         \n                columns={[\n                { title: 'lense_id', field: 'lense_id'},\n                { title: 'category', field: 'category'},\n                { title: 'sort', field: 'sort'},\n                { title: 'supplier_parent', field: 'supplier_parent'},\n                { title: 'abbreviation', field: 'abbreviation'},\n                { title: 'series_id', field: 'series_id'},\n                { title: 'lense_group_id', field: 'lense_group_id'},\n                { title: 'lense_group', field: 'lense_group'},\n                { title: 'rule_1', field: 'rule_1'},\n                { title: 'rule_2', field: 'rule_2'},\n                { title: 'rule_4', field: 'rule_4'},\n                { title: 'rqshc', field: 'rqshc'},\n                { title: 'type', field: 'type'},\n                { title: 'start_date', field: 'start_date'},\n                { title: 'end_date', field: 'end_date'},\n                { title: 'active', field: 'active'},\n                { title: 'description', field: 'description'},\n                { title: 'code', field: 'code'},\n                { title: 'change', field: 'change'},\n                { title: 'pack', field: 'pack'},\n                { title: 'stock', field: 'stock'},\n                { title: 'index', field: 'index'},\n                { title: 'uv', field: 'uv'},\n                { title: 'ar', field: 'ar'},\n                { title: 'hc', field: 'hc'},\n                { title: 'ph', field: 'ph'},\n                { title: 'po', field: 'po'},\n                { title: 'tl', field: 'tl'},\n                { title: 'td', field: 'td'},\n                { title: 'mc', field: 'mc'},\n                { title: 'oaprint', field: 'oaprint'},\n                { title: 'medaidprint', field: 'medaidprint'},\n                { title: 'discprint', field: 'discprint'}\n                ]} \n                    options={{\n                    exportButton: true,\n                    filtering: true\n                  }}\n                \n                  editable={{\n                    onRowUpdate: (newData, oldData) =>\n                      new Promise((resolve) => {\n                        //handleRowUpdate(newData, oldData, resolve);\n                        props.OnUpdateClient(props.token, oldData.id, newData, false)\n                        resolve()\n                        window.location.reload();\n                        return\n                    \n                        \n                  }),\n                  onRowAdd: (newData) =>\n                    new Promise((resolve) => {\n                    \n                     resolve()\n                    }),\n\n                  onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                        alert('here')\n                      //handleRowDelete(oldData, resolve)\n                      props.OnDeleteClient(props.token, oldData.id)\n                      props.data.splice(0, 1);\n                      resolve()\n                   \n                      return\n                      \n                    }),\n                  }}\n                  data = {data} icons={tableIcons}/>        \n            </div>\n        </>\n    )\n\n    \n}\n\n\n\n\nconst mapStateToProps = state => {\n    return {\n        clients: state.clients.clients,\n        loading: state.clients.loading,\n        userId: state.auth.userId,\n        token: state.auth.token,\n        totalClients: state.clients.totalClients,\n        lowerRange: state.clients.lowerRange,\n        upperRange: state.clients.upperRange,\n        loadingDeleteClient: state.clients.loading_delete_client,\n        clientDeleteComplete: state.clients.clientDeleteComplete,\n        showDeleteClientModal: state.clients.showDeleteClientModal,\n        role: state.auth.role,\n        totals: state.clients.totals\n    };\n}\n//can access these function to dispatch actions - via props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnFetchClients: (token, filter, userId, limit, pageNumber) => dispatch(actions.fetchClients(token, filter, userId, limit, pageNumber)),\n        OnFetchClient: (token, client_id) => dispatch(actions.fetchClient(token, client_id)),\n        OnFetchAssessment: (token, assessment_id, client_id) => dispatch(actionsAssessments.fetchAssessment(token, assessment_id, client_id)),\n        OnSearchClients: (token, search, filter, userId) => dispatch(actions.searchClients(token, search, filter, userId)),\n        OnUpdateClient: (token, client_id, updated_client, isArchived) => dispatch(actions.updateClient(token, client_id, updated_client, isArchived)),\n        OnDeleteClient: (token, client_id) => dispatch(actions.deleteClient(token, client_id)),\n        OnSetConfirmModalDeleteClient: (val) => dispatch(actions.setConfirmModalDeleteClient(val)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Clients)","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Layout/Layout.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/Auth/Logout/Logout.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/StaffPasswordChange/StaffPasswordChange.js",["867"],"/* \n    This is the container for the changing of a staff member's password\n*/\nimport React, { useEffect } from 'react';\nimport classes from './StaffPasswordChange.module.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/auth';\nimport { Redirect } from 'react-router-dom';\n// import PasswordStengthMeter from '../../components/UI/PasswordStrengthMeter/PasswordStrengthMeter'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst Schema = Yup.object().shape({\n    password: Yup.string().required(\"This field is required\"),\n    confirm_password: Yup.string().when(\"password\", {\n        is: val => (val && val.length > 0 ? true : false),\n        then: Yup.string().oneOf(\n            [Yup.ref(\"password\")],\n            \"Both password need to be the same\"\n        )\n    })\n});\n\nconst StaffPasswordChange = (props) => {\n\n    useEffect(() => {\n        props.OnVerifyToken(props.location.search.substring(6))\n    }, [])\n\n    let form = (\n        <Formik\n            initialValues={{\n                password: '',\n                confirm_password: '',\n            }}\n            validationSchema={Schema}\n            onSubmit={(values, { setSubmitting }) => {\n                // if (values.password === values.confirm_password) {\n                    props.OnChangePassword(props.email, values.password, values.confirm_password);\n                // }\n                // setSubmitting(false)\n            }}\n        >\n            {({ errors, touched }) => (\n                <Form className={classes.Form}>\n                    <label htmlFor=\"password\">New password</label>\n                    <Field name=\"password\" type=\"password\" className={classes.Input} />\n                    <ErrorMessage name=\"password\" />\n\n                    <label htmlFor=\"confirm_password\">Confirm password</label>\n                    <Field name=\"confirm_password\" type=\"password\" className={classes.Input} />\n                    <ErrorMessage name=\"confirm_password\" />\n\n                    <div className={classes.ButtonGroup}>\n                        {/* <Button buttonType={\"secondary\"}>Cancel</Button> */}\n                        {/* <Button buttonType={\"primary\"} clicked={ }>Register</Button> */}\n                        <button type=\"submit\" className={classes.Button}>Save</button>\n                    </div>\n                </Form>\n            )}\n        </Formik>\n    )\n    const signInRedirect = props.passwordChangeSuccess && <Redirect to=\"/signin\" />\n\n    const content =\n        props.loading\n            ? <h2>Loading</h2>\n            : !props.loading && !props.tokenVerified\n                ? <h2>Token has expired</h2>\n                : <div className={classes.Container}>\n                    <h1>Reset password</h1>\n                    <p><strong>Please ensure to set a strong password that is different from other passwords you use.</strong></p>\n                    {/* <h3 className={classes.ErrorMessage}>{errMsg}</h3> */}\n                    {form}\n                    {signInRedirect}\n                </div>\n    return (\n        content\n    )\n}\n//this is used for getting the relevant data from the store which the components in this container require\nconst mapStateToProps = state => {\n    return {\n        passwordChangeSuccess: state.auth.passwordChangeSuccess,\n        email: state.auth.email,\n        tokenVerified: state.auth.tokenVerified,\n        loading: state.auth.loading,\n        error: state.auth.error,\n        token: state.auth.token\n    };\n}\n//This allows dispatching action functions as props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnChangePassword: (email, password, confirmPassword) => dispatch(actions.changePassword(email, password, confirmPassword)),\n        OnVerifyToken: (token) => dispatch(actions.verifyToken(token))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StaffPasswordChange);","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/containers/ClientProfile/ClientProfile.js",["868","869","870"],"import React, { useState, useRef, useEffect } from 'react'\nimport classes from './ClientProfile.module.css'\nimport AboutYou from '../../components/QuestionnaireForms/AboutYou/AboutYou'\nimport * as actions from '../../store/actions/clients';\nimport { connect } from 'react-redux';\nimport { checkIfDefined } from '../../shared/Utility'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport Button from '../../components/UI/Button/Button'\nimport ConfirmModal from '../../components/UI/Modals/ConfirmModal/ConfirmModal'\nimport FeedbackGlobal from '../../components/UI/FeedbackGlobal/FeedbackGlobal'\nimport { useFormik } from 'formik';\nimport * as Yup from \"yup\";\n\nconst ClientProfile = (props) => {\n\n    if (!props.loading_posting_client_update && props.updating_client_complete) {\n        setTimeout(() => {\n            props.OnSetClientUpdateConfirmModal(false)\n            props.OnSetUpdatingClientComplete(false)\n        }, 2000)\n    }\n\n    \n    const clientDetails = checkIfDefined(props.client, {})\n    const formikAboutYou = useFormik({\n        initialValues: checkIfDefined(props.client, {}),\n        validationSchema: Yup.object({\n            age: clientDetails.age !== undefined && clientDetails.age !== null ? Yup.number().typeError(\"Number required\") : null,\n            height: clientDetails.height !== undefined && clientDetails.height !== null ? Yup.number().typeError(\"Number required\") : null,\n            weight: clientDetails.weight !== undefined && clientDetails.weight !== null ? Yup.number().typeError(\"Number required\") : null,\n            waist_circumference: clientDetails.waist_circumference !== undefined && clientDetails.waist_circumference !== null ? Yup.number().typeError(\"Number required\") : null,\n            neck_circumference: clientDetails.neck_circumference !== undefined && clientDetails.neck_circumference !== null ? Yup.number().typeError(\"Number required\") : null\n        })\n    });\n\n    return (\n        <>\n            <ConfirmModal\n                show={props.showClientUpdateConfirmModal}\n                close={() => props.OnSetClientUpdateConfirmModal(false)}\n                removeHeading={props.error || props.updating_client_complete}\n            >{!props.loading_posting_client_update\n                ? !props.updating_client_complete\n                    ? !props.error\n                        ? <> <p>By clicking confirm you are agreeing to <strong>save your changes</strong></p>\n                            <div className={classes.ButtonGroup}>\n                                <Button buttonType={\"secondary\"} clicked={() => props.OnSetClientUpdateConfirmModal(false)}>Cancel</Button>\n                                <Button buttonType={\"primary\"} clicked={() => props.OnUpdateClient(props.token, props.client.id, formikAboutYou.values, false)}>Confirm</Button>\n                            </div> </>\n                        : <FeedbackGlobal type=\"Fail\" error={props.error === \"ER_DUP_ENTRY\" ? \"ID already exists!\" : null} OnSetAssessmentError={() => props.OnSetClientUpdateConfirmModal(false)} cancelError={() => props.OnSetClientUpdateConfirmModal(false)} errorLocation={\"client_profile\"} />\n                    : <FeedbackGlobal type=\"Success\" />\n                : <Spinner calledLocation=\"ClientProfile\" loadingMessage=\"Saving changes...\" />}\n            </ConfirmModal>\n            <div className={classes.Container}>\n                <div className={classes.Left}>\n                    <div className={classes.FormContainer}>\n                        {!props.loading_fetch_client\n                            ? <AboutYou\n                                client_details={props.client}\n                                isClientProfile={true}\n                                formik={formikAboutYou}\n                            />\n                            : <Spinner />\n                        }\n                        <div className={classes.ButtonGroup}>\n                            <Button buttonType={\"primary\"} clicked={() => props.OnSetClientUpdateConfirmModal(true)}>SAVE</Button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        userId: state.auth.userId,\n        token: state.auth.token,\n        client: state.clients.client,\n        loading_fetch_client: state.clients.loading_fetch_client,\n        loading_posting_client_update: state.clients.loading_posting_client_update,\n        showClientUpdateConfirmModal: state.clients.showClientUpdateConfirmModal,\n        updating_client_complete: state.clients.updating_client_complete,\n        error: state.clients.error\n    };\n}\n//can access these function to dispatch actions - via props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnUpdateClient: (token, client_id, updated_client, isArchived) => dispatch(actions.updateClient(token, client_id, updated_client, isArchived)),\n        OnSetClientUpdateConfirmModal: (val) => dispatch(actions.setClientUpdateConfirmModal(val)),\n        OnSetUpdatingClientComplete: (val) => dispatch(actions.setUpdatingClientComplete(val)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientProfile)","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/ProtectedRoute/ProtectedRoute.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/shared/Utility.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/environment.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/actions/users.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/actions/assessments.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/store/actions/clients.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/Table/Table.js",["871","872"],"import React, { useState, useRef, useCallback, useEffect } from 'react'\nimport classes from './Table.module.css'\nimport Row from './Row/Row'\nimport debounce from 'lodash.debounce';\nimport SearchIcon from '../../Assets/Icons/search.svg'\nimport chevronright from '../../Assets/Icons/chevron-right.svg'\nimport chevronleft from '../../Assets/Icons/chevron-left.svg'\nimport chevronright_disabled from '../../Assets/Icons/chevron-right_disabled.svg'\nimport chevronleft_disabled from '../../Assets/Icons/chevron-left_disabled.svg'\n\nconst Table = (props) => {\n\n    const [tableState, _setTableState] = useState({\n        filter: props.title === \"Clients\" ? \"Active\" : \"Staff\",\n        limit: 5,\n        pageNumber: 1\n    })\n\n    const tableStateRef = useRef(tableState);\n\n    const setTableState = val => {\n        tableStateRef.current = val;\n        _setTableState(val);\n    }\n\n    const [search, _setSearch] = useState(\"\")\n    const searchRef = useRef(search);\n\n    const setSearch = val => {\n        searchRef.current = val;\n        _setSearch(val);\n    }\n\n    //delaying the automatic search by 600ms\n    const delayedSearch = useCallback(debounce(() => searchRef.current !== '' ? props.title === \"Clients\" ? props.OnSearchClients(props.token, searchRef.current, tableStateRef.current.filter, props.userId) : props.OnSearchStaff(props.token, tableStateRef.current.filter, searchRef.current) : null, 600), [search])\n\n    const inputChangeHandler = (e) => {\n        let search = searchRef.current;\n        search = e.target.value;\n        setSearch(search);\n\n        if (search === '') {\n            setTableState({ ...tableState, pageNumber: 1 })\n            props.title === \"Clients\" ? props.OnFetchClients(props.token, tableStateRef.current.filter, props.userId, tableStateRef.current.limit, 1) : props.OnFetchStaff(props.token, tableStateRef.current.filter, tableStateRef.current.limit, tableStateRef.current.pageNumber)\n        }\n    }\n\n    const manualSearch = (value) => {\n        props.title === \"Clients\" ? props.OnSearchClients(props.token, searchRef.current, tableStateRef.current.filter, props.userId) : props.OnSearchStaff(props.token, tableStateRef.current.filter, searchRef.current)\n    }\n\n\n    const filterChangeHandler = (e) => {\n        setTableState({ ...tableState, filter: e.target.value, pageNumber: 1 })\n        props.title === \"Clients\" ? props.OnFetchClients(props.token, e.target.value, props.userId, tableStateRef.current.limit, tableStateRef.current.pageNumber) : props.OnFetchStaff(props.token, e.target.value, tableStateRef.current.limit, tableStateRef.current.pageNumber)\n    }\n\n    const setLimit = (e) => {\n        setTableState({ ...tableState, limit: e.target.value, pageNumber: 1 })\n        props.title === \"Clients\" ? props.OnFetchClients(props.token, tableStateRef.current.filter, props.userId, tableStateRef.current.limit, tableStateRef.current.pageNumber) : props.OnFetchStaff(props.token, tableStateRef.current.filter, tableStateRef.current.limit, tableStateRef.current.pageNumber)\n    }\n\n    const setPageNumber = (num) => {\n        setTableState({ ...tableState, pageNumber: num })\n        props.title === \"Clients\" ? props.OnFetchClients(props.token, tableStateRef.current.filter, props.userId, tableStateRef.current.limit, tableStateRef.current.pageNumber) : props.OnFetchStaff(props.token, tableStateRef.current.filter, tableStateRef.current.limit, tableStateRef.current.pageNumber)\n    }\n\n    useEffect(() => {\n        delayedSearch();\n        return delayedSearch.cancel;\n    }, [searchRef.current, delayedSearch]);\n\n    //mapping the headings for the columns of the table\n    const headings = props.headings.map(heading => {\n        return <th\n            key={heading}\n            className={classes[heading[1]]}>\n            {heading[0].toUpperCase()}\n        </th>\n    })\n\n    props.loading && document.getElementById('scrollingcontainer').scrollTo(0, 0)\n\n    const rows = props.data.map(row =>\n        <Row\n            key={row.id}\n            data={row}\n            headings={props.headings}\n            //state changing methods\n            OnFetchAssessment={props.OnFetchAssessment}\n            OnUpdateClient={props.OnUpdateClient}\n            isArchived={tableStateRef.current.filter === \"Archived\"}\n            isStaff={props.title === \"Staff\"}\n            OnSetStaffClientLinkPanel={props.OnSetStaffClientLinkPanel}\n            OnDeleteStaff={props.OnDeleteStaff}\n            OnSetConfirmModalDeleteStaff={props.OnSetConfirmModalDeleteStaff}\n            showDeleteStaffModal={props.showDeleteStaffModal}\n            OnSetStaffDeleteLoadingComplete={props.OnSetStaffDeleteLoadingComplete}\n            staffDeleteLoadingComplete={props.staffDeleteLoadingComplete}\n            loading_delete_staff={props.loading_delete_staff}\n            OnFetchStaffClients={props.OnFetchStaffClients}\n            OnFetchClient={props.OnFetchClient}\n            role={props.role}\n            loading_update_privileges={props.loading_update_privileges}\n            OnUpdatePrivileges={props.OnUpdatePrivileges}\n            setState={props.setState}\n            setClientState={props.setClientState}\n            OnDeleteClient={props.OnDeleteClient}\n            OnSetConfirmModalDeleteClient={props.OnSetConfirmModalDeleteClient}\n            showDeleteClientModal={props.showDeleteClientModal}\n            loadingDeleteClient={props.loadingDeleteClient}\n            clientDeleteComplete={props.clientDeleteComplete}\n            token={props.token}\n        />)\n\n    return (\n        <div className={classes.Container}>\n            <div className={classes.Header}>\n                <h1>{props.title}</h1>\n\n                <div className={classes.SearchContainer}>\n                    {props.title === \"Staff\" &&\n                        <button className={classes.AddButton} onClick={() => props.OnSetRegisterStaffModal(true)}\n                        ><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"18\" height=\"18\" fill=\"#fff\">\n                                <path d=\"M12.75 7.75a.75.75 0 00-1.5 0v3.5h-3.5a.75.75 0 000 1.5h3.5v3.5a.75.75 0 001.5 0v-3.5h3.5a.75.75 0 000-1.5h-3.5v-3.5z\"></path>\n                                <path fillRule=\"evenodd\" d=\"M12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11S18.075 1 12 1zM2.5 12a9.5 9.5 0 1119 0 9.5 9.5 0 01-19 0z\"></path>\n                            </svg>\n                    New Staff\n                </button>}\n                    <div className={classes.Search}>\n                        <select onChange={(e) => filterChangeHandler(e)} className={classes.FilterDropdown}>\n                            {props.title === \"Clients\"\n                                ? <>\n                                    <option>Active</option>\n                                    <option>New</option>\n                                    <option>Archived</option>\n                                    <option>All</option>\n                                </>\n                                : <>\n                                    <option>Staff</option>\n                                    <option>Admin</option>\n                                </>\n                            }\n                        </select>\n\n                        <input placeholder=\"Search by name...\" className={classes.SearchBar} onChange={(e) => inputChangeHandler(e)} value={searchRef.current} />\n\n                        <button className={classes.SearchButton} onClick = {manualSearch}>\n                            <img src={SearchIcon} alt=\"search icon\" />\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            <div className={classes.ScrollingContainer} id={\"scrollingcontainer\"}>\n                <table className={classes.Table}>\n                    <thead>\n                        <tr className={classes.TableHeadingRow}>\n                            <th>ACTIONS</th>\n                            {headings}\n                        </tr>\n                    </thead>\n                    <tbody className={!props.loading ? classes.Tbody : classes.Tbody_loading}>\n                        {rows}\n                    </tbody>\n                </table>\n\n            </div>\n            <div className={classes.PagenationController}>\n                <span className={classes.RowsPerPage}>Rows per page: </span>\n                <select onChange={(e) => setLimit(e)}>\n                    <option value={5}>5</option>\n                    <option value={10}>10</option>\n                    <option value={25}>25</option>\n                </select>\n                <span className={classes.Ranges}>{props.lowerRange}-{props.upperRange} of {props.title === \"Clients\" ? props.totalClients : props.totalUsers}</span>\n                <div className={classes.ChevronActions}>\n                    <button className={tableStateRef.current.pageNumber !== 1 ? classes.LeftButton : classes.LeftButton_disabled} tabIndex=\"-1\" type=\"button\" title=\"Previous page\" aria-label=\"Previous page\" onClick={tableStateRef.current.pageNumber !== 1 ? () => setPageNumber(tableStateRef.current.pageNumber - 1) : null}>\n                        <img src={tableStateRef.current.pageNumber !== 1 ? chevronleft : chevronleft_disabled} alt=\"chevron left\" />\n                    </button>\n                    <button className={props.upperRange !== (props.title === \"Clients\" ? props.totalClients : props.totalUsers) ? classes.RightButton : classes.RightButton_disabled} tabIndex=\"0\" type=\"button\" title=\"Next page\" aria-label=\"Next page\" onClick={props.upperRange !== (props.title === \"Clients\" ? props.totalClients : props.totalUsers) ? () => setPageNumber(tableStateRef.current.pageNumber + 1) : null}>\n                        <img src={props.upperRange !== (props.title === \"Clients\" ? props.totalClients : props.totalUsers) ? chevronright : chevronright_disabled} alt=\"chevron right\" />\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Table ","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/FeedbackGlobal/FeedbackGlobal.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Button/Button.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Spinner/Spinner.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/SideNavBar/SideNavBar.js",["873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898"],"import React, { useState, useEffect } from 'react'\nimport { Modal, Form, Dropdown, DropdownButton, Spinner} from \"react-bootstrap\";\nimport classes from './SideNavBar.module.css'\nimport looks from '../NavItem/NavItem.module.css'\nimport NavItem from '../NavItem/NavItem'\nimport Logo from '../../../Assets/Images/Sleep Science Logo File.png'\nimport * as actionsAssessments from '../../../store/actions/assessments'\nimport * as actionsUsers from '../../../store/actions/users'\nimport { connect } from 'react-redux';\nimport OutsideAlerter from '../../OutsideAlerter/OutsideAlerter'\nimport { useHistory } from 'react-router-dom'\nimport Button from '../Button/Button'\nimport { FormGroup, Icon, TextareaAutosize } from '@material-ui/core'\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport classess from '../NavItem/NavItem.module.css'\nimport * as actions from '../../../store/actions/clients';\n\n\n\nconst SideNavBar = (props) => {\n    \n\n    const [showDropDown, setShowDropDown] = useState(false);\n    const history = useHistory();\n    const role = (props.userRole)\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const data = props.clients !== undefined\n    ? props.clients\n    : []\n\n\n\n  const onLoginFormSubmit = (e) => {\n    alert('Lets add a supplier!')\n    props.onRegisterStaffUser(props.token, 'Hayden', 'norrie')\n    alert('Done!')\n    e.preventDefault();\n    handleClose();\n  };\n \n\n\n    //logs the user out of the system\n    const logout = () => {\n        history.push(\"/logout\");\n    }\n\n    const dropdown = (\n        <OutsideAlerter setShowDropDown={setShowDropDown} show={showDropDown}>\n            {showDropDown &&\n                <ul className={classes.DropDownContainer}>\n                    <li className={classes.DropDownButton} onClick={() => props.OnSetUpdateStaffModal(true)} >\n                        Edit your details\n                    </li>\n                    <li className={classes.DropDownButton} onClick={logout}>\n                        Logout\n                    </li>\n                </ul>\n            }\n        </OutsideAlerter>\n    )\n\n    return (\n        <>\n        \n\n<Modal  show={show} onHide={handleClose} style = {{position: 'absolute'}}>\n        <Modal.Header closeButton>\n          <Modal.Title>Create Supplier</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <LoginForm onSubmit={onLoginFormSubmit} />\n        </Modal.Body>\n      </Modal>\n            <div className={classes.Container}>\n                <img src={Logo} className={classes.Logo} alt=\"logo\" style = {{padding: 5}}/>\n\n                {}\n                \n                {/* <NavItem link={\"/clients\"}>Glasses</NavItem> */}\n                {props.userRole == 'superuser'? <NavItem link={\"/mastertable\"}supplierchild={props.userDetails.supplierchild} >Master</NavItem>: null }\n                {/* {props.userRole == 'superuser'? <NavItem link={\"/seriesone\"} company={props.userDetails.company} >Series 1000</NavItem>: null }\n                {props.userRole == 'superuser'? <NavItem link={\"/seriestwo\"} company={props.userDetails.company}  >Series 2000</NavItem>: null }\n                {props.userRole == 'superuser'? <NavItem link={\"/seriesfour\"}company={props.userDetails.company} >Series 4000</NavItem>: null }\n                {props.userRole == 'superuser'? <NavItem link={\"/seriesfive\"}company={props.userDetails.company} >Series 5000</NavItem>: null }\n                {props.userRole == 'superuser'? <NavItem link={\"/seriessix\"}company={props.userDetails.company} >Series 6000</NavItem>: null } */}\n                {props.userRole == 'superuser' || props.userRole == 'supplier' || props.userRole == 'admin' ? <NavItem link={\"/seriesseven\"}supplierchild={props.userDetails.supplierchild} >Series 7000</NavItem>: null }\n                {props.userRole == 'superuser' || props.userRole == 'supplier' || props.userRole == 'admin' ? <NavItem link={\"/serieseight\"}supplierchild={props.userDetails.supplierchild} >Series 8000</NavItem>: null }\n                {props.userRole == 'superuser' ? <NavItem link={\"/stafftable\"}company={props.userDetails.supplierchild} >Staff</NavItem>: null }\n                {props.userRole == 'superuser' || props.userRole == 'admin'? <NavItem link={\"/exporttable\"}supplierchild={props.userDetails.supplierchild} >Export table</NavItem>: null }\n                \n                {/* {props.userRole == 'superuser'? \n                <Button clicked = {handleShow} className={classess.NavItem}>\n                Add Supplier\n            </Button>: null} */}\n                \n\n                <div className={classes.UserContainer} onClick={() => setShowDropDown(true)}>\n                    <div className={classes.Circle}>\n\n                    </div>\n                    <div className={classes.Info}>\n                        <span className={classes.UserFullName}>{props.userDetails.fullname}</span>\n                        <span className={classes.UserRole}>{props.userRole.toUpperCase()}</span>\n                    </div>\n                    {dropdown}\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nconst LoginForm = ({ onSubmit }) => {\n      const [email, setEmail] = useState(\"\");\n      const [password, setPassword] = useState(\"\");\n      return (\n\n<Form>\n\n<Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n    <Form.Label>First Name</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Password\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n    <Form.Label>Surname</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Password\" />\n  </Form.Group>\n\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n    <Form.Label>Repeat Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" />\n  </Form.Group>\n\n\n\n\n  <FormGroup  className=\"mb-3\" controlId=\"formBasicPassword\" >\n  <Form.Label>Company</Form.Label>\n  <Dropdown>\n  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" >\n    none\n  </Dropdown.Toggle>\n\n  <Dropdown.Menu>\n    <Dropdown.Item href=\"#/action-1\">Zeiss</Dropdown.Item>\n    <Dropdown.Item href=\"#/action-2\">Goya</Dropdown.Item>\n    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n  </Dropdown.Menu>\n</Dropdown>\n  </FormGroup>\n\n  <FormGroup  className=\"mb-3\" controlId=\"formBasicPassword\" >\n  <Form.Label>Role</Form.Label>\n  <Dropdown>\n  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n    none\n  </Dropdown.Toggle>\n\n  <Dropdown.Menu>\n    <Dropdown.Item href=\"#/action-1\">Supplier</Dropdown.Item>\n    <Dropdown.Item href=\"#/action-2\">Admin</Dropdown.Item>\n    <Dropdown.Item href=\"#/action-3\">Superuser</Dropdown.Item>\n  </Dropdown.Menu>\n</Dropdown>\n  </FormGroup>\n\n\n\n  <button variant=\"primary\" type=\"submit\" class=\"btn btn-primary\" onClick = {onSubmit}>\n    Create Supplier\n  </button>\n\n</Form>\n      );\n    };\n\nconst mapStateToProps = state => {\n    return {\n        showStartAssessmentModal: state.assessments.showStartAssessmentModal,\n        loading_processing: state.assessments.loading_processing,\n        loading_start_assessment: state.assessments.loading_start_assessment,\n        start_assessment_file: state.assessments.start_assessment_file,\n        fileProcessingComplete: state.assessments.fileProcessingComplete,\n        userRole: state.auth.role,\n        userDetails: state.users.signedInUser,\n        startAssessmentComplete: state.assessments.startAssessmentComplete,\n        startAssessmentConfirmModal: state.assessments.startAssessmentConfirmModal,\n        totalClients: state.assessments.totalClients,\n        totalAssessments: state.assessments.totalAssessments,\n        errors: state.assessments.errors,\n        failedAt: state.assessments.failedAt,\n        showUpdateStaffModal: state.users.showUpdateStaffModal,\n        showUpdateStaffConfirmModal: state.users.showUpdateStaffConfirmModal,\n        updatingStaffComplete: state.users.updatingStaffComplete,\n        loadingUpdatingStaff: state.users.loadingUpdatingStaff,\n        updateStaffError: state.users.error,\n        token: state.auth.token,\n        userId: state.auth.userId\n\n    };\n}\n//can access these function to dispatch actions - via props\nconst mapDispatchToProps = dispatch => {\n    return {\n        OnUpdateClientAll: (token, client_id, updated_client, isArchived) => dispatch(actions.updateClientAll(token, client_id, updated_client, isArchived)),\n        OnFetchClients: (token, filter, userId, limit, pageNumber) => dispatch(actions.fetchClients(token, filter, userId, limit, pageNumber)),\n        OnSetModal: (val) => dispatch(actionsAssessments.setStartAssessmentModal(val)),\n        OnStartAssessment: (questionnaire, token, userId) => dispatch(actionsAssessments.startAssessment(questionnaire, token, userId)),\n        OnSetProcessingXLSXCSV: (val, fileName, isComplete) => dispatch(actionsAssessments.setProcessingXLSXCSV(val, fileName, isComplete)),\n        OnSetStartAssessmentConfirmModal: (val) => dispatch(actionsAssessments.setStartAssessmentConfirmModal(val)),\n        OnSetStartAssessmentComplete: (val) => dispatch(actionsAssessments.setStartAssessmentComplete(val)),\n        OnSetUpdateStaffModal: (val) => dispatch(actionsUsers.setUpdateStaffModal(val)),\n        OnSetUpdateStaffConfirmModal: (val) => dispatch(actionsUsers.setUpdateStaffConfirmModal(val)),\n        OnSetUpdatingStaffComplete: (val) => dispatch(actionsUsers.setUpdatingStaffComplete(val)),\n        OnUpdateStaffUser: (token, staff_id, updatedStaff) => dispatch(actionsUsers.updateStaff(token, staff_id, updatedStaff)),\n        onRegisterStaffUser: (token, name, more_detail) => dispatch(actionsUsers.registerStaffUser(token, name, more_detail))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavBar)","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/ConfirmModal/ConfirmModal.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/QuestionnaireForms/AboutYou/AboutYou.js",["899"],"import React, { useState } from 'react'\nimport classes from './AboutYou.module.css'\nimport { checkIfDefined } from '../../../shared/Utility'\nimport Input from '../../UI/Input/Input'\n\nconst AboutYou = (props) => {\n\n    const handleChange = event => {\n        formik.setFieldValue(event.target.name, event.target.value)\n    }\n\n    const formik = props.formik\n\n    return (\n        <form className={classes.Form}>\n            <Input\n                label=\"Full name\"\n                id=\"fullname\"\n                name=\"fullname\"\n                type=\"text\"\n                onChange={handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.fullname}\n                invalid={checkIfDefined(formik.errors.fullname, false) ? true : false}\n                touched={checkIfDefined(formik.touched.fullname, false) ? true : false}\n                errorMessage={formik.errors.fullname}\n            />\n            <Input\n                label=\"Email\"\n                id=\"email\"\n                name=\"email\"\n                type=\"text\"\n                onChange={handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.email}\n                invalid={checkIfDefined(formik.errors.email, false) ? true : false}\n                touched={checkIfDefined(formik.touched.email, false) ? true : false}\n                errorMessage={formik.errors.email}\n            />\n            <div>\n                <Input\n                    label=\"Date of Birth\"\n                    id=\"dob\"\n                    name=\"dob\"\n                    type=\"text\"\n                    onChange={handleChange}\n                    styleContainer={classes.styleContainer}\n                    isQuestionnaire={true}\n                    onBlur={formik.handleBlur}\n                    // value={checkIfDefined(formik.values.dob, \"\").split(\"T\")[0]}\n                    value={checkIfDefined(formik.values.dob, \"\")}\n                    invalid={checkIfDefined(formik.errors.dob, false) ? true : false}\n                    touched={checkIfDefined(formik.touched.dob, false) ? true : false}\n                    errorMessage={formik.errors.dob}\n                />\n                <Input\n                    label={\"Age\"}\n                    id=\"age\"\n                    name=\"age\"\n                    type=\"text\"\n                    onChange={handleChange}\n                    isQuestionnaire={true}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.age}\n                    invalid={checkIfDefined(formik.errors.age, false) ? true : false}\n                    touched={checkIfDefined(formik.touched.age, false) ? true : false}\n                    errorMessage={formik.errors.age}\n                />\n            </div>\n            <Input\n                label={\"ID number\"}\n                id=\"id_number\"\n                name=\"id_number\"\n                type=\"text\"\n                onChange={handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.id_number}\n                invalid={checkIfDefined(formik.errors.id_number, false) ? true : false}\n                touched={checkIfDefined(formik.touched.id_number, false) ? true : false}\n                errorMessage={formik.errors.email}\n            />\n            <div>\n                <Input\n                    label={\"Gender\"}\n                    id=\"male\"\n                    name=\"gender\"\n                    type=\"text\"\n                    onChange={handleChange}\n                    styleContainer={classes.styleContainer}\n                    isQuestionnaire={true}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.gender}\n                    invalid={checkIfDefined(formik.errors.gender, false) ? true : false}\n                    touched={checkIfDefined(formik.touched.gender, false) ? true : false}\n                    errorMessage={formik.errors.gender}\n                />\n                <Input\n                    label={\"Contact number\"}\n                    id=\"contact_number\"\n                    name=\"contact_number\"\n                    type=\"text\"\n                    onChange={handleChange}\n                    isQuestionnaire={true}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.contact_number}\n                    invalid={checkIfDefined(formik.errors.contact_number, false) ? true : false}\n                    touched={checkIfDefined(formik.touched.contact_number, false) ? true : false}\n                    errorMessage={formik.errors.contact_number}\n                />\n            </div>\n            <Input\n                label={\"Postal address\"}\n                id=\"postal_address\"\n                name=\"postal_address\"\n                type=\"text\"\n                onChange={handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.postal_address}\n                invalid={checkIfDefined(formik.errors.postal_address, false) ? true : false}\n                touched={checkIfDefined(formik.touched.postal_address, false) ? true : false}\n                errorMessage={formik.errors.postal_address}\n            />\n            <div>\n\n                <Input\n                    label={\"Height (cm)\"}\n                    id=\"height\"\n                    name=\"height\"\n                    type=\"text\"\n                    onChange={handleChange}\n                    styleContainer={classes.styleContainer}\n                    isQuestionnaire={true}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.height}\n                    invalid={checkIfDefined(formik.errors.height, false) ? true : false}\n                    touched={checkIfDefined(formik.touched.height, false) ? true : false}\n                    errorMessage={formik.errors.height}\n                />\n                <Input\n                    label={\"Weight (kg)\"}\n                    id=\"weight\"\n                    name=\"weight\"\n                    type=\"text\"\n                    onChange={handleChange}\n                    isQuestionnaire={true}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.weight}\n                    invalid={checkIfDefined(formik.errors.weight, false) ? true : false}\n                    touched={checkIfDefined(formik.touched.weight, false) ? true : false}\n                    errorMessage={formik.errors.weight}\n                />\n            </div>\n\n            <div>\n                <Input\n                    label={\"Waist circumference (cm)\"}\n                    id=\"waist_circumference\"\n                    name=\"waist_circumference\"\n                    type=\"text\"\n                    onChange={handleChange}\n                    styleContainer={classes.styleContainer}\n                    isQuestionnaire={true}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.waist_circumference}\n                    invalid={checkIfDefined(formik.errors.waist_circumference, false) ? true : false}\n                    touched={checkIfDefined(formik.touched.waist_circumference, false) ? true : false}\n                    errorMessage={formik.errors.waist_circumference}\n                />\n                <Input\n                    label={\"Neck circumference (cm)\"}\n                    id=\"neck_circumference\"\n                    name=\"neck_circumference\"\n                    type=\"text\"\n                    onChange={handleChange}\n                    isQuestionnaire={true}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.neck_circumference}\n                    invalid={checkIfDefined(formik.errors.neck_circumference, false) ? true : false}\n                    touched={checkIfDefined(formik.touched.neck_circumference, false) ? true : false}\n                    errorMessage={formik.errors.neck_circumference}\n                />\n            </div>\n        </form>\n    )\n}\n\nexport default AboutYou","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/LinkNewClientModal/LinkNewClientModal.js",["900","901"],"import React, { useEffect, useRef, useState } from 'react';\nimport Overlay from '../../Overlay/Overlay';\nimport classes from './LinkNewClientModal.module.css'\nimport Cross from '../../../../Assets/Icons/cross.svg'\nimport { checkIfDefined } from '../../../../shared/Utility';\nimport ticked from '../../../../Assets/Icons/ticked.svg';\nimport Spinner from '../../Spinner/Spinner'\nconst LinkNewClientModal = props => {\n\n    const [state, _setState] = useState({\n        showResult: false,\n        selectedClient: {},\n        search: \"\",\n        clientID: 0\n    })\n\n    let stateRef = useRef(state);\n\n    const setState = (val) => {\n        stateRef.current = val;\n        _setState(val)\n    }\n\n    const onClientClickHandler = (client) => {\n        setState({ ...state, showResult: false, selectedClient: client })\n        props.OnCreateStaffClientLink(props.token, props.selectedStaff.id, { ...props.selectedStaff.clients, [stateRef.current.selectedClient.id]: true }, stateRef.current.selectedClient)\n    }\n\n    const onChangeHandler = (value) => {\n        let search = stateRef.current.search;\n        search = value;\n        setState({ ...state, search: search, showResult: true })\n    }\n\n    const keyPress = (e) => {\n        if (e.keyCode == 13) {\n            e.preventDefault()\n            submitSearch()\n        }\n    }\n\n    const onClickDeleteHandler = (client) => {\n        setState({ ...state, selectedClient: client })\n        delete props.selectedStaff.clients[client.id]\n        props.OnDeleteStaffClientLink(props.token, props.selectedStaff.id, props.selectedStaff.clients, client)\n    }\n\n    let [hover, _setHover] = useState(false);\n    const hoverRef = useRef(hover);\n\n    const setHover = data => {\n        hoverRef.current = data;\n        _setHover(data);\n    }\n    //on hovering over the presentation column of a row, the presenation element will show \n    const onMouseEnter = e => {\n        console.log(e)\n        setHover(true);\n        setState({ ...state, clientID: e })\n    };\n    const onMouseLeave = e => {\n        setHover(false);\n    };\n\n    useEffect(() => {\n        props.OnSearchClients(props.token, \"\")\n    }, [props.show])\n\n    const submitSearch = () => {\n        props.OnSearchClients(props.token, stateRef.current.search)\n    }\n\n    const clients = checkIfDefined(props.clients, []).map(client => (\n        <tr key={client.id_number} className={classes.Row}>\n            <td className={classes.ActionLink} >\n                {!props.loading_link && !props.loading_delete_link\n                    ?\n                    <button onMouseEnter={() => onMouseEnter(client.id)} onMouseLeave={onMouseLeave} className={client.selected\n                        ? classes.LinkButton_selected\n                        : classes.LinkButton} onClick={!client.selected ? () => onClientClickHandler(client) : () => onClickDeleteHandler(client)}>\n                        {client.selected ? hoverRef.current && stateRef.current.clientID === client.id ? \"-\" : <img src={ticked} alt=\"ticked\" /> : \"+\"}\n                    </button>\n                    : <button className={client.selected\n                        ? classes.LinkButton_selected\n                        : classes.LinkButton}>\n                        {stateRef.current.selectedClient.id === client.id\n                            ? <i className=\"fa fa-circle-o-notch fa-spin\"></i>\n                            : client.selected ? <img src={ticked} alt=\"ticked\" /> : \"+\"}\n                    </button>\n                }\n            </td>\n            <td className={classes.DataHeadings}>{client.fullname}</td>\n            <td className={classes.Data}>{client.id_number}</td>\n        </tr>\n    ))\n    //Uses the Overlay component as a backdrop. The modal closes when you press the overlay\n    return (\n        <Overlay show={props.show} close={props.close} classCustom={props.classCustom}>\n            <div className={props.show ? [classes.ModalVisible, props.clsWidth, props.styleModal].join(' ') : classes.ModalHidden}>\n                <div className={classes.Header}>\n                    <h2>Create staff client link</h2>\n                    <img src={Cross} alt=\"Close Modal\" className={classes.CloseCross} onClick={props.close} /> {/* Modal closes on pressing the cross icon */}\n                </div>\n                <div className={classes.InnerModalContainer}>\n                    {/* <p>Search for a client and link them to <strong>{props.selectedStaff.fullname}</strong></p> */}\n                    <div className={classes.SearchContainer}>\n                        <input placeholder=\"Search clients...\" className={classes.SearchBar} onChange={(e) => onChangeHandler(e.target.value)} onKeyDown={(e) => keyPress(e)} />\n                        <button type=\"button\" className={classes.SearchButton} onClick={submitSearch}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"rgb(73, 77, 83)\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\n                                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n                            </svg>\n                        </button>\n                    </div>\n                    {!props.loadingSearchStaffClients\n                        ? props.codes !== clients && props.codes !== clients && checkIfDefined(clients, []).length !== 0 ?\n                            <table className={classes.Table}>\n                                <thead>\n                                    <tr className={classes.TableHeadingRow}>\n                                        <th></th>\n                                        <th>FULL NAME</th>\n                                        <th>ID</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {clients}\n                                </tbody>\n                            </table>\n                            : <h4>Please search for a client.</h4>\n                        : <Spinner />\n                    }\n                    {/* <div className={classes.ButtonGroup}>\n                        <Button buttonType={\"secondary\"}>Cancel</Button>\n                        <Button buttonType={\"primary\"} clicked={() => props.OnCreateStaffClientLink(props.selectedStaff.id, stateRef.current.selectedClient)}>Link</Button>\n                    </div> */}\n                </div>\n            </div>\n        </Overlay>\n    )\n};\n\nexport default LinkNewClientModal;\n\n","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/RegisterStaffModal/RegisterStaffModal.js",["902"],"import React, { useEffect, useState } from 'react'\nimport Overlay from '../../Overlay/Overlay';\nimport classes from './RegisterStaffModal.module.css'\nimport Cross from '../../../../Assets/Icons/cross.svg'\nimport Button from '../../Button/Button'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport ConfirmModal from '../ConfirmModal/ConfirmModal';\nimport Spinner from '../../../UI/Spinner/Spinner'\nimport FeedbackGlobal from '../../../UI/FeedbackGlobal/FeedbackGlobal'\n\nconst contactRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\nconst RegisterSchema = Yup.object().shape({\n    fullname: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n    contact_number: Yup.string().matches(contactRegExp, 'Contact number is not valid').required(\"Required\"),\n    email: Yup.string().email('Invalid email').required('Required'),\n});\n\n\nconst RegisterStaffModal = (props) => {\n    const [state, setState] = useState({\n        values: {},\n        setSubmitting: \"\",\n        resetForm: \"\"\n    })\n\n    if (!props.loadingRegisterStaff && props.registeringStaffComplete) {\n        setTimeout(() => {\n            state.setSubmitting()\n            props.OnSetRegisterStaffConfirmModal(false)\n            props.close()\n            state.resetForm()\n            props.OnSetRegisteringStaffComplete(false)\n        }, 2000)\n    }\n\n    const closeAll = () => {\n        props.OnSetRegisterStaffConfirmModal(false)\n    }\n\n    const closeHandler = ()=>{\n        document.getElementById(\"resethidden\").click();\n        props.close();\n    }\n\n    return (\n        <>\n            <ConfirmModal\n                show={props.showRegisterStaffConfirmModal}\n                close={() => props.OnSetRegisterStaffConfirmModal(false)}\n                classCustom={classes.ConfirmModalCustom}\n                removeHeading={props.registeringStaffComplete || props.error}\n            >{!props.loadingRegisterStaff\n                ? !props.registeringStaffComplete\n                    ? !props.error\n                        ? <><p>By clicking confirm you are agreeing to register <strong>{state.values.fullname}</strong> as a Staff member.</p>\n                            <div className={classes.ButtonGroup}>\n                                <Button buttonType={\"secondary\"} clicked={() => props.OnSetRegisterStaffConfirmModal(false)}>Cancel</Button>\n                                <Button buttonType={\"primary\"} clicked={() => props.OnRegisterStaffUser(props.token, state.values)}>Confirm</Button>\n                            </div> </>\n                        : <FeedbackGlobal type=\"Fail\" error={props.error === \"ER_DUP_ENTRY\" ? \"Email address already exists!\" : null} errorLocation={\"register\"} OnSetAssessmentError={closeAll} cancelError={closeAll} />\n                    : <FeedbackGlobal type=\"Success\" />\n                : <Spinner calledLocation=\"Questionnaire\" loadingMessage=\"Saving changes...\" />}\n            </ConfirmModal>\n            <Overlay show={props.show} close={closeHandler} classCustom={props.classCustom}>\n                <div className={props.show ? [classes.ModalVisible, props.clsWidth, props.styleModal].join(' ') : [classes.ModalVisible, classes.HideModal].join(' ')}>\n                    <div className={classes.Header}>\n                        <h2>Register Staff</h2>\n                        <img src={Cross} alt=\"Close Modal\" className={classes.CloseCross} onClick={closeHandler} /> {/* Modal closes on pressing the cross icon */}\n                    </div>\n                    <div className={classes.InnerModalContainer}>\n                        <Formik\n                            initialValues={{\n                                fullname: '',\n                                role: \"staff\",\n                                contact_number: '',\n                                email: '',\n                            }}\n                            validationSchema={RegisterSchema}\n                            onSubmit={(values, { setSubmitting, resetForm }) => {\n                                setState({ ...state, values: values, setSubmitting: setSubmitting, resetForm: resetForm })\n                                props.OnSetRegisterStaffConfirmModal(true)\n                            }}\n                        >\n                            {(formProps) => (\n                                <Form className={classes.Form}>\n                                    <button onClick={e => { e.preventDefault(); formProps.resetForm(); }} id=\"resethidden\" className={classes.HideButton}></button>\n                                    <div style={{ display: \"flex\" }}>\n                                        <label htmlFor=\"fullname\">Full name</label><ErrorMessage name=\"fullname\" render={msg => <div className={classes.ErrorMessage}>[{msg}]</div>} />\n                                    </div>\n                                    <Field name=\"fullname\" className={classes.Input} id=\"fullname\" />\n                                    <div style={{ display: \"flex\" }}>\n                                        <label htmlFor=\"contact_number\">Contact number</label><ErrorMessage name=\"contact_number\" render={msg => <div className={classes.ErrorMessage}>[{msg}]</div>} />\n                                    </div>\n                                    <Field name=\"contact_number\" className={classes.Input} id=\"contact_number\" />\n                                    <div style={{ display: \"flex\" }}>\n                                        <label htmlFor=\"email\">Email</label><ErrorMessage name=\"email\" render={msg => <div className={classes.ErrorMessage}>[{msg}]</div>} />\n                                    </div>\n                                    <Field name=\"email\" type=\"email\" className={classes.Input} id=\"email\" />\n\n                                    <div className={classes.ButtonGroup}>\n                                        <Button buttonType={\"secondary\"} clicked ={closeHandler}>Cancel</Button>\n                                        <button className={classes.Button} type=\"submit\">Register</button>\n                                    </div>\n                                </Form>\n                            )}\n                        </Formik>\n\n                    </div>\n                </div>\n            </Overlay>\n        </>\n    )\n}\n\nexport default RegisterStaffModal","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/LinkSidePanel/LinkSidePanel.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/SummaryAssessmentModal/SummaryAssessmentModal.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/AssessmentTab/AssessmentTab.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/GeneralModal/GeneralModal.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AssessmentPhases/DataAnalysis/DataAnalysis.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AssessmentPhases/Actigram/Actigram.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AssessmentPhases/Consult/Consult.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AssessmentPhases/Questionnaire/Questionnaire.js",["903","904","905"],"import React, { useState, useRef, useEffect } from 'react'\nimport classes from './Questionnaire.module.css'\nimport SectionTab from './SectionTab/SectionTab'\nimport AboutYou from '../../QuestionnaireForms/AboutYou/AboutYou'\nimport SleepHistory from '../../QuestionnaireForms/SleepHistory/SleepHistory'\nimport EpworthScale from '../../QuestionnaireForms/EpworthScale/EpworthScale'\nimport FatigueScale from '../../QuestionnaireForms/FatigueScale/FatigueScale'\nimport InsomniaIndex from '../../QuestionnaireForms/InsomniaIndex/InsomniaIndex'\nimport MedicalHistory from '../../QuestionnaireForms/MedicalHistory/MedicalHistory'\nimport LifestyleFactors from '../../QuestionnaireForms/LifestyleFactors/LifestyleFactors'\nimport { checkIfDefined } from '../../../shared/Utility'\nimport PreviousSaveButtons from '../../UI/PreviousSaveButtons/PreviousSaveButtons'\nimport ConfirmModal from '../../UI/Modals/ConfirmModal/ConfirmModal'\nimport Spinner from '../../UI/Spinner/Spinner'\nimport Feedback from '../../UI/Feedback/Feedback'\nimport Button from '../../UI/Button/Button'\nimport { useFormik } from 'formik';\nimport * as Yup from \"yup\";\nimport ValidationErrorModal from '../../UI/Modals/ValidationErrorModal/ValidationErrorModal'\nconst clone = require('rfdc')()\n\nconst Questionnaire = (props) => {\n\n    const [state, _setState] = useState({\n        selected: \"About you\",\n        questionnaire_phase: checkIfDefined(props.questionnaire_phase, {}),\n        showValidationModal: false\n    })\n\n    const [invalidSections, setInvalidSections] = useState([])\n\n    useEffect(() => {\n        setState({ ...state, questionnaire_phase: props.questionnaire_phase })\n    }, [props.questionnaire_phase])\n\n    let stateRef = useRef(state)\n\n    const setState = (values) => {\n        stateRef.current = values;\n        _setState(values);\n    }\n\n    const setSelectedSection = (title) => {\n        props.OnCacheQuestionnaireChanges(state.questionnaire_phase)\n        setState({ ...state, selected: title })\n    }\n\n    const formatKeys = (key) => {\n        let temp = key.replace(/_/g, \" \").toLowerCase()\n        return temp.charAt(0).toUpperCase() + temp.slice(1);\n    }\n\n    const sections = Object.keys(props.questionnaire_phase).map(key => {\n        if (key !== undefined && props.questionnaire_phase[key] !== undefined && key !== \"general\") {\n            const invalid = invalidSections.includes(key)\n            if (key === \"client_details\") {\n                key = \"About you\"\n            }\n            if (key === \"sleep_history\") {\n                key = \"Sleep history & symptoms\"\n            }\n            return (\n                <SectionTab\n                    key={formatKeys(key)}\n                    title={formatKeys(key)}\n                    isSelected={formatKeys(key) === stateRef.current.selected}\n                    setSelectedSection={setSelectedSection}\n                    invalid={invalid}\n                />\n            )\n        }\n    })\n\n    useEffect(() => {\n        window.addEventListener(\"beforeunload\", alertUser);\n        return () => {\n            window.removeEventListener(\"beforeunload\", alertUser);\n        };\n    }, []);\n\n    const alertUser = (e) => {\n        e.preventDefault();\n        e.returnValue = \"\";\n    };\n\n    const filterObject = (data) => {\n        let result = {}\n\n        for (let key in data) {\n            if (data[key] !== undefined && data[key] !== null) {\n                result[key] = data[key]\n            }\n        }\n        return result\n    }\n\n    const clientDetails = filterObject(checkIfDefined(props.questionnaire_phase.client_details, {}))\n    const formikAboutYou = useFormik({\n        initialValues: clientDetails,\n        validationSchema: Yup.object({\n            age: clientDetails.age !== undefined && clientDetails.age !== null ? Yup.number().typeError(\"Number required\") : null,\n            height: clientDetails.height !== undefined && clientDetails.height !== null ? Yup.number().typeError(\"Number required\") : null,\n            weight: clientDetails.weight !== undefined && clientDetails.weight !== null ? Yup.number().typeError(\"Number required\") : null,\n            waist_circumference: clientDetails.waist_circumference !== undefined && clientDetails.waist_circumference !== null ? Yup.number().typeError(\"Number required\") : null,\n            neck_circumference: clientDetails.neck_circumference !== undefined && clientDetails.neck_circumference !== null ? Yup.number().typeError(\"Number required\") : null\n        })\n    });\n\n    const sleepHistory = filterObject(checkIfDefined(props.questionnaire_phase.sleep_history, {}))\n    const formikSleepHistory = useFormik({\n        initialValues: sleepHistory,\n        validationSchema: Yup.object({\n            period: sleepHistory.period !== undefined && sleepHistory.period !== null ? Yup.string() : null,\n            problem_nights: sleepHistory.problem_nights !== undefined && sleepHistory.problem_nights !== null ? Yup.string() : null,\n            sleep_time: sleepHistory.sleep_time !== undefined && sleepHistory.sleep_time !== null ? Yup.string() : null,\n            to_sleep_duration: sleepHistory.to_sleep_duration && sleepHistory.to_sleep_duration !== null ? Yup.number().typeError(\"Number required\") : null,\n            wakeup_time: sleepHistory.wakeup_time !== undefined && sleepHistory.wakeup_time !== null ? Yup.string() : null,\n            sleep_duration: sleepHistory.sleep_duration && sleepHistory.sleep_duration !== null ? Yup.number().typeError(\"Number required\") : null,\n            sleep_quality: sleepHistory.sleep_quality && sleepHistory.sleep_quality !== null ? Yup.number().typeError(\"Number required\") : null,\n            restorative_rating: sleepHistory.restorative_rating && sleepHistory.to_sleerestorative_rating_duration !== null ? Yup.number().typeError(\"Number required\") : null,\n            alertness: sleepHistory.alertness && sleepHistory.alertness !== null ? Yup.number().typeError(\"Number required\") : null\n        })\n    });\n\n    const epworthScale = checkIfDefined(props.questionnaire_phase.epworth_sleepiness_scale, {})\n    const formikEpworthScale = useFormik({\n        initialValues: filterObject(epworthScale)\n    });\n\n    const fatigueScale = checkIfDefined(props.questionnaire_phase.fatigue_severity_scale, {})\n    const formikFatigueScale = useFormik({\n        initialValues: filterObject(fatigueScale),\n        validationSchema: Yup.object({\n            easily_fatigued: fatigueScale.easily_fatigued !== undefined && fatigueScale.easily_fatigued !== null ? Yup.number().typeError(\"Number required\") : null,\n            physical_functionality: fatigueScale.physical_functionality !== undefined && fatigueScale.physical_functionality !== null ? Yup.number().typeError(\"Number required\") : null,\n            frequent_problems: fatigueScale.frequent_problems !== undefined && fatigueScale.frequent_problems !== null ? Yup.number().typeError(\"Number required\") : null,\n            sustained_physical: fatigueScale.sustained_physical !== undefined && fatigueScale.sustained_physical !== null ? Yup.number().typeError(\"Number required\") : null,\n            duties_responsibilities: fatigueScale.duties_responsibilities !== undefined && fatigueScale.duties_responsibilities !== null ? Yup.number().typeError(\"Number required\") : null,\n            disabling_symptoms: fatigueScale.disabling_symptoms !== undefined && fatigueScale.disabling_symptoms !== null ? Yup.number().typeError(\"Number required\") : null,\n            work_family_social: fatigueScale.work_family_social !== undefined && fatigueScale.work_family_social !== null ? Yup.number().typeError(\"Number required\") : null\n        })\n    });\n\n    const insomniaIndex = checkIfDefined(props.questionnaire_phase.insomnia_severity_index, {})\n    const formikInsomniaIndex = useFormik({\n        initialValues: filterObject(insomniaIndex),\n\n    });\n\n    const medicalHistory = checkIfDefined(props.questionnaire_phase.medical_history, {})\n    const formikMedicalHistory = useFormik({\n        initialValues: filterObject(medicalHistory),\n    });\n\n    const lifestyleFactors = checkIfDefined(props.questionnaire_phase.lifestyle_factors, {})\n    const formikLifestyleFactors = useFormik({\n        initialValues: filterObject(lifestyleFactors),\n    });\n\n    let form = null\n\n    switch (stateRef.current.selected) {\n        case \"About you\":\n            form = <AboutYou\n                loading={props.loading}\n                formik={formikAboutYou}\n            />\n            break;\n        case \"Sleep history & symptoms\":\n            form = <SleepHistory\n                loading={props.loading}\n                formik={formikSleepHistory}\n            />\n            break;\n        case \"Epworth sleepiness scale\":\n            form = <EpworthScale\n                loading={props.loading}\n                formik={formikEpworthScale}\n            />\n            break;\n        case \"Fatigue severity scale\":\n            form = <FatigueScale\n                loading={props.loading}\n                formik={formikFatigueScale}\n            />\n            break;\n        case \"Insomnia severity index\":\n            form = <InsomniaIndex\n                loading={props.loading}\n                formik={formikInsomniaIndex}\n            />\n            break;\n        case \"Medical history\":\n            form = <MedicalHistory\n                loading={props.loading}\n                formik={formikMedicalHistory}\n            />\n            break;\n        case \"Lifestyle factors\":\n            form = <LifestyleFactors\n                loading={props.loading}\n                formik={formikLifestyleFactors}\n            />\n            break;\n        default:\n            break;\n    }\n\n    const onSave = () => {\n        props.OnUpdateAssessment(props.token, props.assessment_id, props.phase_number, {\n            questionnaire_phase: {\n                general: stateRef.current.general,\n                client_details: formikAboutYou.values,\n                sleep_history: formikSleepHistory.values,\n                epworth_sleepiness_scale: formikEpworthScale.values,\n                fatigue_severity_scale: formikFatigueScale.values,\n                insomnia_severity_index: formikInsomniaIndex.values,\n                medical_history: formikMedicalHistory.values,\n                lifestyle_factors: formikLifestyleFactors.values\n            }\n        })\n        setInvalidSections([])\n    }\n\n    if (!props.loading && props.phaseComplete) {\n        setTimeout(() => {\n            props.OnSetCurrentTab(props.phase_number + 1) //if not uploading/removing summary report or actigram\n            props.OnSetConfirmModal(false)\n            props.OnSetPhaseComplete(false)\n        }, 2000)\n    }\n\n    const cancelError = () => {\n        props.OnSetConfirmModal(false)\n    }\n\n    const checkForm = (formItem) => {\n        return new Promise((resolve, reject) => {\n\n            //set all inputs to touched\n            const touched = Object.keys(formItem.formik.initialValues).reduce((result, item) => {\n                result[item] = true;\n                return result;\n            }, {});\n\n            // Touch all fields without running validations\n            formItem.formik.setTouched(touched, false);\n            formItem.formik.setSubmitting(true);\n\n            formItem.formik\n                .validateForm()\n                .then((formErrors) => {\n                    formItem.formik.setSubmitting(false);\n                    if (Object.keys(formErrors).length > 0) {\n                        resolve(formItem.name)                      \n                    } else {\n                        resolve()\n                    }\n                })\n                .catch((err) => {\n                    formItem.formik.setSubmitting(false);\n                    reject()\n                });\n        })\n    }\n\n    const checkValidity = async () => {\n        let formikArray = [{ formik: formikAboutYou, name: \"client_details\" }, { formik: formikSleepHistory, name: \"sleep_history\" }, { formik: formikEpworthScale, name: \"epworth_sleepiness_scale\" },\n        { formik: formikFatigueScale, name: \"fatigue_severity_scale\" }, { formik: formikInsomniaIndex, name: \"insomnia_severity_index\" }, { formik: formikMedicalHistory, name: \"medical_history\" },\n        { formik: formikLifestyleFactors, name: \"lifestyle_factors\" }]\n        let invalidSections = []\n        const promises = formikArray.map(async form => {\n            await checkForm(form).then(result => result !== undefined && invalidSections.push(result))\n        })\n\n        Promise.all(promises).then(results => {\n            setInvalidSections(invalidSections)\n            if (invalidSections.length === 0) props.OnSetConfirmModal(true)\n            else {\n                setState({ ...state, showValidationModal: true })\n            }\n        })\n    }\n\n    return (\n        <>\n            <ConfirmModal\n                show={props.showConfirmModal}\n                close={() => props.OnSetConfirmModal(false)}\n                removeHeading={props.phaseComplete}\n            >{!props.loading\n                ? !props.phaseComplete\n                    ? !props.error\n                        ? <><p>By clicking confirm you are agreeing to <strong>save your changes</strong>, complete the <strong>Questionnaire phase</strong> and continue to the <strong>Consult phase.</strong></p>\n                            <div className={classes.ButtonGroup}>\n                                <Button buttonType={\"secondary\"} clicked={() => props.OnSetConfirmModal(false)}>Cancel</Button>\n                                <Button buttonType={\"primary\"} clicked={onSave}>Confirm</Button>\n                            </div> </>\n                        : <Feedback type=\"Fail\" OnSetAssessmentError={props.OnSetAssessmentError} cancelError={cancelError} />\n                    : <Feedback type=\"Success\" />\n                : <Spinner calledLocation=\"Questionnaire\" loadingMessage=\"Saving changes...\" />}\n            </ConfirmModal>\n\n            <ValidationErrorModal\n                show={state.showValidationModal}\n                close={() => setState({ ...state, showValidationModal: false })}\n            >\n            </ValidationErrorModal>\n\n            <div className={classes.Container}>\n                <div className={classes.LeftContainer}>\n                    <div className={classes.Header}>\n                        <h5>Section type</h5>\n                        <li className={classes.LineRule}></li>\n                    </div>\n                    <ul className={classes.SectionsContainer}>\n                        {sections}\n                    </ul>\n                </div>\n                <div className={classes.RightContainer}>\n                    <div className={classes.Header}>\n                        <h5>Responses</h5>\n                        <li className={classes.LineRule}></li>\n                        <PreviousSaveButtons\n                            OnSave={checkValidity}\n                            phase={\"questionnaire\"}\n                        />\n                    </div>\n                    <div className={classes.FormContainer}>\n                        {form}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default Questionnaire","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AssessmentPhases/ReportGeneration/ReportGeneration.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/Table/Row/Row.js",["906"],"import React, { useState } from 'react'\nimport classes from './Row.module.css'\nimport OutsideAlerter from '../../OutsideAlerter/OutsideAlerter'\nimport { Link } from 'react-router-dom'\nimport { checkIfDefined } from '../../../shared/Utility'\n\nconst Row = (props) => {\n\n    const [showDropDown, setShowDropDown] = useState(false);\n\n    const formatHeading = (head) => {\n        if (head === \"Full Name\") {\n            head = \"fullname\"\n        }\n        if (head === \"Date of Birth\") {\n            return \"dob\"\n        }\n        if (head === \"Status\") {\n            return \"assessment_status\"\n        }\n        return head.replace(/\\s+/g, \"_\").toLowerCase();\n    }\n    let dob = \"\"\n    const data = props.data\n    const rows = data !== null && data !== undefined ? Object.keys(data).map((key) => {\n        if (key !== \"id\") {\n            for (let heading of props.headings) {\n                if (formatHeading(heading[0]) === key) {\n                    if (key === 'dob' && checkIfDefined(data[key], false)) {\n                        // dob = data[key].split(\"T\")[0]\n                        dob= data[key]\n                    }\n                    return (\n                        <React.Fragment key={key}>\n                            <td\n                                className={(formatHeading(heading[0]) === key ? [classes.PatientRow_mobile, classes[heading[1]]].join(\" \") : classes.RowCell)}\n                            >\n                                {\n                                    formatHeading(heading[0]) !== \"assessment_status\"\n                                        ? data[key] !== null && data[key] !== '' ? key !== 'dob' ? data[key] : dob : \"---\"\n                                        : <div className={data[key] !== \"New\" ? classes.RowStatus: classes.RowStatus_new}>\n                                            {data[key]}\n                                        </div>\n                                }\n                            </td>\n\n                        </React.Fragment >\n                    )\n                }\n            }\n        }\n    }) : null\n\n    const assessmentOnClickHandler = (assessment_id, client_id) => {\n        props.OnFetchAssessment(props.token, assessment_id, client_id)\n    }\n\n    const onClickLinkNewClientHandler = (staff) => {\n        setShowDropDown(false)\n        props.OnSetStaffClientLinkPanel(true, staff)\n        props.OnFetchStaffClients(props.token, staff.id)\n    }\n\n    const onClickDeleteStaffHandler = (fullname, id) => {\n        setShowDropDown(false)\n        props.setState({ fullname: fullname, id: id })\n        props.OnSetConfirmModalDeleteStaff(true)\n    }\n\n    const onClickDeleteClientHandler = (fullname, id) => {\n        setShowDropDown(false)\n        props.setClientState({ fullname: fullname, id: id })\n        props.OnSetConfirmModalDeleteClient(true)\n    }\n\n    const onClickUserRightsChange = (user_id, role) => {\n        setShowDropDown(false)\n        props.OnUpdatePrivileges(props.token, user_id, role)\n    }\n\n    const dropdown = !props.isStaff\n        ? (\n            <ul className={classes.DropDownContainer}>\n                <Link to={`/assessmentpanel/${props.data.assessments[props.data.assessments.length - 1]}`}>\n                    <li className={classes.DropDownButton_Assessment} onClick={() => assessmentOnClickHandler(props.data.assessments[props.data.assessments.length - 1], props.data.id)}>\n                        Assessment panel\n                </li>\n                </Link>\n                <Link to={`/clientprofile/${props.data.id}`}>\n                    <li className={classes.DropDownButton_Profile} onClick={() => props.OnFetchClient(props.token, props.data.id)}>\n                        Profile\n                    </li>\n                </Link>\n                {\n                    props.isArchived\n                        ? < li className={classes.DropDownButton_Archive} onClick={() => props.OnUpdateClient(props.token, data.id, { ...data, archived: false }, true)}>\n                            Unanrchive Client\n                        </li>\n                        : < li className={classes.DropDownButton_Archive} onClick={() => props.OnUpdateClient(props.token, data.id, { ...data, archived: true }, true)}>\n                            Archive Client\n                        </li>\n                }\n\n                {(props.role === \"superuser\" || props.role === \"admin\") &&\n                    <li className={classes.DropDownButton_Delete} onClick={() => onClickDeleteClientHandler(props.data.fullname, props.data.id)}>\n                        Delete Client\n            </li>}\n\n            </ul >\n        )\n        : (\n            <ul className={classes.DropDownContainer}>\n                <li className={classes.DropDownButton_Link} onClick={() => onClickLinkNewClientHandler(props.data)}>\n                    Link new client/s\n                </li>\n                <li className={classes.DropDownButton_Delete} onClick={() => onClickDeleteStaffHandler(props.data.fullname, props.data.id)}>\n                    Delete\n                </li>\n                {props.role === \"superuser\" &&\n                    <li className={classes.DropDownButton_Privileges} onClick={() => onClickUserRightsChange(props.data.id, props.data.role === \"staff\" ? \"admin\" : \"staff\")}>\n                        {props.data.role === \"staff\" ? \"Grant admin privileges\" : \"Remove admin privileges\"}\n                    </li>}\n\n            </ul>\n        )\n\n    const actions = (\n        <td>\n            <div className={classes.Options} onClick={() => setShowDropDown(true)}>\n                <div className={classes.ThreeDots} ></div>\n            </div>\n\n            <OutsideAlerter setShowDropDown={setShowDropDown} show={showDropDown}>\n                {showDropDown && dropdown}\n            </OutsideAlerter>\n\n        </td>\n    )\n    if (!props.loading_delete_staff && props.staffDeleteLoadingComplete) {\n        setTimeout(() => {\n            props.OnSetConfirmModalDeleteStaff(false)\n            props.OnSetStaffDeleteLoadingComplete(false)\n        }, 2000)\n    }\n\n    if (!props.loadingDeleteClient && props.clientDeleteComplete) {\n        setTimeout(() => {\n            props.OnSetConfirmModalDeleteClient(false)\n        }, 2000)\n    }\n\n    return (\n        <>\n            <tr className={classes.Row}>\n                {actions}\n                {rows}\n            </tr>\n        </>\n    )\n}\n\nexport default Row","/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/NavItem/NavItem.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Input/Input.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Overlay/Overlay.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/OutsideAlerter/OutsideAlerter.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/EmailReportModal/EmailReportModal.js",["907"],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/ValidationErrorModal/ValidationErrorModal.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/PreviousSaveButtons/PreviousSaveButtons.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Feedback/Feedback.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/QuestionnaireForms/LifestyleFactors/LifestyleFactors.js",["908"],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/QuestionnaireForms/MedicalHistory/MedicalHistory.js",["909"],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/QuestionnaireForms/InsomniaIndex/InsomniaIndex.js",["910"],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/QuestionnaireForms/EpworthScale/EpworthScale.js",["911"],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/QuestionnaireForms/FatigueScale/FatigueScale.js",["912"],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AssessmentPhases/Questionnaire/SectionTab/SectionTab.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/QuestionnaireForms/SleepHistory/SleepHistory.js",["913"],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/ViewActigramModal/ViewActigramModal.js",["914","915","916"],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/UI/Modals/ViewSummaryReportModal/ViewSummaryReportModal.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/InterpretationForm/InterpretationForm.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AssessmentPhases/Actigram/DayRow/DayRow.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AssessmentPhases/DataAnalysis/SectionTab/SectionTab.js",[],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/DataAnalysisForms/LifestyleFactors/LifestyleFactors.js",["917"],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/DataAnalysisForms/ClientDetails/ClientDetails.js",["918"],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/DataAnalysisForms/MedicalHistory/MedicalHistory.js",["919"],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/DataAnalysisForms/SleepProfile/SleepProfile.js",["920"],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/DataAnalysisForms/SleepHistory/SleepHistory.js",["921"],"/Users/haydennorrie/Desktop/React/herokuLens/server/webapp/src/components/AnalysisTable/AnalysisTable.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/index.js",[],["922","923"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/reportWebVitals.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/App.js",["924","925","926"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/reducers/clients.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/reducers/auth.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/reducers/assessments.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/reducers/users.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/actions/auth.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/actions/actionTypes.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/SeriesTwo.js",["927","928","929","930","931","932","933"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/SeriesFour.js",["934","935","936","937","938","939","940"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/SeriesFive.js",["941","942","943","944","945","946","947"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/SeriesEight.js",["948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/SeriesSix.js",["970","971","972","973","974","975","976"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/MasterTable.js",["977","978","979","980"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/SeriesSeven.js",["981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/StaffTable.js",["1014","1015","1016","1017","1018","1019"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Auth/Auth.js",["1020"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Staff/Staff.js",["1021"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/ClientProfile/ClientProfile.js",["1022","1023","1024"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/Export.js",["1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/InactiveTable.js",["1103","1104","1105","1106"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Series/SeriesOne.js",["1107","1108","1109","1110"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Clients/Clients.js",["1111","1112","1113","1114","1115","1116","1117"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Assessment/Assessment.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Layout/Layout.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/ProtectedRoute/ProtectedRoute.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/StaffPasswordChange/StaffPasswordChange.js",["1118"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/containers/Auth/Logout/Logout.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/shared/Utility.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/environment.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/actions/users.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/actions/assessments.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/store/actions/clients.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/Table/Table.js",["1119","1120"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/SideNavBar/SideNavBar.js",["1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Spinner/Spinner.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Button/Button.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/FeedbackGlobal/FeedbackGlobal.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/AssessmentTab/AssessmentTab.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/ConfirmModal/ConfirmModal.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/GeneralModal/GeneralModal.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/SummaryAssessmentModal/SummaryAssessmentModal.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AssessmentPhases/DataAnalysis/DataAnalysis.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AssessmentPhases/ReportGeneration/ReportGeneration.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AssessmentPhases/Actigram/Actigram.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AssessmentPhases/Consult/Consult.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AssessmentPhases/Questionnaire/Questionnaire.js",["1147","1148","1149"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/LinkNewClientModal/LinkNewClientModal.js",["1150","1151"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/RegisterStaffModal/RegisterStaffModal.js",["1152"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/LinkSidePanel/LinkSidePanel.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/QuestionnaireForms/AboutYou/AboutYou.js",["1153"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Overlay/Overlay.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/OutsideAlerter/OutsideAlerter.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/ValidationErrorModal/ValidationErrorModal.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/PreviousSaveButtons/PreviousSaveButtons.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Feedback/Feedback.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/QuestionnaireForms/LifestyleFactors/LifestyleFactors.js",["1154"],"import React, { useState } from 'react'\nimport classes from './LifestyleFactors.module.css'\nimport { checkIfDefined } from '../../../shared/Utility'\nimport Input from '../../UI/Input/Input'\n\nconst LifestyleFactors = (props) => {\n\n    const formik = props.formik\n    return (\n        <form className={classes.Form}>\n            <Input\n                label=\"Do you have young children living with you?\"\n                id=\"children\"\n                name=\"children\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.children}\n                invalid={checkIfDefined(formik.errors.children, false) ? true : false}\n                touched={checkIfDefined(formik.touched.children, false) ? true : false}\n                errorMessage={formik.errors.children}\n            />\n            <Input\n                label=\"If so, how old are they and do they impact on your sleep?\"\n                id=\"children_details\"\n                name=\"children_details\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.children_details}\n                invalid={checkIfDefined(formik.errors.children_details, false) ? true : false}\n                touched={checkIfDefined(formik.touched.children_details, false) ? true : false}\n                errorMessage={formik.errors.children_details}\n            />\n            <Input\n                label=\"Do you have a bed partner?\"\n                id=\"bed_partner\"\n                name=\"bed_partner\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.bed_partner}\n                invalid={checkIfDefined(formik.errors.bed_partner, false) ? true : false}\n                touched={checkIfDefined(formik.touched.bed_partner, false) ? true : false}\n                errorMessage={formik.errors.bed_partner}\n            />\n            <Input\n                label=\"If yes, is there anything about your bed partner that challenges your sleep?\"\n                id=\"partner_details\"\n                name=\"partner_details\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.partner_details}\n                invalid={checkIfDefined(formik.errors.partner_details, false) ? true : false}\n                touched={checkIfDefined(formik.touched.partner_details, false) ? true : false}\n                errorMessage={formik.errors.partner_details}\n            />\n            <Input\n                label=\"What best describes your current work status?\"\n                id=\"work_status\"\n                name=\"work_status\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.work_status}\n                invalid={checkIfDefined(formik.errors.work_status, false) ? true : false}\n                touched={checkIfDefined(formik.touched.work_status, false) ? true : false}\n                errorMessage={formik.errors.work_status}\n            />\n            <Input\n                label=\"If you do work, how many days per week do you work?\"\n                id=\"work_days\"\n                name=\"work_days\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.work_days}\n                invalid={checkIfDefined(formik.errors.work_days, false) ? true : false}\n                touched={checkIfDefined(formik.touched.work_days, false) ? true : false}\n                errorMessage={formik.errors.work_days}\n            />\n\n            <Input\n                label=\"How many hours per week do you work?\"\n                id=\"work_hours\"\n                name=\"work_hours\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.work_hours}\n                invalid={checkIfDefined(formik.errors.work_hours, false) ? true : false}\n                touched={checkIfDefined(formik.touched.work_hours, false) ? true : false}\n                errorMessage={formik.errors.work_hours}\n            />\n            <Input\n                label=\"What best describes your usual work schedule?\"\n                id=\"work_schedule\"\n                name=\"work_schedule\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.work_schedule}\n                invalid={checkIfDefined(formik.errors.work_schedule, false) ? true : false}\n                touched={checkIfDefined(formik.touched.work_schedule, false) ? true : false}\n                errorMessage={formik.errors.work_schedule}\n            />\n            <Input\n                label=\"What time do you usually start work?\"\n                id=\"start_work_time\"\n                name=\"start_work_time\"\n                type=\"time\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.start_work_time}\n                invalid={checkIfDefined(formik.errors.start_work_time, false) ? true : false}\n                touched={checkIfDefined(formik.touched.start_work_time, false) ? true : false}\n                errorMessage={formik.errors.start_work_time}\n            />\n            <Input\n                label=\"What time do you usually end work?\"\n                id=\"end_work_time\"\n                name=\"end_work_time\"\n                type=\"time\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.end_work_time}\n                invalid={checkIfDefined(formik.errors.end_work_time, false) ? true : false}\n                touched={checkIfDefined(formik.touched.end_work_time, false) ? true : false}\n                errorMessage={formik.errors.end_work_time}\n            />\n            <Input\n                label=\"What time do you have to leave home in the morning to get work on time?\"\n                id=\"leave_time\"\n                name=\"leave_time\"\n                type=\"time\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.leave_time}\n                invalid={checkIfDefined(formik.errors.leave_time, false) ? true : false}\n                touched={checkIfDefined(formik.touched.leave_time, false) ? true : false}\n                errorMessage={formik.errors.leave_time}\n            />\n            <Input\n                label=\"What time do you get home from work in the afternoon / evening?\"\n                id=\"home_time\"\n                name=\"home_time\"\n                type=\"time\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.home_time}\n                invalid={checkIfDefined(formik.errors.home_time, false) ? true : false}\n                touched={checkIfDefined(formik.touched.home_time, false) ? true : false}\n                errorMessage={formik.errors.home_time}\n            />\n            <Input\n                label=\"Please select all that apply\"\n                id=\"selection\"\n                name=\"selection\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.selection}\n                invalid={checkIfDefined(formik.errors.selection, false) ? true : false}\n                touched={checkIfDefined(formik.touched.selection, false) ? true : false}\n                errorMessage={formik.errors.selection}\n            />\n            <Input\n                label=\"How many drinks containing alcohol (e.g. 1 beer =250ml, 1 tot spirits=25ml, 1 small glass wine=125ml) do you usually have per week?\"\n                id=\"alcoholic_drinks\"\n                name=\"alcoholic_drinks\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.alcoholic_drinks}\n                invalid={checkIfDefined(formik.errors.alcoholic_drinks, false) ? true : false}\n                touched={checkIfDefined(formik.touched.alcoholic_drinks, false) ? true : false}\n                errorMessage={formik.errors.alcoholic_drinks}\n            />\n            <Input\n                label=\"How many caffeine-containing drinks/products do you usually have per day?\"\n                id=\"caffeine_drinks\"\n                name=\"caffeine_drinks\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.caffeine_drinks}\n                invalid={checkIfDefined(formik.errors.caffeine_drinks, false) ? true : false}\n                touched={checkIfDefined(formik.touched.caffeine_drinks, false) ? true : false}\n                errorMessage={formik.errors.caffeine_drinks}\n            />\n            <Input\n                label=\"How many nicotine products do you usually have per day?\"\n                id=\"nicotine_products\"\n                name=\"nicotine_products\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.nicotine_products}\n                invalid={checkIfDefined(formik.errors.nicotine_products, false) ? true : false}\n                touched={checkIfDefined(formik.touched.nicotine_products, false) ? true : false}\n                errorMessage={formik.errors.nicotine_products}\n            />\n            <Input\n                label=\"What recreational drugs do you use and how often (per week)?\"\n                id=\"recreation_drugs\"\n                name=\"recreation_drugs\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.recreation_drugs}\n                invalid={checkIfDefined(formik.errors.recreation_drugs, false) ? true : false}\n                touched={checkIfDefined(formik.touched.recreation_drugs, false) ? true : false}\n                errorMessage={formik.errors.recreation_drugs}\n            />\n            <Input\n                label=\"Do you usually participate in regular physical activity?\"\n                id=\"physical_activity\"\n                name=\"physical_activity\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.physical_activity}\n                invalid={checkIfDefined(formik.errors.physical_activity, false) ? true : false}\n                touched={checkIfDefined(formik.touched.physical_activity, false) ? true : false}\n                errorMessage={formik.errors.physical_activity}\n            />\n            <Input\n                label=\"If yes, please describe the type (e.g. gym, yoga, running, rock climbing) and hours per week.\"\n                id=\"physical_activity_details\"\n                name=\"physical_activity_details\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.physical_activity_details}\n                invalid={checkIfDefined(formik.errors.physical_activity_details, false) ? true : false}\n                touched={checkIfDefined(formik.touched.physical_activity_details, false) ? true : false}\n                errorMessage={formik.errors.physical_activity_details}\n            />\n            <Input\n                label=\"You may have heard of “morning” and “evening” type people. Morning-types, or larks, are those people who love to wake-up early, often like to exercise and work in the morning, and go to sleep early. Evening-types or owls prefer to sleep in, are often most productive at night and rarely go to sleep before midnight. Which do you consider yourself to be?\"\n                id=\"type\"\n                name=\"type\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.type}\n                invalid={checkIfDefined(formik.errors.type, false) ? true : false}\n                touched={checkIfDefined(formik.touched.type, false) ? true : false}\n                errorMessage={formik.errors.type}\n            />\n            <Input\n                label=\"What time would be perfect for you to fall asleep at?\"\n                id=\"ideal_sleep_time\"\n                name=\"ideal_sleep_time\"\n                type=\"time\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.ideal_sleep_time}\n                invalid={checkIfDefined(formik.errors.ideal_sleep_time, false) ? true : false}\n                touched={checkIfDefined(formik.touched.ideal_sleep_time, false) ? true : false}\n                errorMessage={formik.errors.ideal_sleep_time}\n            />\n            <Input\n                label=\"At what time would you feel best when waking up without using an alarm clock?\"\n                id=\"ideal_wake_time\"\n                name=\"ideal_wake_time\"\n                type=\"time\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.ideal_wake_time}\n                invalid={checkIfDefined(formik.errors.ideal_wake_time, false) ? true : false}\n                touched={checkIfDefined(formik.touched.ideal_wake_time, false) ? true : false}\n                errorMessage={formik.errors.ideal_wake_time}\n            />\n        </form>\n    )\n}\n\nexport default LifestyleFactors","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/QuestionnaireForms/FatigueScale/FatigueScale.js",["1155"],"import React, { useState } from 'react'\nimport classes from './FatigueScale.module.css'\nimport { checkIfDefined } from '../../../shared/Utility'\nimport Input from '../../UI/Input/Input'\n\nconst FatigueScale = (props) => {\n\n    const formik = props.formik\n\n    return (\n        <form className={classes.Form}>\n            <div>\n                <Input\n                    label=\"My motivation is lower when I am fatigued\"\n                    id=\"low_motivation\"\n                    name=\"low_motivation\"\n                    type=\"text\"\n                    onChange={formik.handleChange}\n                    styleContainer={classes.styleContainer}\n                    isQuestionnaire={true}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.low_motivation}\n                    invalid={checkIfDefined(formik.errors.low_motivation, false) ? true : false}\n                    touched={checkIfDefined(formik.touched.low_motivation, false) ? true : false}\n                    errorMessage={formik.errors.low_motivation}\n                />\n                <Input\n                    label=\"Exercise brings on my fatigue\"\n                    id=\"exercise\"\n                    name=\"exercise\"\n                    type=\"text\"\n                    onChange={formik.handleChange}\n                    isQuestionnaire={true}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.exercise}\n                    invalid={checkIfDefined(formik.errors.exercise, false) ? true : false}\n                    touched={checkIfDefined(formik.touched.exercise, false) ? true : false}\n                    errorMessage={formik.errors.exercise}\n                />\n            </div>\n            <div>\n                <Input\n                    label=\"I am easily fatigued\"\n                    id=\"easily_fatigued\"\n                    name=\"easily_fatigued\"\n                    type=\"text\"\n                    onChange={formik.handleChange}\n                    styleContainer={classes.styleContainer}\n                    isQuestionnaire={true}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.easily_fatigued}\n                    invalid={checkIfDefined(formik.errors.easily_fatigued, false) ? true : false}\n                    touched={checkIfDefined(formik.touched.easily_fatigued, false) ? true : false}\n                    errorMessage={formik.errors.easily_fatigued}\n                />\n                <Input\n                    label=\"Fatigue interferes with my physical functioning\"\n                    id=\"physical_functionality\"\n                    name=\"physical_functionality\"\n                    type=\"text\"\n                    onChange={formik.handleChange}\n                    isQuestionnaire={true}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.physical_functionality}\n                    invalid={checkIfDefined(formik.errors.physical_functionality, false) ? true : false}\n                    touched={checkIfDefined(formik.touched.physical_functionality, false) ? true : false}\n                    errorMessage={formik.errors.physical_functionality}\n                />\n            </div>\n            <div>\n                <Input\n                    label=\"Fatigue cases frequent problems for me\"\n                    id=\"frequent_problems\"\n                    name=\"frequent_problems\"\n                    type=\"text\"\n                    onChange={formik.handleChange}\n                    styleContainer={classes.styleContainer}\n                    isQuestionnaire={true}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.frequent_problems}\n                    invalid={checkIfDefined(formik.errors.frequent_problems, false) ? true : false}\n                    touched={checkIfDefined(formik.touched.frequent_problems, false) ? true : false}\n                    errorMessage={formik.errors.frequent_problems}\n                />\n                <Input\n                    label=\"My fatigue prevents sustained physical functioning\"\n                    id=\"sustained_physical\"\n                    name=\"sustained_physical\"\n                    type=\"text\"\n                    onChange={formik.handleChange}\n                    isQuestionnaire={true}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.sustained_physical}\n                    invalid={checkIfDefined(formik.errors.sitting_reading, false) ? true : false}\n                    touched={checkIfDefined(formik.touched.sitting_reading, false) ? true : false}\n                    errorMessage={formik.errors.sustained_physical}\n                />\n            </div>\n\n            <Input\n                label=\"Fatigue interferes with carrying out certain duties and responsibilities\"\n                id=\"duties_responsibilities\"\n                name=\"duties_responsibilities\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.duties_responsibilities}\n                invalid={checkIfDefined(formik.errors.duties_responsibilities, false) ? true : false}\n                touched={checkIfDefined(formik.touched.duties_responsibilities, false) ? true : false}\n                errorMessage={formik.errors.duties_responsibilities}\n            />\n            <div>\n                <Input\n                    label=\"Fatigue is among my three most disabling symptoms\"\n                    id=\"disabling_symptoms\"\n                    name=\"disabling_symptoms\"\n                    type=\"text\"\n                    onChange={formik.handleChange}\n                    styleContainer={classes.styleContainer}\n                    isQuestionnaire={true}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.disabling_symptoms}\n                    invalid={checkIfDefined(formik.errors.disabling_symptoms, false) ? true : false}\n                    touched={checkIfDefined(formik.touched.disabling_symptoms, false) ? true : false}\n                    errorMessage={formik.errors.disabling_symptoms}\n                />\n                <Input\n                    label=\"Fatigue interferes with my work, family or social life\"\n                    id=\"work_family_social\"\n                    name=\"work_family_social\"\n                    type=\"text\"\n                    onChange={formik.handleChange}\n                    isQuestionnaire={true}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.work_family_social}\n                    invalid={checkIfDefined(formik.errors.work_family_social, false) ? true : false}\n                    touched={checkIfDefined(formik.touched.work_family_social, false) ? true : false}\n                    errorMessage={formik.errors.work_family_social}\n                />\n            </div>\n\n        </form>\n    )\n}\n\nexport default FatigueScale","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/QuestionnaireForms/InsomniaIndex/InsomniaIndex.js",["1156"],"import React, { useState } from 'react'\nimport classes from './InsomniaIndex.module.css'\nimport { checkIfDefined } from '../../../shared/Utility'\nimport Input from '../../UI/Input/Input'\n\nconst InsomniaIndex = (props) => {\n\n    const formik = props.formik\n\n    return (\n        <form className={classes.Form}>\n            {/* this needs to be the main heading */}\n            <label htmlFor=\"insomina_severity\">They were asked to rate the current severity of their insomnia problem(s) (i.e. last 2 weeks).</label>\n\n            <Input\n                label=\"Difficulty falling asleep\"\n                id=\"falling_asleep\"\n                name=\"falling_asleep\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.falling_asleep}\n                invalid={checkIfDefined(formik.errors.falling_asleep, false) ? true : false}\n                touched={checkIfDefined(formik.touched.falling_asleep, false) ? true : false}\n                errorMessage={formik.errors.falling_asleep}\n            />\n            <Input\n                label=\"Difficulty staying asleep\"\n                id=\"staying_asleep\"\n                name=\"staying_asleep\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.staying_asleep}\n                invalid={checkIfDefined(formik.errors.staying_asleep, false) ? true : false}\n                touched={checkIfDefined(formik.touched.staying_asleep, false) ? true : false}\n                errorMessage={formik.errors.staying_asleep}\n            />\n            <Input\n                label=\"Problems waking up too early\"\n                id=\"waking_early\"\n                name=\"waking_early\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.waking_early}\n                invalid={checkIfDefined(formik.errors.waking_early, false) ? true : false}\n                touched={checkIfDefined(formik.touched.waking_early, false) ? true : false}\n                errorMessage={formik.errors.waking_early}\n            />\n            <Input\n                label=\"How satisfied/dissatisfied are you with your current sleep pattern?\"\n                id=\"sleep_satisfaction\"\n                name=\"sleep_satisfaction\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.sleep_satisfaction}\n                invalid={checkIfDefined(formik.errors.sleep_satisfaction, false) ? true : false}\n                touched={checkIfDefined(formik.touched.sleep_satisfaction, false) ? true : false}\n                errorMessage={formik.errors.sleep_satisfaction}\n            />\n            <Input\n                label=\"How noticeable to others do you think your sleep problem is in terms of impairing the quality of your life?\"\n                id=\"sleep_problem_noticeable\"\n                name=\"sleep_problem_noticeable\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.sleep_problem_noticeable}\n                invalid={checkIfDefined(formik.errors.sleep_problem_noticeable, false) ? true : false}\n                touched={checkIfDefined(formik.touched.sleep_problem_noticeable, false) ? true : false}\n                errorMessage={formik.errors.sleep_problem_noticeable}\n            />\n            <Input\n                label=\"How worried/distressed are you about your current sleep problem?\"\n                id=\"worried_distressed\"\n                name=\"worried_distressed\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.worried_distressed}\n                invalid={checkIfDefined(formik.errors.worried_distressed, false) ? true : false}\n                touched={checkIfDefined(formik.touched.worried_distressed, false) ? true : false}\n                errorMessage={formik.errors.worried_distressed}\n            />\n            <Input\n                label=\"To what extent do you consider your sleep problem to interfere with your daily functioning (e.g. daytime fatigue, mood, ability to function at work/daily chores, concentration, memory, mood, etc.)?\"\n                id=\"daily_functioning\"\n                name=\"daily_functioning\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.daily_functioning}\n                invalid={checkIfDefined(formik.errors.daily_functioning, false) ? true : false}\n                touched={checkIfDefined(formik.touched.daily_functioning, false) ? true : false}\n                errorMessage={formik.errors.daily_functioning}\n            />\n        </form>\n    )\n}\n\nexport default InsomniaIndex","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/QuestionnaireForms/MedicalHistory/MedicalHistory.js",["1157"],"import React, { useState } from 'react'\nimport classes from './MedicalHistory.module.css'\nimport { checkIfDefined } from '../../../shared/Utility'\nimport Input from '../../UI/Input/Input'\n\nconst MedicalHistory = (props) => {\n\n    const formik = props.formik\n\n    return (\n        <form className={classes.Form}>\n            <Input\n                label=\"Do you suffer from or have you been diagnosed with any medical or psychiatric condition(s) (current or past)?\"\n                id=\"medical_conditions\"\n                name=\"medical_conditions\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.medical_conditions}\n                invalid={checkIfDefined(formik.errors.medical_conditions, false) ? true : false}\n                touched={checkIfDefined(formik.touched.medical_conditions, false) ? true : false}\n                errorMessage={formik.errors.medical_conditions}\n            />\n            <Input\n                label=\"If yes, please provide the name of the condition(s) and date(s) diagnosed.\"\n                id=\"name_date_diagnosed\"\n                name=\"name_date_diagnosed\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.name_date_diagnosed}\n                invalid={checkIfDefined(formik.errors.name_date_diagnosed, false) ? true : false}\n                touched={checkIfDefined(formik.touched.name_date_diagnosed, false) ? true : false}\n                errorMessage={formik.errors.name_date_diagnosed}\n            />\n            <Input\n                label=\"Ladies only: Are you ...\"\n                id=\"ladies_only\"\n                name=\"ladies_only\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.ladies_only}\n                invalid={checkIfDefined(formik.errors.ladies_only, false) ? true : false}\n                touched={checkIfDefined(formik.touched.ladies_only, false) ? true : false}\n                errorMessage={formik.errors.ladies_only}\n            />\n            <Input\n                label=\"Do you have high blood pressure?\"\n                id=\"high_blood_pressure\"\n                name=\"high_blood_pressure\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.high_blood_pressure}\n                invalid={checkIfDefined(formik.errors.high_blood_pressure, false) ? true : false}\n                touched={checkIfDefined(formik.touched.high_blood_pressure, false) ? true : false}\n                errorMessage={formik.errors.high_blood_pressure}\n            />\n            <Input\n                label=\"Do you take any medication prescribed by your doctor (e.g. for hypertension, anxiety)?\"\n                id=\"medication\"\n                name=\"medication\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.medication}\n                invalid={checkIfDefined(formik.errors.medication, false) ? true : false}\n                touched={checkIfDefined(formik.touched.medication, false) ? true : false}\n                errorMessage={formik.errors.medication}\n            />\n            <Input\n                label=\"If yes, please list the name of the medication(s), purpose, dose, time of day taken, and years taken.\"\n                id=\"medication_details\"\n                name=\"medication_details\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.medication_details}\n                invalid={checkIfDefined(formik.errors.medication_details, false) ? true : false}\n                touched={checkIfDefined(formik.touched.medication_details, false) ? true : false}\n                errorMessage={formik.errors.medication_details}\n            />\n            <Input\n                label=\"Do you currently or have you in the past used any medication or supplement specifically to help you with sleep (prescribed or over-the-counter)?\"\n                id=\"sleep_med\"\n                name=\"sleep_med\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.sleep_med}\n                invalid={checkIfDefined(formik.errors.sleep_med, false) ? true : false}\n                touched={checkIfDefined(formik.touched.sleep_med, false) ? true : false}\n                errorMessage={formik.errors.sleep_med}\n            />\n            <Input\n                label=\"If yes, please list the name of the sleep aid, dose and years taken.\"\n                id=\"sleep_med_details\"\n                name=\"sleep_med_details\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.sleep_med_details}\n                invalid={checkIfDefined(formik.errors.sleep_med_details, false) ? true : false}\n                touched={checkIfDefined(formik.touched.sleep_med_details, false) ? true : false}\n                errorMessage={formik.errors.sleep_med_details}\n            />\n            <Input\n                label={\"During the past month, how often have you taken medicine (prescribed or \\\"over the counter\\\") to help you sleep?\"}\n                id=\"medicine_usage\"\n                name=\"medicine_usage\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.medicine_usage}\n                invalid={checkIfDefined(formik.errors.medicine_usage, false) ? true : false}\n                touched={checkIfDefined(formik.touched.medicine_usage, false) ? true : false}\n                errorMessage={formik.errors.medicine_usage}\n            />\n        </form>\n    )\n}\n\nexport default MedicalHistory","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/QuestionnaireForms/EpworthScale/EpworthScale.js",["1158"],"import React, { useState } from 'react'\nimport classes from './EpworthScale.module.css'\nimport { checkIfDefined } from '../../../shared/Utility'\nimport Input from '../../UI/Input/Input'\n\nconst EpworthScale = (props) => {\n\n    const formik = props.formik\n    return (\n        <form className={classes.Form}>\n            <Input\n                label=\"Sitting and reading\"\n                id=\"sitting_reading\"\n                name=\"sitting_reading\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.sitting_reading}\n                invalid={checkIfDefined(formik.errors.sitting_reading, false) ? true : false}\n                touched={checkIfDefined(formik.touched.sitting_reading, false) ? true : false}\n                errorMessage={formik.errors.sitting_reading}\n            />\n            <Input\n                label=\"Watching TV\"\n                id=\"watching_tv\"\n                name=\"watching_tv\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.watching_tv}\n                invalid={checkIfDefined(formik.errors.watching_tv, false) ? true : false}\n                touched={checkIfDefined(formik.touched.watching_tv, false) ? true : false}\n                errorMessage={formik.errors.watching_tv}\n            />\n            <Input\n                label=\"Sitting inactive in a public place\"\n                id=\"sitting_public\"\n                name=\"sitting_public\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.sitting_public}\n                invalid={checkIfDefined(formik.errors.sitting_public, false) ? true : false}\n                touched={checkIfDefined(formik.touched.sitting_public, false) ? true : false}\n                errorMessage={formik.errors.sitting_public}\n            />\n            <Input\n                label=\"Being a passenger in a car for an hour\"\n                id=\"passenger_car\"\n                name=\"passenger_car\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.passenger_car}\n                invalid={checkIfDefined(formik.errors.passenger_car, false) ? true : false}\n                touched={checkIfDefined(formik.touched.passenger_car, false) ? true : false}\n                errorMessage={formik.errors.passenger_car}\n            />\n            <Input\n                label=\"Lying down in the afternoon\"\n                id=\"lying_down\"\n                name=\"lying_down\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.lying_down}\n                invalid={checkIfDefined(formik.errors.lying_down, false) ? true : false}\n                touched={checkIfDefined(formik.touched.lying_down, false) ? true : false}\n                errorMessage={formik.errors.lying_down}\n            />\n            <Input\n                label=\"Sitting and talking to someone\"\n                id=\"sitting_talking\"\n                name=\"sitting_talking\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.sitting_talking}\n                invalid={checkIfDefined(formik.errors.sitting_talking, false) ? true : false}\n                touched={checkIfDefined(formik.touched.sitting_talking, false) ? true : false}\n                errorMessage={formik.errors.sitting_talking}\n            />\n            <Input\n                label=\"Sitting quietly after lunch (no alcohol)\"\n                id=\"sitting_after_lunch\"\n                name=\"sitting_after_lunch\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.sitting_after_lunch}\n                invalid={checkIfDefined(formik.errors.sitting_after_lunch, false) ? true : false}\n                touched={checkIfDefined(formik.touched.sitting_after_lunch, false) ? true : false}\n                errorMessage={formik.errors.sitting_after_lunch}\n            />\n            <Input\n                label=\"As the driver, stopping for a few minutes in traffic while driving\"\n                id=\"driving_traffic\"\n                name=\"driving_traffic\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.driving_traffic}\n                invalid={checkIfDefined(formik.errors.driving_traffic, false) ? true : false}\n                touched={checkIfDefined(formik.touched.driving_traffic, false) ? true : false}\n                errorMessage={formik.errors.driving_traffic}\n            />\n        </form>\n    )\n}\n\nexport default EpworthScale","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/QuestionnaireForms/SleepHistory/SleepHistory.js",["1159"],"import React, { useState } from 'react'\nimport classes from './SleepHistory.module.css'\nimport { checkIfDefined } from '../../../shared/Utility'\nimport Input from '../../UI/Input/Input'\n\nconst SleepHistory = (props) => {\n\n    const formik = props.formik\n\n    return (\n        <form className={classes.Form}>\n            <Input\n                label=\"Please describe your main sleep complaint?\"\n                id=\"primary_complaint\"\n                name=\"primary_complaint\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.primary_complaint}\n                invalid={checkIfDefined(formik.errors.primary_complaint, false) ? true : false}\n                touched={checkIfDefined(formik.touched.primary_complaint, false) ? true : false}\n                errorMessage={formik.errors.primary_complaint}\n            />\n            <Input\n                label=\"Have you previously been diagnosed with any of the following sleep-related conditions?\"\n                id=\"conditions\"\n                name=\"conditions\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.conditions}\n                invalid={checkIfDefined(formik.errors.conditions, false) ? true : false}\n                touched={checkIfDefined(formik.touched.conditions, false) ? true : false}\n                errorMessage={formik.errors.conditions}\n            />\n            <Input\n                label=\"Use this space if you would like to provide any additional information to the question above.\"\n                id=\"additional_information\"\n                name=\"additional_information\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.fullname}\n                invalid={checkIfDefined(formik.errors.additional_information, false) ? true : false}\n                touched={checkIfDefined(formik.touched.additional_information, false) ? true : false}\n                errorMessage={formik.errors.additional_information}\n            />\n            <Input\n                label=\"How long have you had a problem with your sleep (specify weeks, months or years)?\"\n                id=\"period\"\n                name=\"period\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.period}\n                invalid={checkIfDefined(formik.errors.period, false) ? true : false}\n                touched={checkIfDefined(formik.touched.period, false) ? true : false}\n                errorMessage={formik.errors.period}\n            />\n            <Input\n                label=\"During the past month, on how many nights each week have you had a problem with your sleep?\"\n                id=\"problem_nights\"\n                name=\"problem_nights\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.problem_nights}\n                invalid={checkIfDefined(formik.errors.problem_nights, false) ? true : false}\n                touched={checkIfDefined(formik.touched.problem_nights, false) ? true : false}\n                errorMessage={formik.errors.problem_nights}\n            />\n            <Input\n                label=\"On a scale of 1 to 10, how severe is your sleep problem to you?\"\n                id=\"severity\"\n                name=\"severity\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.severity}\n                invalid={checkIfDefined(formik.errors.fullname, false) ? true : false}\n                touched={checkIfDefined(formik.touched.severity, false) ? true : false}\n                errorMessage={formik.errors.severity}\n            />\n            <Input\n                label=\"Sleep-related symptoms\"\n                id=\"symptoms\"\n                name=\"symptoms\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.symptoms}\n                invalid={checkIfDefined(formik.errors.symptoms, false) ? true : false}\n                touched={checkIfDefined(formik.touched.symptoms, false) ? true : false}\n                errorMessage={formik.errors.symptoms}\n            />\n            <Input\n                label=\"What time do you usually go to sleep?\"\n                id=\"sleep_time\"\n                name=\"sleep_time\"\n                type=\"time\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.sleep_time}\n                invalid={checkIfDefined(formik.errors.sleep_time, false) ? true : false}\n                touched={checkIfDefined(formik.touched.sleep_time, false) ? true : false}\n                errorMessage={formik.errors.sleep_time}\n            />\n            <Input\n                label=\"How long do you think it usually takes you to fall asleep at night (minutes)?\"\n                id=\"to_sleep_duration\"\n                name=\"to_sleep_duration\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.to_sleep_duration}\n                invalid={checkIfDefined(formik.errors.to_sleep_duration, false) ? true : false}\n                touched={checkIfDefined(formik.touched.to_sleep_duration, false) ? true : false}\n                errorMessage={formik.errors.to_sleep_duration}\n            />\n            <Input\n                label=\"What time do you usually wake-up?\"\n                id=\"wakeup_time\"\n                name=\"wakeup_time\"\n                type=\"time\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.wakeup_time}\n                invalid={checkIfDefined(formik.errors.wakeup_time, false) ? true : false}\n                touched={checkIfDefined(formik.touched.wakeup_time, false) ? true : false}\n                errorMessage={formik.errors.wakeup_time}\n            />\n            <Input\n                label=\"How much sleep do you think you usually get each night (hours)?\"\n                id=\"sleep_duration\"\n                name=\"sleep_duration\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.sleep_duration}\n                invalid={checkIfDefined(formik.errors.sleep_duration, false) ? true : false}\n                touched={checkIfDefined(formik.touched.sleep_duration, false) ? true : false}\n                errorMessage={formik.errors.sleep_duration}\n            />\n            <Input\n                label=\"On a scale of 1 to 10, how would you rate the quality of your sleep?\"\n                id=\"sleep_quality\"\n                name=\"sleep_quality\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.sleep_quality}\n                invalid={checkIfDefined(formik.errors.sleep_quality, false) ? true : false}\n                touched={checkIfDefined(formik.touched.sleep_quality, false) ? true : false}\n                errorMessage={formik.errors.sleep_quality}\n            />\n            <Input\n                label=\"One a scale of 1 to 10, how restorative or refreshing do you think your sleep is?\"\n                id=\"restorative_rating\"\n                name=\"restorative_rating\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.restorative_rating}\n                invalid={checkIfDefined(formik.errors.restorative_rating, false) ? true : false}\n                touched={checkIfDefined(formik.touched.restorative_rating, false) ? true : false}\n                errorMessage={formik.errors.restorative_rating}\n            />\n            <Input\n                label=\"What best describes your daytime napping patterns?\"\n                id=\"napping_pattern\"\n                name=\"napping_pattern\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.napping_pattern}\n                invalid={checkIfDefined(formik.errors.napping_pattern, false) ? true : false}\n                touched={checkIfDefined(formik.touched.napping_pattern, false) ? true : false}\n                errorMessage={formik.errors.napping_pattern}\n            />\n            <Input\n                label=\"If you nap, what time of day do you usually nap and for how long?\"\n                id=\"nap_period\"\n                name=\"nap_period\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.nap_period}\n                invalid={checkIfDefined(formik.errors.nap_period, false) ? true : false}\n                touched={checkIfDefined(formik.touched.nap_period, false) ? true : false}\n                errorMessage={formik.errors.nap_period}\n                \n            />\n            <Input\n                label=\"Which of the following most often interferes with your sleep?\"\n                id=\"sleep_interferences\"\n                name=\"sleep_interferences\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.sleep_interferences}\n                invalid={checkIfDefined(formik.errors.sleep_interferences, false) ? true : false}\n                touched={checkIfDefined(formik.touched.sleep_interferences, false) ? true : false}\n                errorMessage={formik.errors.sleep_interferences}\n            />\n            <Input\n                label=\"In the last month:\"\n                id=\"last_month\"\n                name=\"last_month\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.last_month}\n                invalid={checkIfDefined(formik.errors.last_month, false) ? true : false}\n                touched={checkIfDefined(formik.touched.last_month, false) ? true : false}\n                errorMessage={formik.errors.last_month}\n            />\n            <Input\n                label=\"How alert are you during the day time?\"\n                id=\"alertness\"\n                name=\"alertness\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                isQuestionnaire={true}\n                onBlur={formik.handleBlur}\n                value={formik.values.alertness}\n                invalid={checkIfDefined(formik.errors.alertness, false) ? true : false}\n                touched={checkIfDefined(formik.touched.alertness, false) ? true : false}\n                errorMessage={formik.errors.alertness}\n            />\n        </form>\n    )\n}\n\nexport default SleepHistory","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AssessmentPhases/Questionnaire/SectionTab/SectionTab.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Input/Input.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AssessmentPhases/Actigram/DayRow/DayRow.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/ViewActigramModal/ViewActigramModal.js",["1160","1161","1162"],"import React, {useState, useEffect} from 'react';\nimport Overlay from '../../Overlay/Overlay';\nimport classes from './ViewActigramModal.module.css'\nimport Cross from '../../../../Assets/Icons/cross.svg'\n\nconst ViewActigramModal = (props) => {\n    return (\n        <Overlay show={props.show} close={props.close} classCustom={props.classCustom}>\n            <div className={props.show ? [classes.ModalVisible, props.clsWidth, props.styleModal].join(' ') : classes.ModalHidden}>\n                <div className={classes.Header}>\n                    <h2>Upload Questionnaire Data</h2>\n                    <img src={Cross} alt=\"Close Modal\" className={classes.CloseCross} onClick={props.close} /> {/* Modal closes on pressing the cross icon */}\n                </div>\n                <div className={classes.InnerModalContainer}>\n                    <img src={`${props.image}?${new Date().getTime()}`} />\n                    {/* <div className={classes.ButtonGroup}>\n                        <Button buttonType={\"primary\"} clicked={props.close}>Close</Button>\n                    </div> */}\n                </div>\n            </div>\n        </Overlay>\n    )\n}\n\nexport default ViewActigramModal","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/EmailReportModal/EmailReportModal.js",["1163"],"import React, { useEffect, useState } from 'react';\nimport Overlay from '../../Overlay/Overlay';\nimport classes from './EmailReportModal.module.css'\nimport Cross from '../../../../Assets/Icons/cross.svg'\nimport Button from '../../Button/Button'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport Spinner from '../../Spinner/Spinner'\nimport FeedbackGlobal from '../../FeedbackGlobal/FeedbackGlobal'\n\nconst EmailReportModal = (props) => {\n    const [state, setState] = useState({\n        values: {},\n        setSubmitting: \"\",\n        resetForm: \"\"\n    })\n\n    const emailSchema = Yup.object().shape({\n        email: Yup.string().email('Invalid email').required('Required'),\n    });\n\n    if (!props.sendingEmail && props.sendingEmailComplete) {\n        setTimeout(() => {\n            state.setSubmitting()\n            state.resetForm()\n            props.OnSetEmailReportModal(false)\n        }, 2000)\n    }\n\n    const closeHandler = ()=>{\n        document.getElementById(\"resethidden\").click(); \n        props.close();\n    }\n\n    return (\n        <Overlay show={props.show} close={closeHandler} classCustom={props.classCustom}>\n            <div className={props.show ? [classes.ModalVisible, props.clsWidth, props.styleModal].join(' ') : [classes.ModalVisible, classes.HideModal].join(' ')}>\n                <div className={classes.Header}>\n                    <h2>Send email to: {props.fullname}</h2>\n                    <img src={Cross} alt=\"Close Modal\" className={classes.CloseCross} onClick={closeHandler} /> {/* Modal closes on pressing the cross icon */}\n                </div>\n                {\n                    <div className={classes.InnerModalContainer}>\n                        {props.sendingEmail && !props.error ? <Spinner calledLocation=\"DataAnalysis\" loadingMessage=\"Let's hope this works...\"/> : props.sendingEmailComplete ? <FeedbackGlobal type=\"Success\" successMessage=\"Successfully sent!\" /> :\n                            props.error ? <FeedbackGlobal type=\"Fail\" error={\"Email failed. Please check your network connection and try again!\"} errorLocation={\"emailReport\"} OnSetAssessmentError={props.OnSetAssessmentError} cancelError={props.close} /> :\n                                <>\n                                    <p>Please ensure the email is correct. If an email was not provided by {props.fullname} then please fill it in below.</p>\n                                    <Formik\n                                        initialValues={{\n                                            email: props.email,\n                                            message: ''\n                                        }}\n                                        validationSchema={emailSchema}\n                                        onSubmit={(values, { setSubmitting, resetForm}) => {\n                                            //code for sending the email - pass values.email and values.message\n                                            setState({ ...state, values: values, setSubmitting: setSubmitting, resetForm: resetForm })\n                                            props.OnEmailReport(props.token, props.assessment_id, values.email, values.message)\n                                        }}\n                                    >\n                                        {(formProps) => (\n                                            <Form className={classes.Form}>\n                                                <button onClick={e => { e.preventDefault(); formProps.resetForm(); }} id=\"resethidden\" className={classes.HideButton}></button>\n                                                <div style={{ display: \"flex\" }}>\n                                                    <label htmlFor=\"email\">Email</label><ErrorMessage name=\"email\" render={msg => <div className={classes.ErrorMessage}>[{msg}]</div>} />\n                                                </div>\n                                                <Field name=\"email\" type=\"email\" className={classes.Input} placeholder=\"example@example.com\" id=\"email\" />\n\n                                                <label htmlFor=\"message\" className={classes.MessageLabel}>Message</label>\n                                                <Field name=\"message\" type=\"text\" as=\"textarea\" className={classes.TextArea} placeholder=\"Write a message here...\" id=\"message\" />\n\n                                                <div className={classes.ButtonGroup}>\n                                                    <Button clicked={closeHandler} buttonType={\"secondary\"} >Cancel</Button>\n                                                    <button type=\"submit\" className={classes.Button}>Send</button>\n                                                </div>\n                                            </Form>\n                                        )}\n                                    </Formik>\n                                </>\n                        }\n                    </div>\n                }\n\n            </div>\n        </Overlay>\n    )\n}\n\nexport default EmailReportModal","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/Modals/ViewSummaryReportModal/ViewSummaryReportModal.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/InterpretationForm/InterpretationForm.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/DataAnalysisForms/LifestyleFactors/LifestyleFactors.js",["1164"],"import React, { useState } from 'react'\nimport { checkIfDefined } from '../../../shared/Utility'\nimport AnalysisTable from '../../AnalysisTable/AnalysisTable'\nconst LifestyleFactors = (props) => {\n\n    const data = checkIfDefined(props.lifestyle_factors, {})\n\n    const [state, setState] = useState({\n        children: data.children ? \"Yes\" : \"No\",\n        bed_partner: data.bed_partner ? \"Yes\" : \"No\",\n        work_status: data.work_status,\n        work_days: data.work_days,\n        work_hours: data.work_hours,\n        work_schedule: data.work_schedule,\n        start_work_time: data.start_work_time,\n        end_work_time: data.end_work_time,\n        leave_time: data.leave_time,\n        home_time: data.home_time,\n        selection: data.selection,\n        alcoholic_drinks: data.alcoholic_drinks,\n        caffeine_drinks: data.caffeine_drinks,\n        nicotine_products: data.nicotine_products,\n        recreation_drugs: data.recreation_drugs,\n        physical_activity: data.physical_activity ? \"Yes\" : \"No\",\n        physical_activity_details: data.physical_activity_details,\n        type: data.type,\n        ideal_sleep_time: data.ideal_sleep_time,\n        ideal_wake_time: data.ideal_wake_time\n    })\n\n    return <AnalysisTable state={state} />\n}\nexport default LifestyleFactors","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/DataAnalysisForms/MedicalHistory/MedicalHistory.js",["1165"],"import React, { useState } from 'react'\nimport { checkIfDefined } from '../../../shared/Utility'\nimport AnalysisTable from '../../AnalysisTable/AnalysisTable'\n\nconst MedicalHistory = (props) => {\n\n    const data = checkIfDefined(props.medical_history, {})\n\n    const [state, setState] = useState({\n        medical_conditions: data.medical_conditions ? \"Yes\" : \"No\",\n        name_date_diagnosed: data.name_date_diagnosed,\n        ladies_only: data.ladies_only,\n        high_blood_pressure: data.high_blood_pressure,\n        medication: data.medication ? \"Yes\" : \"No\",\n        medication_details: data.medication_details,\n        sleep_med: data.sleep_med ? \"Yes\" : \"No\",\n        sleep_med_details: data.sleep_med_details,\n        medicine_usage: data.medicine_usage\n    })\n\n    return <AnalysisTable state={state} />\n}\nexport default MedicalHistory","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/DataAnalysisForms/SleepHistory/SleepHistory.js",["1166"],"import React, { useState } from 'react'\nimport { checkIfDefined } from '../../../shared/Utility'\nimport AnalysisTable from '../../AnalysisTable/AnalysisTable'\n\nconst SleepHistory = (props) => {\n\n    const sleep_history = checkIfDefined(props.sleep_history, {})\n    const lifestyle_factors = checkIfDefined(props.lifestyle_factors, {})\n\n    const [state, setState] = useState({\n        primary_complaint: sleep_history.primary_complaint,\n        problem_period: sleep_history.period,\n        problem_nights: sleep_history.problem_nights,\n        severity_rating: sleep_history.severity,\n        chronotype: lifestyle_factors.type,\n        sleep_time: sleep_history.sleep_time,\n        waketime: sleep_history.wakeup_time,\n        time_to_sleep: sleep_history.to_sleep_duration,\n        sleep_duration: sleep_history.sleep_duration,\n        sleep_quality: sleep_history.sleep_quality,\n        nap_period: sleep_history.nap_period,\n        napping_pattern: sleep_history.napping_pattern,\n        diagnosed_conditions: sleep_history.conditions,\n        additional_information: sleep_history.additional_information,\n        sleep_related_symptoms: sleep_history.symptoms\n    })\n\n    return <AnalysisTable state={state} />\n}\nexport default SleepHistory","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/DataAnalysisForms/SleepProfile/SleepProfile.js",["1167"],"import React, { useState } from 'react'\nimport { checkIfDefined } from '../../../shared/Utility'\nimport AnalysisTable from '../../AnalysisTable/AnalysisTable'\n\nconst SleepProfile = (props) => {\n    const data = checkIfDefined(props.calculations.sleep_profile, {})\n\n    const [state, setState] = useState({\n        sleep_opportunity: checkIfDefined(checkIfDefined(data.sleep_opportunity, \"\").value, \"\"),\n        bedtime_regularity: checkIfDefined(checkIfDefined(data.bedtime_regularity, \"\").value, \"\"),\n        wakeup_regularity: checkIfDefined(checkIfDefined(data.wakeup_regularity, \"\").value, \"\"),\n        timeinbed_regularity: checkIfDefined(checkIfDefined(data.timeinbed_regularity, \"\").value, \"\"),\n        sleep_satisfaction: checkIfDefined(checkIfDefined(data.sleep_satisfaction, \"\").value, \"\"),\n        sleep_restoration: checkIfDefined(checkIfDefined(data.sleep_restoration, \"\").value, \"\"),\n        daytime_sleepiness: checkIfDefined(checkIfDefined(data.daytime_sleepiness, \"\").value, \"\"),\n        daytime_fatigue: checkIfDefined(checkIfDefined(data.daytime_fatigue, \"\").value, \"\"),\n        daytime_alertness: checkIfDefined(checkIfDefined(data.daytime_alertness, \"\").value, \"\"),\n        daytime_dysfunction: checkIfDefined(checkIfDefined(data.daytime_dysfunction, \"\").value, \"\"),\n        sleep_medication_use: checkIfDefined(checkIfDefined(data.sleepmed_use, \"\").value, \"\"),\n        epworth_sleepiness_scale: checkIfDefined(checkIfDefined(props.calculations.sleep_questionnaires, \"\").ess, \"\"),\n        fatigue_severity_scale: checkIfDefined(checkIfDefined(props.calculations.sleep_questionnaires, \"\").fss, \"\"),\n        insomnia_severity_index: checkIfDefined(checkIfDefined(props.calculations.sleep_questionnaires, \"\").isi, \"\")\n    })\n\n    return <AnalysisTable state={state} />\n}\nexport default SleepProfile","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/DataAnalysisForms/ClientDetails/ClientDetails.js",["1168"],"import React, { useState } from 'react'\nimport { checkIfDefined } from '../../../shared/Utility'\nimport AnalysisTable from '../../AnalysisTable/AnalysisTable'\n\nconst ClientDetails = (props) => {\n    const data = checkIfDefined(props.client_details, {})\n    const bmi = checkIfDefined(props.bmi, 0)\n    const [state, setState] = useState({\n        fullname: data.fullname,\n        age: data.age,\n        gender: data.gender,\n        height: data.height,\n        weight: data.weight,\n        BMI: bmi,\n        waist_circumference: data.waist_circumference,\n        neck_circumference: data.neck_circumference\n    })\n\n    return <AnalysisTable state={state} />\n}\nexport default ClientDetails","/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AssessmentPhases/DataAnalysis/SectionTab/SectionTab.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/UI/NavItem/NavItem.js",[],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/Table/Row/Row.js",["1169"],"/Users/haydennorrie/Desktop/React/herokuLens copy 2/server/webapp/src/components/AnalysisTable/AnalysisTable.js",[],{"ruleId":"1170","replacedBy":"1171"},{"ruleId":"1172","replacedBy":"1173"},{"ruleId":"1174","severity":1,"message":"1175","line":13,"column":8,"nodeType":"1176","messageId":"1177","endLine":13,"endColumn":21},{"ruleId":"1174","severity":1,"message":"1178","line":17,"column":8,"nodeType":"1176","messageId":"1177","endLine":17,"endColumn":13},{"ruleId":"1179","severity":1,"message":"1180","line":31,"column":6,"nodeType":"1181","endLine":31,"endColumn":29,"suggestions":"1182"},{"ruleId":"1174","severity":1,"message":"1183","line":2,"column":8,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1184","line":11,"column":10,"nodeType":"1176","messageId":"1177","endLine":11,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1185","line":14,"column":8,"nodeType":"1176","messageId":"1177","endLine":14,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1186","line":56,"column":19,"nodeType":"1176","messageId":"1177","endLine":56,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1187","line":62,"column":9,"nodeType":"1176","messageId":"1177","endLine":62,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1188","line":67,"column":8,"nodeType":"1181","endLine":67,"endColumn":10,"suggestions":"1189"},{"ruleId":"1174","severity":1,"message":"1190","line":69,"column":19,"nodeType":"1176","messageId":"1177","endLine":69,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1183","line":2,"column":8,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1191","line":7,"column":8,"nodeType":"1176","messageId":"1177","endLine":7,"endColumn":20},{"ruleId":"1174","severity":1,"message":"1192","line":8,"column":8,"nodeType":"1176","messageId":"1177","endLine":8,"endColumn":22},{"ruleId":"1174","severity":1,"message":"1193","line":10,"column":8,"nodeType":"1176","messageId":"1177","endLine":10,"endColumn":15},{"ruleId":"1174","severity":1,"message":"1184","line":11,"column":10,"nodeType":"1176","messageId":"1177","endLine":11,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1185","line":14,"column":8,"nodeType":"1176","messageId":"1177","endLine":14,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1194","line":16,"column":8,"nodeType":"1176","messageId":"1177","endLine":16,"endColumn":12},{"ruleId":"1174","severity":1,"message":"1195","line":32,"column":8,"nodeType":"1176","messageId":"1177","endLine":32,"endColumn":28},{"ruleId":"1174","severity":1,"message":"1196","line":34,"column":10,"nodeType":"1176","messageId":"1177","endLine":34,"endColumn":19},{"ruleId":"1174","severity":1,"message":"1197","line":34,"column":21,"nodeType":"1176","messageId":"1177","endLine":34,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1198","line":34,"column":27,"nodeType":"1176","messageId":"1177","endLine":34,"endColumn":43},{"ruleId":"1174","severity":1,"message":"1199","line":35,"column":8,"nodeType":"1176","messageId":"1177","endLine":35,"endColumn":14},{"ruleId":"1174","severity":1,"message":"1200","line":36,"column":8,"nodeType":"1176","messageId":"1177","endLine":36,"endColumn":14},{"ruleId":"1174","severity":1,"message":"1186","line":66,"column":19,"nodeType":"1176","messageId":"1177","endLine":66,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1201","line":77,"column":11,"nodeType":"1176","messageId":"1177","endLine":77,"endColumn":21},{"ruleId":"1174","severity":1,"message":"1187","line":95,"column":9,"nodeType":"1176","messageId":"1177","endLine":95,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1202","line":104,"column":8,"nodeType":"1181","endLine":104,"endColumn":10,"suggestions":"1203"},{"ruleId":"1204","severity":1,"message":"1205","line":284,"column":48,"nodeType":"1206","messageId":"1207","endLine":284,"endColumn":50},{"ruleId":"1204","severity":1,"message":"1208","line":289,"column":49,"nodeType":"1206","messageId":"1207","endLine":289,"endColumn":51},{"ruleId":"1204","severity":1,"message":"1208","line":294,"column":56,"nodeType":"1206","messageId":"1207","endLine":294,"endColumn":58},{"ruleId":"1204","severity":1,"message":"1208","line":299,"column":56,"nodeType":"1206","messageId":"1207","endLine":299,"endColumn":58},{"ruleId":"1204","severity":1,"message":"1208","line":304,"column":56,"nodeType":"1206","messageId":"1207","endLine":304,"endColumn":58},{"ruleId":"1204","severity":1,"message":"1208","line":310,"column":56,"nodeType":"1206","messageId":"1207","endLine":310,"endColumn":58},{"ruleId":"1204","severity":1,"message":"1208","line":321,"column":56,"nodeType":"1206","messageId":"1207","endLine":321,"endColumn":58},{"ruleId":"1204","severity":1,"message":"1208","line":332,"column":56,"nodeType":"1206","messageId":"1207","endLine":332,"endColumn":58},{"ruleId":"1204","severity":1,"message":"1208","line":371,"column":34,"nodeType":"1206","messageId":"1207","endLine":371,"endColumn":36},{"ruleId":"1204","severity":1,"message":"1208","line":381,"column":41,"nodeType":"1206","messageId":"1207","endLine":381,"endColumn":43},{"ruleId":"1204","severity":1,"message":"1208","line":386,"column":48,"nodeType":"1206","messageId":"1207","endLine":386,"endColumn":50},{"ruleId":"1204","severity":1,"message":"1208","line":391,"column":48,"nodeType":"1206","messageId":"1207","endLine":391,"endColumn":50},{"ruleId":"1204","severity":1,"message":"1208","line":396,"column":48,"nodeType":"1206","messageId":"1207","endLine":396,"endColumn":50},{"ruleId":"1204","severity":1,"message":"1208","line":402,"column":48,"nodeType":"1206","messageId":"1207","endLine":402,"endColumn":50},{"ruleId":"1204","severity":1,"message":"1208","line":413,"column":48,"nodeType":"1206","messageId":"1207","endLine":413,"endColumn":50},{"ruleId":"1204","severity":1,"message":"1208","line":424,"column":48,"nodeType":"1206","messageId":"1207","endLine":424,"endColumn":50},{"ruleId":"1174","severity":1,"message":"1183","line":2,"column":8,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1184","line":11,"column":10,"nodeType":"1176","messageId":"1177","endLine":11,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1185","line":14,"column":8,"nodeType":"1176","messageId":"1177","endLine":14,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1186","line":55,"column":19,"nodeType":"1176","messageId":"1177","endLine":55,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1187","line":61,"column":9,"nodeType":"1176","messageId":"1177","endLine":61,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1188","line":66,"column":8,"nodeType":"1181","endLine":66,"endColumn":10,"suggestions":"1209"},{"ruleId":"1174","severity":1,"message":"1190","line":68,"column":19,"nodeType":"1176","messageId":"1177","endLine":68,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1183","line":2,"column":8,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1184","line":11,"column":10,"nodeType":"1176","messageId":"1177","endLine":11,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1185","line":14,"column":8,"nodeType":"1176","messageId":"1177","endLine":14,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1186","line":57,"column":19,"nodeType":"1176","messageId":"1177","endLine":57,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1187","line":63,"column":9,"nodeType":"1176","messageId":"1177","endLine":63,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1188","line":69,"column":8,"nodeType":"1181","endLine":69,"endColumn":10,"suggestions":"1210"},{"ruleId":"1174","severity":1,"message":"1190","line":71,"column":19,"nodeType":"1176","messageId":"1177","endLine":71,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1186","line":49,"column":19,"nodeType":"1176","messageId":"1177","endLine":49,"endColumn":27},{"ruleId":"1179","severity":1,"message":"1188","line":58,"column":8,"nodeType":"1181","endLine":58,"endColumn":10,"suggestions":"1211"},{"ruleId":"1174","severity":1,"message":"1212","line":60,"column":12,"nodeType":"1176","messageId":"1177","endLine":60,"endColumn":17},{"ruleId":"1174","severity":1,"message":"1190","line":60,"column":19,"nodeType":"1176","messageId":"1177","endLine":60,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1183","line":2,"column":8,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1184","line":11,"column":10,"nodeType":"1176","messageId":"1177","endLine":11,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1185","line":14,"column":8,"nodeType":"1176","messageId":"1177","endLine":14,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1186","line":56,"column":19,"nodeType":"1176","messageId":"1177","endLine":56,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1187","line":62,"column":9,"nodeType":"1176","messageId":"1177","endLine":62,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1188","line":67,"column":8,"nodeType":"1181","endLine":67,"endColumn":10,"suggestions":"1213"},{"ruleId":"1174","severity":1,"message":"1190","line":69,"column":19,"nodeType":"1176","messageId":"1177","endLine":69,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1214","line":25,"column":10,"nodeType":"1176","messageId":"1177","endLine":25,"endColumn":16},{"ruleId":"1174","severity":1,"message":"1186","line":51,"column":19,"nodeType":"1176","messageId":"1177","endLine":51,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1215","line":52,"column":11,"nodeType":"1176","messageId":"1177","endLine":52,"endColumn":19},{"ruleId":"1179","severity":1,"message":"1180","line":62,"column":8,"nodeType":"1181","endLine":62,"endColumn":10,"suggestions":"1216"},{"ruleId":"1174","severity":1,"message":"1212","line":64,"column":12,"nodeType":"1176","messageId":"1177","endLine":64,"endColumn":17},{"ruleId":"1174","severity":1,"message":"1190","line":64,"column":19,"nodeType":"1176","messageId":"1177","endLine":64,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1183","line":2,"column":8,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1191","line":7,"column":8,"nodeType":"1176","messageId":"1177","endLine":7,"endColumn":20},{"ruleId":"1174","severity":1,"message":"1192","line":8,"column":8,"nodeType":"1176","messageId":"1177","endLine":8,"endColumn":22},{"ruleId":"1174","severity":1,"message":"1193","line":10,"column":8,"nodeType":"1176","messageId":"1177","endLine":10,"endColumn":15},{"ruleId":"1174","severity":1,"message":"1184","line":11,"column":10,"nodeType":"1176","messageId":"1177","endLine":11,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1185","line":14,"column":8,"nodeType":"1176","messageId":"1177","endLine":14,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1194","line":16,"column":8,"nodeType":"1176","messageId":"1177","endLine":16,"endColumn":12},{"ruleId":"1174","severity":1,"message":"1196","line":34,"column":10,"nodeType":"1176","messageId":"1177","endLine":34,"endColumn":19},{"ruleId":"1174","severity":1,"message":"1197","line":34,"column":21,"nodeType":"1176","messageId":"1177","endLine":34,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1198","line":34,"column":27,"nodeType":"1176","messageId":"1177","endLine":34,"endColumn":43},{"ruleId":"1174","severity":1,"message":"1199","line":35,"column":8,"nodeType":"1176","messageId":"1177","endLine":35,"endColumn":14},{"ruleId":"1174","severity":1,"message":"1186","line":61,"column":19,"nodeType":"1176","messageId":"1177","endLine":61,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1187","line":91,"column":9,"nodeType":"1176","messageId":"1177","endLine":91,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1202","line":97,"column":8,"nodeType":"1181","endLine":97,"endColumn":10,"suggestions":"1217"},{"ruleId":"1204","severity":1,"message":"1208","line":295,"column":34,"nodeType":"1206","messageId":"1207","endLine":295,"endColumn":36},{"ruleId":"1204","severity":1,"message":"1208","line":305,"column":40,"nodeType":"1206","messageId":"1207","endLine":305,"endColumn":42},{"ruleId":"1204","severity":1,"message":"1208","line":309,"column":47,"nodeType":"1206","messageId":"1207","endLine":309,"endColumn":49},{"ruleId":"1204","severity":1,"message":"1208","line":314,"column":47,"nodeType":"1206","messageId":"1207","endLine":314,"endColumn":49},{"ruleId":"1204","severity":1,"message":"1208","line":319,"column":47,"nodeType":"1206","messageId":"1207","endLine":319,"endColumn":49},{"ruleId":"1204","severity":1,"message":"1208","line":325,"column":47,"nodeType":"1206","messageId":"1207","endLine":325,"endColumn":49},{"ruleId":"1204","severity":1,"message":"1208","line":336,"column":47,"nodeType":"1206","messageId":"1207","endLine":336,"endColumn":49},{"ruleId":"1204","severity":1,"message":"1208","line":346,"column":47,"nodeType":"1206","messageId":"1207","endLine":346,"endColumn":49},{"ruleId":"1174","severity":1,"message":"1186","line":49,"column":19,"nodeType":"1176","messageId":"1177","endLine":49,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1215","line":50,"column":11,"nodeType":"1176","messageId":"1177","endLine":50,"endColumn":19},{"ruleId":"1174","severity":1,"message":"1212","line":60,"column":12,"nodeType":"1176","messageId":"1177","endLine":60,"endColumn":17},{"ruleId":"1174","severity":1,"message":"1190","line":60,"column":19,"nodeType":"1176","messageId":"1177","endLine":60,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1186","line":49,"column":19,"nodeType":"1176","messageId":"1177","endLine":49,"endColumn":27},{"ruleId":"1179","severity":1,"message":"1202","line":58,"column":8,"nodeType":"1181","endLine":58,"endColumn":10,"suggestions":"1218"},{"ruleId":"1174","severity":1,"message":"1212","line":60,"column":12,"nodeType":"1176","messageId":"1177","endLine":60,"endColumn":17},{"ruleId":"1174","severity":1,"message":"1190","line":60,"column":19,"nodeType":"1176","messageId":"1177","endLine":60,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1183","line":2,"column":8,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1191","line":7,"column":8,"nodeType":"1176","messageId":"1177","endLine":7,"endColumn":20},{"ruleId":"1174","severity":1,"message":"1192","line":8,"column":8,"nodeType":"1176","messageId":"1177","endLine":8,"endColumn":22},{"ruleId":"1174","severity":1,"message":"1219","line":10,"column":8,"nodeType":"1176","messageId":"1177","endLine":10,"endColumn":19},{"ruleId":"1174","severity":1,"message":"1193","line":11,"column":8,"nodeType":"1176","messageId":"1177","endLine":11,"endColumn":15},{"ruleId":"1174","severity":1,"message":"1184","line":12,"column":10,"nodeType":"1176","messageId":"1177","endLine":12,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1185","line":15,"column":8,"nodeType":"1176","messageId":"1177","endLine":15,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1194","line":17,"column":8,"nodeType":"1176","messageId":"1177","endLine":17,"endColumn":12},{"ruleId":"1174","severity":1,"message":"1195","line":33,"column":8,"nodeType":"1176","messageId":"1177","endLine":33,"endColumn":28},{"ruleId":"1174","severity":1,"message":"1196","line":35,"column":10,"nodeType":"1176","messageId":"1177","endLine":35,"endColumn":19},{"ruleId":"1174","severity":1,"message":"1197","line":35,"column":21,"nodeType":"1176","messageId":"1177","endLine":35,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1198","line":35,"column":27,"nodeType":"1176","messageId":"1177","endLine":35,"endColumn":43},{"ruleId":"1174","severity":1,"message":"1199","line":36,"column":8,"nodeType":"1176","messageId":"1177","endLine":36,"endColumn":14},{"ruleId":"1174","severity":1,"message":"1220","line":37,"column":8,"nodeType":"1176","messageId":"1177","endLine":37,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1186","line":75,"column":19,"nodeType":"1176","messageId":"1177","endLine":75,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1201","line":86,"column":11,"nodeType":"1176","messageId":"1177","endLine":86,"endColumn":21},{"ruleId":"1221","severity":1,"message":"1222","line":99,"column":23,"nodeType":"1223","messageId":"1224","endLine":99,"endColumn":35},{"ruleId":"1204","severity":1,"message":"1208","line":120,"column":32,"nodeType":"1206","messageId":"1207","endLine":120,"endColumn":34},{"ruleId":"1204","severity":1,"message":"1208","line":122,"column":40,"nodeType":"1206","messageId":"1207","endLine":122,"endColumn":42},{"ruleId":"1204","severity":1,"message":"1208","line":136,"column":28,"nodeType":"1206","messageId":"1207","endLine":136,"endColumn":30},{"ruleId":"1204","severity":1,"message":"1208","line":136,"column":52,"nodeType":"1206","messageId":"1207","endLine":136,"endColumn":54},{"ruleId":"1204","severity":1,"message":"1208","line":141,"column":27,"nodeType":"1206","messageId":"1207","endLine":141,"endColumn":29},{"ruleId":"1204","severity":1,"message":"1208","line":143,"column":27,"nodeType":"1206","messageId":"1207","endLine":143,"endColumn":29},{"ruleId":"1204","severity":1,"message":"1208","line":145,"column":35,"nodeType":"1206","messageId":"1207","endLine":145,"endColumn":37},{"ruleId":"1204","severity":1,"message":"1208","line":147,"column":35,"nodeType":"1206","messageId":"1207","endLine":147,"endColumn":37},{"ruleId":"1204","severity":1,"message":"1208","line":149,"column":35,"nodeType":"1206","messageId":"1207","endLine":149,"endColumn":37},{"ruleId":"1204","severity":1,"message":"1208","line":153,"column":31,"nodeType":"1206","messageId":"1207","endLine":153,"endColumn":33},{"ruleId":"1204","severity":1,"message":"1208","line":158,"column":37,"nodeType":"1206","messageId":"1207","endLine":158,"endColumn":39},{"ruleId":"1204","severity":1,"message":"1208","line":158,"column":61,"nodeType":"1206","messageId":"1207","endLine":158,"endColumn":63},{"ruleId":"1204","severity":1,"message":"1208","line":158,"column":85,"nodeType":"1206","messageId":"1207","endLine":158,"endColumn":87},{"ruleId":"1204","severity":1,"message":"1208","line":160,"column":39,"nodeType":"1206","messageId":"1207","endLine":160,"endColumn":41},{"ruleId":"1204","severity":1,"message":"1208","line":160,"column":63,"nodeType":"1206","messageId":"1207","endLine":160,"endColumn":65},{"ruleId":"1204","severity":1,"message":"1208","line":160,"column":87,"nodeType":"1206","messageId":"1207","endLine":160,"endColumn":89},{"ruleId":"1204","severity":1,"message":"1208","line":160,"column":111,"nodeType":"1206","messageId":"1207","endLine":160,"endColumn":113},{"ruleId":"1204","severity":1,"message":"1208","line":165,"column":37,"nodeType":"1206","messageId":"1207","endLine":165,"endColumn":39},{"ruleId":"1204","severity":1,"message":"1208","line":165,"column":61,"nodeType":"1206","messageId":"1207","endLine":165,"endColumn":63},{"ruleId":"1204","severity":1,"message":"1208","line":167,"column":39,"nodeType":"1206","messageId":"1207","endLine":167,"endColumn":41},{"ruleId":"1204","severity":1,"message":"1208","line":167,"column":63,"nodeType":"1206","messageId":"1207","endLine":167,"endColumn":65},{"ruleId":"1204","severity":1,"message":"1208","line":167,"column":87,"nodeType":"1206","messageId":"1207","endLine":167,"endColumn":89},{"ruleId":"1204","severity":1,"message":"1208","line":171,"column":37,"nodeType":"1206","messageId":"1207","endLine":171,"endColumn":39},{"ruleId":"1204","severity":1,"message":"1208","line":171,"column":61,"nodeType":"1206","messageId":"1207","endLine":171,"endColumn":63},{"ruleId":"1204","severity":1,"message":"1208","line":173,"column":39,"nodeType":"1206","messageId":"1207","endLine":173,"endColumn":41},{"ruleId":"1204","severity":1,"message":"1208","line":173,"column":63,"nodeType":"1206","messageId":"1207","endLine":173,"endColumn":65},{"ruleId":"1204","severity":1,"message":"1208","line":173,"column":87,"nodeType":"1206","messageId":"1207","endLine":173,"endColumn":89},{"ruleId":"1204","severity":1,"message":"1208","line":177,"column":37,"nodeType":"1206","messageId":"1207","endLine":177,"endColumn":39},{"ruleId":"1204","severity":1,"message":"1208","line":177,"column":61,"nodeType":"1206","messageId":"1207","endLine":177,"endColumn":63},{"ruleId":"1204","severity":1,"message":"1208","line":179,"column":39,"nodeType":"1206","messageId":"1207","endLine":179,"endColumn":41},{"ruleId":"1204","severity":1,"message":"1208","line":179,"column":63,"nodeType":"1206","messageId":"1207","endLine":179,"endColumn":65},{"ruleId":"1204","severity":1,"message":"1208","line":179,"column":87,"nodeType":"1206","messageId":"1207","endLine":179,"endColumn":89},{"ruleId":"1204","severity":1,"message":"1208","line":183,"column":37,"nodeType":"1206","messageId":"1207","endLine":183,"endColumn":39},{"ruleId":"1204","severity":1,"message":"1208","line":185,"column":39,"nodeType":"1206","messageId":"1207","endLine":185,"endColumn":41},{"ruleId":"1204","severity":1,"message":"1208","line":185,"column":63,"nodeType":"1206","messageId":"1207","endLine":185,"endColumn":65},{"ruleId":"1204","severity":1,"message":"1208","line":189,"column":37,"nodeType":"1206","messageId":"1207","endLine":189,"endColumn":39},{"ruleId":"1204","severity":1,"message":"1208","line":191,"column":39,"nodeType":"1206","messageId":"1207","endLine":191,"endColumn":41},{"ruleId":"1204","severity":1,"message":"1208","line":191,"column":63,"nodeType":"1206","messageId":"1207","endLine":191,"endColumn":65},{"ruleId":"1204","severity":1,"message":"1208","line":195,"column":37,"nodeType":"1206","messageId":"1207","endLine":195,"endColumn":39},{"ruleId":"1204","severity":1,"message":"1208","line":197,"column":39,"nodeType":"1206","messageId":"1207","endLine":197,"endColumn":41},{"ruleId":"1204","severity":1,"message":"1208","line":197,"column":63,"nodeType":"1206","messageId":"1207","endLine":197,"endColumn":65},{"ruleId":"1204","severity":1,"message":"1208","line":205,"column":28,"nodeType":"1206","messageId":"1207","endLine":205,"endColumn":30},{"ruleId":"1204","severity":1,"message":"1208","line":205,"column":56,"nodeType":"1206","messageId":"1207","endLine":205,"endColumn":58},{"ruleId":"1204","severity":1,"message":"1208","line":224,"column":28,"nodeType":"1206","messageId":"1207","endLine":224,"endColumn":30},{"ruleId":"1204","severity":1,"message":"1205","line":224,"column":52,"nodeType":"1206","messageId":"1207","endLine":224,"endColumn":54},{"ruleId":"1204","severity":1,"message":"1208","line":228,"column":35,"nodeType":"1206","messageId":"1207","endLine":228,"endColumn":37},{"ruleId":"1204","severity":1,"message":"1205","line":228,"column":59,"nodeType":"1206","messageId":"1207","endLine":228,"endColumn":61},{"ruleId":"1204","severity":1,"message":"1208","line":232,"column":35,"nodeType":"1206","messageId":"1207","endLine":232,"endColumn":37},{"ruleId":"1204","severity":1,"message":"1208","line":232,"column":59,"nodeType":"1206","messageId":"1207","endLine":232,"endColumn":61},{"ruleId":"1204","severity":1,"message":"1208","line":249,"column":29,"nodeType":"1206","messageId":"1207","endLine":249,"endColumn":31},{"ruleId":"1204","severity":1,"message":"1208","line":251,"column":32,"nodeType":"1206","messageId":"1207","endLine":251,"endColumn":34},{"ruleId":"1204","severity":1,"message":"1208","line":263,"column":28,"nodeType":"1206","messageId":"1207","endLine":263,"endColumn":30},{"ruleId":"1204","severity":1,"message":"1208","line":263,"column":52,"nodeType":"1206","messageId":"1207","endLine":263,"endColumn":54},{"ruleId":"1225","severity":1,"message":"1226","line":291,"column":50,"nodeType":"1206","messageId":"1227","endLine":291,"endColumn":51},{"ruleId":"1228","severity":1,"message":"1229","line":298,"column":21,"nodeType":"1230","messageId":"1231","endLine":302,"endColumn":10},{"ruleId":"1204","severity":1,"message":"1208","line":350,"column":41,"nodeType":"1206","messageId":"1207","endLine":350,"endColumn":43},{"ruleId":"1232","severity":1,"message":"1233","line":356,"column":15,"nodeType":"1176","messageId":"1234","endLine":356,"endColumn":21},{"ruleId":"1232","severity":1,"message":"1233","line":371,"column":15,"nodeType":"1176","messageId":"1234","endLine":371,"endColumn":21},{"ruleId":"1232","severity":1,"message":"1235","line":374,"column":13,"nodeType":"1176","messageId":"1234","endLine":374,"endColumn":22},{"ruleId":"1174","severity":1,"message":"1187","line":399,"column":9,"nodeType":"1176","messageId":"1177","endLine":399,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1202","line":407,"column":8,"nodeType":"1181","endLine":407,"endColumn":10,"suggestions":"1236"},{"ruleId":"1174","severity":1,"message":"1237","line":3,"column":8,"nodeType":"1176","messageId":"1177","endLine":3,"endColumn":12},{"ruleId":"1179","severity":1,"message":"1180","line":21,"column":8,"nodeType":"1181","endLine":21,"endColumn":10,"suggestions":"1238"},{"ruleId":"1174","severity":1,"message":"1183","line":2,"column":8,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1184","line":11,"column":10,"nodeType":"1176","messageId":"1177","endLine":11,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1185","line":14,"column":8,"nodeType":"1176","messageId":"1177","endLine":14,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1186","line":56,"column":19,"nodeType":"1176","messageId":"1177","endLine":56,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1187","line":62,"column":9,"nodeType":"1176","messageId":"1177","endLine":62,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1180","line":67,"column":8,"nodeType":"1181","endLine":67,"endColumn":10,"suggestions":"1239"},{"ruleId":"1174","severity":1,"message":"1190","line":69,"column":19,"nodeType":"1176","messageId":"1177","endLine":69,"endColumn":27},{"ruleId":"1179","severity":1,"message":"1180","line":28,"column":8,"nodeType":"1181","endLine":28,"endColumn":10,"suggestions":"1240"},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1242","line":1,"column":27,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":33},{"ruleId":"1174","severity":1,"message":"1243","line":1,"column":35,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":44},{"ruleId":"1179","severity":1,"message":"1244","line":35,"column":27,"nodeType":"1176","endLine":35,"endColumn":38},{"ruleId":"1179","severity":1,"message":"1245","line":71,"column":8,"nodeType":"1181","endLine":71,"endColumn":42,"suggestions":"1246"},{"ruleId":"1174","severity":1,"message":"1243","line":1,"column":27,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":36},{"ruleId":"1174","severity":1,"message":"1247","line":2,"column":33,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":47},{"ruleId":"1174","severity":1,"message":"1193","line":2,"column":49,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":56},{"ruleId":"1174","severity":1,"message":"1248","line":4,"column":8,"nodeType":"1176","messageId":"1177","endLine":4,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1214","line":12,"column":8,"nodeType":"1176","messageId":"1177","endLine":12,"endColumn":14},{"ruleId":"1174","severity":1,"message":"1197","line":13,"column":21,"nodeType":"1176","messageId":"1177","endLine":13,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1198","line":13,"column":27,"nodeType":"1176","messageId":"1177","endLine":13,"endColumn":43},{"ruleId":"1174","severity":1,"message":"1249","line":14,"column":8,"nodeType":"1176","messageId":"1177","endLine":14,"endColumn":21},{"ruleId":"1174","severity":1,"message":"1250","line":16,"column":8,"nodeType":"1176","messageId":"1177","endLine":16,"endColumn":16},{"ruleId":"1174","severity":1,"message":"1251","line":26,"column":11,"nodeType":"1176","messageId":"1177","endLine":26,"endColumn":15},{"ruleId":"1174","severity":1,"message":"1201","line":31,"column":11,"nodeType":"1176","messageId":"1177","endLine":31,"endColumn":21},{"ruleId":"1174","severity":1,"message":"1252","line":33,"column":11,"nodeType":"1176","messageId":"1177","endLine":33,"endColumn":15},{"ruleId":"1204","severity":1,"message":"1208","line":87,"column":33,"nodeType":"1206","messageId":"1207","endLine":87,"endColumn":35},{"ruleId":"1204","severity":1,"message":"1208","line":93,"column":33,"nodeType":"1206","messageId":"1207","endLine":93,"endColumn":35},{"ruleId":"1204","severity":1,"message":"1208","line":93,"column":66,"nodeType":"1206","messageId":"1207","endLine":93,"endColumn":68},{"ruleId":"1204","severity":1,"message":"1208","line":93,"column":98,"nodeType":"1206","messageId":"1207","endLine":93,"endColumn":100},{"ruleId":"1204","severity":1,"message":"1208","line":94,"column":33,"nodeType":"1206","messageId":"1207","endLine":94,"endColumn":35},{"ruleId":"1204","severity":1,"message":"1208","line":94,"column":66,"nodeType":"1206","messageId":"1207","endLine":94,"endColumn":68},{"ruleId":"1204","severity":1,"message":"1208","line":94,"column":98,"nodeType":"1206","messageId":"1207","endLine":94,"endColumn":100},{"ruleId":"1204","severity":1,"message":"1208","line":95,"column":33,"nodeType":"1206","messageId":"1207","endLine":95,"endColumn":35},{"ruleId":"1204","severity":1,"message":"1208","line":96,"column":33,"nodeType":"1206","messageId":"1207","endLine":96,"endColumn":35},{"ruleId":"1204","severity":1,"message":"1208","line":96,"column":66,"nodeType":"1206","messageId":"1207","endLine":96,"endColumn":68},{"ruleId":"1174","severity":1,"message":"1253","line":121,"column":14,"nodeType":"1176","messageId":"1177","endLine":121,"endColumn":19},{"ruleId":"1174","severity":1,"message":"1254","line":121,"column":21,"nodeType":"1176","messageId":"1177","endLine":121,"endColumn":29},{"ruleId":"1174","severity":1,"message":"1255","line":122,"column":14,"nodeType":"1176","messageId":"1177","endLine":122,"endColumn":22},{"ruleId":"1174","severity":1,"message":"1256","line":122,"column":24,"nodeType":"1176","messageId":"1177","endLine":122,"endColumn":35},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":25},{"ruleId":"1204","severity":1,"message":"1208","line":36,"column":23,"nodeType":"1206","messageId":"1207","endLine":36,"endColumn":25},{"ruleId":"1179","severity":1,"message":"1180","line":67,"column":8,"nodeType":"1181","endLine":67,"endColumn":20,"suggestions":"1257"},{"ruleId":"1174","severity":1,"message":"1243","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":26},{"ruleId":"1174","severity":1,"message":"1258","line":20,"column":7,"nodeType":"1176","messageId":"1177","endLine":20,"endColumn":12},{"ruleId":"1179","severity":1,"message":"1259","line":34,"column":8,"nodeType":"1181","endLine":34,"endColumn":35,"suggestions":"1260"},{"ruleId":"1261","severity":1,"message":"1262","line":53,"column":69,"nodeType":"1230","messageId":"1263","endLine":53,"endColumn":71},{"ruleId":"1261","severity":1,"message":"1262","line":25,"column":84,"nodeType":"1230","messageId":"1263","endLine":25,"endColumn":86},{"ruleId":"1174","severity":1,"message":"1243","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":26},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":16,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1243","line":1,"column":26,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":35},{"ruleId":"1264","severity":1,"message":"1265","line":15,"column":21,"nodeType":"1266","endLine":15,"endColumn":75},{"ruleId":"1174","severity":1,"message":"1190","line":8,"column":19,"nodeType":"1176","messageId":"1177","endLine":8,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1190","line":8,"column":19,"nodeType":"1176","messageId":"1177","endLine":8,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1190","line":9,"column":19,"nodeType":"1176","messageId":"1177","endLine":9,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1190","line":8,"column":19,"nodeType":"1176","messageId":"1177","endLine":8,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1190","line":10,"column":19,"nodeType":"1176","messageId":"1177","endLine":10,"endColumn":27},{"ruleId":"1170","replacedBy":"1267"},{"ruleId":"1172","replacedBy":"1268"},{"ruleId":"1174","severity":1,"message":"1175","line":13,"column":8,"nodeType":"1176","messageId":"1177","endLine":13,"endColumn":21},{"ruleId":"1174","severity":1,"message":"1178","line":17,"column":8,"nodeType":"1176","messageId":"1177","endLine":17,"endColumn":13},{"ruleId":"1179","severity":1,"message":"1180","line":31,"column":6,"nodeType":"1181","endLine":31,"endColumn":29,"suggestions":"1269"},{"ruleId":"1174","severity":1,"message":"1183","line":2,"column":8,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1184","line":11,"column":10,"nodeType":"1176","messageId":"1177","endLine":11,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1185","line":14,"column":8,"nodeType":"1176","messageId":"1177","endLine":14,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1186","line":57,"column":19,"nodeType":"1176","messageId":"1177","endLine":57,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1187","line":63,"column":9,"nodeType":"1176","messageId":"1177","endLine":63,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1188","line":69,"column":8,"nodeType":"1181","endLine":69,"endColumn":10,"suggestions":"1270"},{"ruleId":"1174","severity":1,"message":"1190","line":71,"column":19,"nodeType":"1176","messageId":"1177","endLine":71,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1183","line":2,"column":8,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1184","line":11,"column":10,"nodeType":"1176","messageId":"1177","endLine":11,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1185","line":14,"column":8,"nodeType":"1176","messageId":"1177","endLine":14,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1186","line":56,"column":19,"nodeType":"1176","messageId":"1177","endLine":56,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1187","line":62,"column":9,"nodeType":"1176","messageId":"1177","endLine":62,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1188","line":67,"column":8,"nodeType":"1181","endLine":67,"endColumn":10,"suggestions":"1271"},{"ruleId":"1174","severity":1,"message":"1190","line":69,"column":19,"nodeType":"1176","messageId":"1177","endLine":69,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1183","line":2,"column":8,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1184","line":11,"column":10,"nodeType":"1176","messageId":"1177","endLine":11,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1185","line":14,"column":8,"nodeType":"1176","messageId":"1177","endLine":14,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1186","line":56,"column":19,"nodeType":"1176","messageId":"1177","endLine":56,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1187","line":62,"column":9,"nodeType":"1176","messageId":"1177","endLine":62,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1188","line":67,"column":8,"nodeType":"1181","endLine":67,"endColumn":10,"suggestions":"1272"},{"ruleId":"1174","severity":1,"message":"1190","line":69,"column":19,"nodeType":"1176","messageId":"1177","endLine":69,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1183","line":2,"column":8,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1191","line":7,"column":8,"nodeType":"1176","messageId":"1177","endLine":7,"endColumn":20},{"ruleId":"1174","severity":1,"message":"1192","line":8,"column":8,"nodeType":"1176","messageId":"1177","endLine":8,"endColumn":22},{"ruleId":"1174","severity":1,"message":"1193","line":10,"column":8,"nodeType":"1176","messageId":"1177","endLine":10,"endColumn":15},{"ruleId":"1174","severity":1,"message":"1184","line":11,"column":10,"nodeType":"1176","messageId":"1177","endLine":11,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1185","line":14,"column":8,"nodeType":"1176","messageId":"1177","endLine":14,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1194","line":16,"column":8,"nodeType":"1176","messageId":"1177","endLine":16,"endColumn":12},{"ruleId":"1174","severity":1,"message":"1196","line":34,"column":10,"nodeType":"1176","messageId":"1177","endLine":34,"endColumn":19},{"ruleId":"1174","severity":1,"message":"1197","line":34,"column":21,"nodeType":"1176","messageId":"1177","endLine":34,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1198","line":34,"column":27,"nodeType":"1176","messageId":"1177","endLine":34,"endColumn":43},{"ruleId":"1174","severity":1,"message":"1199","line":35,"column":8,"nodeType":"1176","messageId":"1177","endLine":35,"endColumn":14},{"ruleId":"1174","severity":1,"message":"1186","line":61,"column":19,"nodeType":"1176","messageId":"1177","endLine":61,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1187","line":91,"column":9,"nodeType":"1176","messageId":"1177","endLine":91,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1202","line":97,"column":8,"nodeType":"1181","endLine":97,"endColumn":10,"suggestions":"1273"},{"ruleId":"1204","severity":1,"message":"1208","line":295,"column":34,"nodeType":"1206","messageId":"1207","endLine":295,"endColumn":36},{"ruleId":"1204","severity":1,"message":"1208","line":305,"column":40,"nodeType":"1206","messageId":"1207","endLine":305,"endColumn":42},{"ruleId":"1204","severity":1,"message":"1208","line":309,"column":47,"nodeType":"1206","messageId":"1207","endLine":309,"endColumn":49},{"ruleId":"1204","severity":1,"message":"1208","line":314,"column":47,"nodeType":"1206","messageId":"1207","endLine":314,"endColumn":49},{"ruleId":"1204","severity":1,"message":"1208","line":319,"column":47,"nodeType":"1206","messageId":"1207","endLine":319,"endColumn":49},{"ruleId":"1204","severity":1,"message":"1208","line":325,"column":47,"nodeType":"1206","messageId":"1207","endLine":325,"endColumn":49},{"ruleId":"1204","severity":1,"message":"1208","line":336,"column":47,"nodeType":"1206","messageId":"1207","endLine":336,"endColumn":49},{"ruleId":"1204","severity":1,"message":"1208","line":346,"column":47,"nodeType":"1206","messageId":"1207","endLine":346,"endColumn":49},{"ruleId":"1174","severity":1,"message":"1183","line":2,"column":8,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1184","line":11,"column":10,"nodeType":"1176","messageId":"1177","endLine":11,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1185","line":14,"column":8,"nodeType":"1176","messageId":"1177","endLine":14,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1186","line":55,"column":19,"nodeType":"1176","messageId":"1177","endLine":55,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1187","line":61,"column":9,"nodeType":"1176","messageId":"1177","endLine":61,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1188","line":66,"column":8,"nodeType":"1181","endLine":66,"endColumn":10,"suggestions":"1274"},{"ruleId":"1174","severity":1,"message":"1190","line":68,"column":19,"nodeType":"1176","messageId":"1177","endLine":68,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1186","line":49,"column":19,"nodeType":"1176","messageId":"1177","endLine":49,"endColumn":27},{"ruleId":"1179","severity":1,"message":"1202","line":58,"column":8,"nodeType":"1181","endLine":58,"endColumn":10,"suggestions":"1275"},{"ruleId":"1174","severity":1,"message":"1212","line":60,"column":12,"nodeType":"1176","messageId":"1177","endLine":60,"endColumn":17},{"ruleId":"1174","severity":1,"message":"1190","line":60,"column":19,"nodeType":"1176","messageId":"1177","endLine":60,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1183","line":2,"column":8,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1191","line":7,"column":8,"nodeType":"1176","messageId":"1177","endLine":7,"endColumn":20},{"ruleId":"1174","severity":1,"message":"1192","line":8,"column":8,"nodeType":"1176","messageId":"1177","endLine":8,"endColumn":22},{"ruleId":"1174","severity":1,"message":"1193","line":10,"column":8,"nodeType":"1176","messageId":"1177","endLine":10,"endColumn":15},{"ruleId":"1174","severity":1,"message":"1184","line":11,"column":10,"nodeType":"1176","messageId":"1177","endLine":11,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1185","line":14,"column":8,"nodeType":"1176","messageId":"1177","endLine":14,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1194","line":16,"column":8,"nodeType":"1176","messageId":"1177","endLine":16,"endColumn":12},{"ruleId":"1174","severity":1,"message":"1195","line":32,"column":8,"nodeType":"1176","messageId":"1177","endLine":32,"endColumn":28},{"ruleId":"1174","severity":1,"message":"1196","line":34,"column":10,"nodeType":"1176","messageId":"1177","endLine":34,"endColumn":19},{"ruleId":"1174","severity":1,"message":"1197","line":34,"column":21,"nodeType":"1176","messageId":"1177","endLine":34,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1198","line":34,"column":27,"nodeType":"1176","messageId":"1177","endLine":34,"endColumn":43},{"ruleId":"1174","severity":1,"message":"1199","line":35,"column":8,"nodeType":"1176","messageId":"1177","endLine":35,"endColumn":14},{"ruleId":"1174","severity":1,"message":"1200","line":36,"column":8,"nodeType":"1176","messageId":"1177","endLine":36,"endColumn":14},{"ruleId":"1174","severity":1,"message":"1186","line":66,"column":19,"nodeType":"1176","messageId":"1177","endLine":66,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1201","line":77,"column":11,"nodeType":"1176","messageId":"1177","endLine":77,"endColumn":21},{"ruleId":"1174","severity":1,"message":"1187","line":95,"column":9,"nodeType":"1176","messageId":"1177","endLine":95,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1202","line":104,"column":8,"nodeType":"1181","endLine":104,"endColumn":10,"suggestions":"1276"},{"ruleId":"1204","severity":1,"message":"1205","line":284,"column":48,"nodeType":"1206","messageId":"1207","endLine":284,"endColumn":50},{"ruleId":"1204","severity":1,"message":"1208","line":289,"column":49,"nodeType":"1206","messageId":"1207","endLine":289,"endColumn":51},{"ruleId":"1204","severity":1,"message":"1208","line":294,"column":56,"nodeType":"1206","messageId":"1207","endLine":294,"endColumn":58},{"ruleId":"1204","severity":1,"message":"1208","line":299,"column":56,"nodeType":"1206","messageId":"1207","endLine":299,"endColumn":58},{"ruleId":"1204","severity":1,"message":"1208","line":304,"column":56,"nodeType":"1206","messageId":"1207","endLine":304,"endColumn":58},{"ruleId":"1204","severity":1,"message":"1208","line":310,"column":56,"nodeType":"1206","messageId":"1207","endLine":310,"endColumn":58},{"ruleId":"1204","severity":1,"message":"1208","line":321,"column":56,"nodeType":"1206","messageId":"1207","endLine":321,"endColumn":58},{"ruleId":"1204","severity":1,"message":"1208","line":332,"column":56,"nodeType":"1206","messageId":"1207","endLine":332,"endColumn":58},{"ruleId":"1204","severity":1,"message":"1208","line":371,"column":34,"nodeType":"1206","messageId":"1207","endLine":371,"endColumn":36},{"ruleId":"1204","severity":1,"message":"1208","line":381,"column":41,"nodeType":"1206","messageId":"1207","endLine":381,"endColumn":43},{"ruleId":"1204","severity":1,"message":"1208","line":386,"column":48,"nodeType":"1206","messageId":"1207","endLine":386,"endColumn":50},{"ruleId":"1204","severity":1,"message":"1208","line":391,"column":48,"nodeType":"1206","messageId":"1207","endLine":391,"endColumn":50},{"ruleId":"1204","severity":1,"message":"1208","line":396,"column":48,"nodeType":"1206","messageId":"1207","endLine":396,"endColumn":50},{"ruleId":"1204","severity":1,"message":"1208","line":402,"column":48,"nodeType":"1206","messageId":"1207","endLine":402,"endColumn":50},{"ruleId":"1204","severity":1,"message":"1208","line":413,"column":48,"nodeType":"1206","messageId":"1207","endLine":413,"endColumn":50},{"ruleId":"1204","severity":1,"message":"1208","line":424,"column":48,"nodeType":"1206","messageId":"1207","endLine":424,"endColumn":50},{"ruleId":"1174","severity":1,"message":"1214","line":25,"column":10,"nodeType":"1176","messageId":"1177","endLine":25,"endColumn":16},{"ruleId":"1174","severity":1,"message":"1186","line":51,"column":19,"nodeType":"1176","messageId":"1177","endLine":51,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1215","line":52,"column":11,"nodeType":"1176","messageId":"1177","endLine":52,"endColumn":19},{"ruleId":"1179","severity":1,"message":"1180","line":62,"column":8,"nodeType":"1181","endLine":62,"endColumn":10,"suggestions":"1277"},{"ruleId":"1174","severity":1,"message":"1212","line":64,"column":12,"nodeType":"1176","messageId":"1177","endLine":64,"endColumn":17},{"ruleId":"1174","severity":1,"message":"1190","line":64,"column":19,"nodeType":"1176","messageId":"1177","endLine":64,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1237","line":3,"column":8,"nodeType":"1176","messageId":"1177","endLine":3,"endColumn":12},{"ruleId":"1179","severity":1,"message":"1180","line":21,"column":8,"nodeType":"1181","endLine":21,"endColumn":10,"suggestions":"1278"},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1242","line":1,"column":27,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":33},{"ruleId":"1174","severity":1,"message":"1243","line":1,"column":35,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":44},{"ruleId":"1174","severity":1,"message":"1183","line":2,"column":8,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1191","line":7,"column":8,"nodeType":"1176","messageId":"1177","endLine":7,"endColumn":20},{"ruleId":"1174","severity":1,"message":"1192","line":8,"column":8,"nodeType":"1176","messageId":"1177","endLine":8,"endColumn":22},{"ruleId":"1174","severity":1,"message":"1219","line":10,"column":8,"nodeType":"1176","messageId":"1177","endLine":10,"endColumn":19},{"ruleId":"1174","severity":1,"message":"1193","line":11,"column":8,"nodeType":"1176","messageId":"1177","endLine":11,"endColumn":15},{"ruleId":"1174","severity":1,"message":"1184","line":12,"column":10,"nodeType":"1176","messageId":"1177","endLine":12,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1185","line":15,"column":8,"nodeType":"1176","messageId":"1177","endLine":15,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1194","line":17,"column":8,"nodeType":"1176","messageId":"1177","endLine":17,"endColumn":12},{"ruleId":"1174","severity":1,"message":"1195","line":33,"column":8,"nodeType":"1176","messageId":"1177","endLine":33,"endColumn":28},{"ruleId":"1174","severity":1,"message":"1196","line":35,"column":10,"nodeType":"1176","messageId":"1177","endLine":35,"endColumn":19},{"ruleId":"1174","severity":1,"message":"1197","line":35,"column":21,"nodeType":"1176","messageId":"1177","endLine":35,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1198","line":35,"column":27,"nodeType":"1176","messageId":"1177","endLine":35,"endColumn":43},{"ruleId":"1174","severity":1,"message":"1199","line":36,"column":8,"nodeType":"1176","messageId":"1177","endLine":36,"endColumn":14},{"ruleId":"1174","severity":1,"message":"1220","line":37,"column":8,"nodeType":"1176","messageId":"1177","endLine":37,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1186","line":75,"column":19,"nodeType":"1176","messageId":"1177","endLine":75,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1201","line":86,"column":11,"nodeType":"1176","messageId":"1177","endLine":86,"endColumn":21},{"ruleId":"1221","severity":1,"message":"1222","line":99,"column":23,"nodeType":"1223","messageId":"1224","endLine":99,"endColumn":35},{"ruleId":"1204","severity":1,"message":"1208","line":120,"column":32,"nodeType":"1206","messageId":"1207","endLine":120,"endColumn":34},{"ruleId":"1204","severity":1,"message":"1208","line":122,"column":40,"nodeType":"1206","messageId":"1207","endLine":122,"endColumn":42},{"ruleId":"1204","severity":1,"message":"1208","line":136,"column":28,"nodeType":"1206","messageId":"1207","endLine":136,"endColumn":30},{"ruleId":"1204","severity":1,"message":"1208","line":136,"column":52,"nodeType":"1206","messageId":"1207","endLine":136,"endColumn":54},{"ruleId":"1204","severity":1,"message":"1208","line":141,"column":27,"nodeType":"1206","messageId":"1207","endLine":141,"endColumn":29},{"ruleId":"1204","severity":1,"message":"1208","line":143,"column":27,"nodeType":"1206","messageId":"1207","endLine":143,"endColumn":29},{"ruleId":"1204","severity":1,"message":"1208","line":145,"column":35,"nodeType":"1206","messageId":"1207","endLine":145,"endColumn":37},{"ruleId":"1204","severity":1,"message":"1208","line":147,"column":35,"nodeType":"1206","messageId":"1207","endLine":147,"endColumn":37},{"ruleId":"1204","severity":1,"message":"1208","line":149,"column":35,"nodeType":"1206","messageId":"1207","endLine":149,"endColumn":37},{"ruleId":"1204","severity":1,"message":"1208","line":153,"column":31,"nodeType":"1206","messageId":"1207","endLine":153,"endColumn":33},{"ruleId":"1204","severity":1,"message":"1208","line":158,"column":37,"nodeType":"1206","messageId":"1207","endLine":158,"endColumn":39},{"ruleId":"1204","severity":1,"message":"1208","line":158,"column":61,"nodeType":"1206","messageId":"1207","endLine":158,"endColumn":63},{"ruleId":"1204","severity":1,"message":"1208","line":158,"column":85,"nodeType":"1206","messageId":"1207","endLine":158,"endColumn":87},{"ruleId":"1204","severity":1,"message":"1208","line":160,"column":39,"nodeType":"1206","messageId":"1207","endLine":160,"endColumn":41},{"ruleId":"1204","severity":1,"message":"1208","line":160,"column":63,"nodeType":"1206","messageId":"1207","endLine":160,"endColumn":65},{"ruleId":"1204","severity":1,"message":"1208","line":160,"column":87,"nodeType":"1206","messageId":"1207","endLine":160,"endColumn":89},{"ruleId":"1204","severity":1,"message":"1208","line":160,"column":111,"nodeType":"1206","messageId":"1207","endLine":160,"endColumn":113},{"ruleId":"1204","severity":1,"message":"1208","line":165,"column":37,"nodeType":"1206","messageId":"1207","endLine":165,"endColumn":39},{"ruleId":"1204","severity":1,"message":"1208","line":165,"column":61,"nodeType":"1206","messageId":"1207","endLine":165,"endColumn":63},{"ruleId":"1204","severity":1,"message":"1208","line":167,"column":39,"nodeType":"1206","messageId":"1207","endLine":167,"endColumn":41},{"ruleId":"1204","severity":1,"message":"1208","line":167,"column":63,"nodeType":"1206","messageId":"1207","endLine":167,"endColumn":65},{"ruleId":"1204","severity":1,"message":"1208","line":167,"column":87,"nodeType":"1206","messageId":"1207","endLine":167,"endColumn":89},{"ruleId":"1204","severity":1,"message":"1208","line":171,"column":37,"nodeType":"1206","messageId":"1207","endLine":171,"endColumn":39},{"ruleId":"1204","severity":1,"message":"1208","line":171,"column":61,"nodeType":"1206","messageId":"1207","endLine":171,"endColumn":63},{"ruleId":"1204","severity":1,"message":"1208","line":173,"column":39,"nodeType":"1206","messageId":"1207","endLine":173,"endColumn":41},{"ruleId":"1204","severity":1,"message":"1208","line":173,"column":63,"nodeType":"1206","messageId":"1207","endLine":173,"endColumn":65},{"ruleId":"1204","severity":1,"message":"1208","line":173,"column":87,"nodeType":"1206","messageId":"1207","endLine":173,"endColumn":89},{"ruleId":"1204","severity":1,"message":"1208","line":177,"column":37,"nodeType":"1206","messageId":"1207","endLine":177,"endColumn":39},{"ruleId":"1204","severity":1,"message":"1208","line":177,"column":61,"nodeType":"1206","messageId":"1207","endLine":177,"endColumn":63},{"ruleId":"1204","severity":1,"message":"1208","line":179,"column":39,"nodeType":"1206","messageId":"1207","endLine":179,"endColumn":41},{"ruleId":"1204","severity":1,"message":"1208","line":179,"column":63,"nodeType":"1206","messageId":"1207","endLine":179,"endColumn":65},{"ruleId":"1204","severity":1,"message":"1208","line":179,"column":87,"nodeType":"1206","messageId":"1207","endLine":179,"endColumn":89},{"ruleId":"1204","severity":1,"message":"1208","line":183,"column":37,"nodeType":"1206","messageId":"1207","endLine":183,"endColumn":39},{"ruleId":"1204","severity":1,"message":"1208","line":185,"column":39,"nodeType":"1206","messageId":"1207","endLine":185,"endColumn":41},{"ruleId":"1204","severity":1,"message":"1208","line":185,"column":63,"nodeType":"1206","messageId":"1207","endLine":185,"endColumn":65},{"ruleId":"1204","severity":1,"message":"1208","line":189,"column":37,"nodeType":"1206","messageId":"1207","endLine":189,"endColumn":39},{"ruleId":"1204","severity":1,"message":"1208","line":191,"column":39,"nodeType":"1206","messageId":"1207","endLine":191,"endColumn":41},{"ruleId":"1204","severity":1,"message":"1208","line":191,"column":63,"nodeType":"1206","messageId":"1207","endLine":191,"endColumn":65},{"ruleId":"1204","severity":1,"message":"1208","line":195,"column":37,"nodeType":"1206","messageId":"1207","endLine":195,"endColumn":39},{"ruleId":"1204","severity":1,"message":"1208","line":197,"column":39,"nodeType":"1206","messageId":"1207","endLine":197,"endColumn":41},{"ruleId":"1204","severity":1,"message":"1208","line":197,"column":63,"nodeType":"1206","messageId":"1207","endLine":197,"endColumn":65},{"ruleId":"1204","severity":1,"message":"1208","line":205,"column":28,"nodeType":"1206","messageId":"1207","endLine":205,"endColumn":30},{"ruleId":"1204","severity":1,"message":"1208","line":205,"column":56,"nodeType":"1206","messageId":"1207","endLine":205,"endColumn":58},{"ruleId":"1204","severity":1,"message":"1208","line":224,"column":28,"nodeType":"1206","messageId":"1207","endLine":224,"endColumn":30},{"ruleId":"1204","severity":1,"message":"1205","line":224,"column":52,"nodeType":"1206","messageId":"1207","endLine":224,"endColumn":54},{"ruleId":"1204","severity":1,"message":"1208","line":228,"column":35,"nodeType":"1206","messageId":"1207","endLine":228,"endColumn":37},{"ruleId":"1204","severity":1,"message":"1205","line":228,"column":59,"nodeType":"1206","messageId":"1207","endLine":228,"endColumn":61},{"ruleId":"1204","severity":1,"message":"1208","line":232,"column":35,"nodeType":"1206","messageId":"1207","endLine":232,"endColumn":37},{"ruleId":"1204","severity":1,"message":"1208","line":232,"column":59,"nodeType":"1206","messageId":"1207","endLine":232,"endColumn":61},{"ruleId":"1204","severity":1,"message":"1208","line":249,"column":29,"nodeType":"1206","messageId":"1207","endLine":249,"endColumn":31},{"ruleId":"1204","severity":1,"message":"1208","line":251,"column":32,"nodeType":"1206","messageId":"1207","endLine":251,"endColumn":34},{"ruleId":"1204","severity":1,"message":"1208","line":263,"column":28,"nodeType":"1206","messageId":"1207","endLine":263,"endColumn":30},{"ruleId":"1204","severity":1,"message":"1208","line":263,"column":52,"nodeType":"1206","messageId":"1207","endLine":263,"endColumn":54},{"ruleId":"1225","severity":1,"message":"1226","line":291,"column":50,"nodeType":"1206","messageId":"1227","endLine":291,"endColumn":51},{"ruleId":"1228","severity":1,"message":"1229","line":298,"column":21,"nodeType":"1230","messageId":"1231","endLine":302,"endColumn":10},{"ruleId":"1204","severity":1,"message":"1208","line":350,"column":41,"nodeType":"1206","messageId":"1207","endLine":350,"endColumn":43},{"ruleId":"1232","severity":1,"message":"1233","line":356,"column":15,"nodeType":"1176","messageId":"1234","endLine":356,"endColumn":21},{"ruleId":"1232","severity":1,"message":"1233","line":371,"column":15,"nodeType":"1176","messageId":"1234","endLine":371,"endColumn":21},{"ruleId":"1232","severity":1,"message":"1235","line":374,"column":13,"nodeType":"1176","messageId":"1234","endLine":374,"endColumn":22},{"ruleId":"1174","severity":1,"message":"1187","line":399,"column":9,"nodeType":"1176","messageId":"1177","endLine":399,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1202","line":407,"column":8,"nodeType":"1181","endLine":407,"endColumn":10,"suggestions":"1279"},{"ruleId":"1174","severity":1,"message":"1186","line":49,"column":19,"nodeType":"1176","messageId":"1177","endLine":49,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1215","line":50,"column":11,"nodeType":"1176","messageId":"1177","endLine":50,"endColumn":19},{"ruleId":"1174","severity":1,"message":"1212","line":60,"column":12,"nodeType":"1176","messageId":"1177","endLine":60,"endColumn":17},{"ruleId":"1174","severity":1,"message":"1190","line":60,"column":19,"nodeType":"1176","messageId":"1177","endLine":60,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1186","line":49,"column":19,"nodeType":"1176","messageId":"1177","endLine":49,"endColumn":27},{"ruleId":"1179","severity":1,"message":"1188","line":58,"column":8,"nodeType":"1181","endLine":58,"endColumn":10,"suggestions":"1280"},{"ruleId":"1174","severity":1,"message":"1212","line":60,"column":12,"nodeType":"1176","messageId":"1177","endLine":60,"endColumn":17},{"ruleId":"1174","severity":1,"message":"1190","line":60,"column":19,"nodeType":"1176","messageId":"1177","endLine":60,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1183","line":2,"column":8,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1184","line":11,"column":10,"nodeType":"1176","messageId":"1177","endLine":11,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1185","line":14,"column":8,"nodeType":"1176","messageId":"1177","endLine":14,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1186","line":56,"column":19,"nodeType":"1176","messageId":"1177","endLine":56,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1187","line":62,"column":9,"nodeType":"1176","messageId":"1177","endLine":62,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1180","line":67,"column":8,"nodeType":"1181","endLine":67,"endColumn":10,"suggestions":"1281"},{"ruleId":"1174","severity":1,"message":"1190","line":69,"column":19,"nodeType":"1176","messageId":"1177","endLine":69,"endColumn":27},{"ruleId":"1179","severity":1,"message":"1180","line":28,"column":8,"nodeType":"1181","endLine":28,"endColumn":10,"suggestions":"1282"},{"ruleId":"1179","severity":1,"message":"1244","line":35,"column":27,"nodeType":"1176","endLine":35,"endColumn":38},{"ruleId":"1179","severity":1,"message":"1245","line":71,"column":8,"nodeType":"1181","endLine":71,"endColumn":42,"suggestions":"1283"},{"ruleId":"1174","severity":1,"message":"1243","line":1,"column":27,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":36},{"ruleId":"1174","severity":1,"message":"1247","line":2,"column":33,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":47},{"ruleId":"1174","severity":1,"message":"1193","line":2,"column":49,"nodeType":"1176","messageId":"1177","endLine":2,"endColumn":56},{"ruleId":"1174","severity":1,"message":"1248","line":4,"column":8,"nodeType":"1176","messageId":"1177","endLine":4,"endColumn":13},{"ruleId":"1174","severity":1,"message":"1214","line":12,"column":8,"nodeType":"1176","messageId":"1177","endLine":12,"endColumn":14},{"ruleId":"1174","severity":1,"message":"1197","line":13,"column":21,"nodeType":"1176","messageId":"1177","endLine":13,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1198","line":13,"column":27,"nodeType":"1176","messageId":"1177","endLine":13,"endColumn":43},{"ruleId":"1174","severity":1,"message":"1249","line":14,"column":8,"nodeType":"1176","messageId":"1177","endLine":14,"endColumn":21},{"ruleId":"1174","severity":1,"message":"1250","line":16,"column":8,"nodeType":"1176","messageId":"1177","endLine":16,"endColumn":16},{"ruleId":"1174","severity":1,"message":"1251","line":26,"column":11,"nodeType":"1176","messageId":"1177","endLine":26,"endColumn":15},{"ruleId":"1174","severity":1,"message":"1201","line":31,"column":11,"nodeType":"1176","messageId":"1177","endLine":31,"endColumn":21},{"ruleId":"1174","severity":1,"message":"1252","line":33,"column":11,"nodeType":"1176","messageId":"1177","endLine":33,"endColumn":15},{"ruleId":"1204","severity":1,"message":"1208","line":87,"column":33,"nodeType":"1206","messageId":"1207","endLine":87,"endColumn":35},{"ruleId":"1204","severity":1,"message":"1208","line":93,"column":33,"nodeType":"1206","messageId":"1207","endLine":93,"endColumn":35},{"ruleId":"1204","severity":1,"message":"1208","line":93,"column":66,"nodeType":"1206","messageId":"1207","endLine":93,"endColumn":68},{"ruleId":"1204","severity":1,"message":"1208","line":93,"column":98,"nodeType":"1206","messageId":"1207","endLine":93,"endColumn":100},{"ruleId":"1204","severity":1,"message":"1208","line":94,"column":33,"nodeType":"1206","messageId":"1207","endLine":94,"endColumn":35},{"ruleId":"1204","severity":1,"message":"1208","line":94,"column":66,"nodeType":"1206","messageId":"1207","endLine":94,"endColumn":68},{"ruleId":"1204","severity":1,"message":"1208","line":94,"column":98,"nodeType":"1206","messageId":"1207","endLine":94,"endColumn":100},{"ruleId":"1204","severity":1,"message":"1208","line":95,"column":33,"nodeType":"1206","messageId":"1207","endLine":95,"endColumn":35},{"ruleId":"1204","severity":1,"message":"1208","line":96,"column":33,"nodeType":"1206","messageId":"1207","endLine":96,"endColumn":35},{"ruleId":"1204","severity":1,"message":"1208","line":96,"column":66,"nodeType":"1206","messageId":"1207","endLine":96,"endColumn":68},{"ruleId":"1174","severity":1,"message":"1253","line":121,"column":14,"nodeType":"1176","messageId":"1177","endLine":121,"endColumn":19},{"ruleId":"1174","severity":1,"message":"1254","line":121,"column":21,"nodeType":"1176","messageId":"1177","endLine":121,"endColumn":29},{"ruleId":"1174","severity":1,"message":"1255","line":122,"column":14,"nodeType":"1176","messageId":"1177","endLine":122,"endColumn":22},{"ruleId":"1174","severity":1,"message":"1256","line":122,"column":24,"nodeType":"1176","messageId":"1177","endLine":122,"endColumn":35},{"ruleId":"1174","severity":1,"message":"1258","line":20,"column":7,"nodeType":"1176","messageId":"1177","endLine":20,"endColumn":12},{"ruleId":"1179","severity":1,"message":"1259","line":34,"column":8,"nodeType":"1181","endLine":34,"endColumn":35,"suggestions":"1284"},{"ruleId":"1261","severity":1,"message":"1262","line":53,"column":69,"nodeType":"1230","messageId":"1263","endLine":53,"endColumn":71},{"ruleId":"1204","severity":1,"message":"1208","line":36,"column":23,"nodeType":"1206","messageId":"1207","endLine":36,"endColumn":25},{"ruleId":"1179","severity":1,"message":"1180","line":67,"column":8,"nodeType":"1181","endLine":67,"endColumn":20,"suggestions":"1285"},{"ruleId":"1174","severity":1,"message":"1243","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":26},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":25},{"ruleId":"1174","severity":1,"message":"1241","line":1,"column":16,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":24},{"ruleId":"1174","severity":1,"message":"1243","line":1,"column":26,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":35},{"ruleId":"1264","severity":1,"message":"1265","line":15,"column":21,"nodeType":"1266","endLine":15,"endColumn":75},{"ruleId":"1174","severity":1,"message":"1243","line":1,"column":17,"nodeType":"1176","messageId":"1177","endLine":1,"endColumn":26},{"ruleId":"1174","severity":1,"message":"1190","line":8,"column":19,"nodeType":"1176","messageId":"1177","endLine":8,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1190","line":9,"column":19,"nodeType":"1176","messageId":"1177","endLine":9,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1190","line":10,"column":19,"nodeType":"1176","messageId":"1177","endLine":10,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1190","line":8,"column":19,"nodeType":"1176","messageId":"1177","endLine":8,"endColumn":27},{"ruleId":"1174","severity":1,"message":"1190","line":8,"column":19,"nodeType":"1176","messageId":"1177","endLine":8,"endColumn":27},{"ruleId":"1261","severity":1,"message":"1262","line":25,"column":84,"nodeType":"1230","messageId":"1263","endLine":25,"endColumn":86},"no-native-reassign",["1286"],"no-negated-in-lhs",["1287"],"no-unused-vars","'InactiveTable' is defined but never used.","Identifier","unusedVar","'Staff' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["1288"],"'Table' is defined but never used.","'checkIfDefined' is defined but never used.","'axios' is defined but never used.","'setUsers' is assigned a value but never used.","'headings' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.state.company' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1289"],"'setState' is assigned a value but never used.","'ConfirmModal' is defined but never used.","'FeedbackGlobal' is defined but never used.","'Spinner' is defined but never used.","'Save' is defined but never used.","'AddCircleOutlineIcon' is defined but never used.","'FormGroup' is defined but never used.","'Icon' is defined but never used.","'TextareaAutosize' is defined but never used.","'Select' is defined but never used.","'Moment' is defined but never used.","'handleShow' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.state.supplierchild' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1290"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",["1291"],["1292"],["1293"],"'state' is assigned a value but never used.",["1294"],"'Button' is defined but never used.","'location' is assigned a value but never used.",["1295"],["1296"],["1297"],"'ButtonStyle' is defined but never used.","'styls' is defined but never used.","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'client', 'newClient'.","ArrowFunctionExpression","unsafeRefs","no-redeclare","'client' is already defined.","redeclared","'newClient' is already defined.",["1298"],"'Logo' is defined but never used.",["1299"],["1300"],["1301"],"'useState' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has an unnecessary dependency: 'searchRef.current'. Either exclude it or remove the dependency array. Mutable values like 'searchRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1302"],"'DropdownButton' is defined but never used.","'looks' is defined but never used.","'AddCircleIcon' is defined but never used.","'classess' is defined but never used.","'role' is assigned a value but never used.","'data' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.",["1303"],"'clone' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["1304"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["1286"],["1287"],["1305"],["1306"],["1307"],["1308"],["1309"],["1310"],["1311"],["1312"],["1313"],["1314"],["1315"],["1316"],["1317"],["1318"],["1319"],["1320"],["1321"],"no-global-assign","no-unsafe-negation",{"desc":"1322","fix":"1323"},{"desc":"1324","fix":"1325"},{"desc":"1326","fix":"1327"},{"desc":"1324","fix":"1328"},{"desc":"1324","fix":"1329"},{"desc":"1324","fix":"1330"},{"desc":"1324","fix":"1331"},{"desc":"1332","fix":"1333"},{"desc":"1326","fix":"1334"},{"desc":"1326","fix":"1335"},{"desc":"1326","fix":"1336"},{"desc":"1332","fix":"1337"},{"desc":"1332","fix":"1338"},{"desc":"1332","fix":"1339"},{"desc":"1340","fix":"1341"},{"desc":"1342","fix":"1343"},{"desc":"1344","fix":"1345"},{"desc":"1322","fix":"1346"},{"desc":"1324","fix":"1347"},{"desc":"1324","fix":"1348"},{"desc":"1324","fix":"1349"},{"desc":"1326","fix":"1350"},{"desc":"1324","fix":"1351"},{"desc":"1326","fix":"1352"},{"desc":"1326","fix":"1353"},{"desc":"1332","fix":"1354"},{"desc":"1332","fix":"1355"},{"desc":"1326","fix":"1356"},{"desc":"1324","fix":"1357"},{"desc":"1332","fix":"1358"},{"desc":"1332","fix":"1359"},{"desc":"1340","fix":"1360"},{"desc":"1344","fix":"1361"},{"desc":"1342","fix":"1362"},"Update the dependencies array to be: [props, props.onTryAutoSignup]",{"range":"1363","text":"1364"},"Update the dependencies array to be: [location.state.company, props]",{"range":"1365","text":"1366"},"Update the dependencies array to be: [location.state.supplierchild, props]",{"range":"1367","text":"1368"},{"range":"1369","text":"1366"},{"range":"1370","text":"1366"},{"range":"1371","text":"1366"},{"range":"1372","text":"1366"},"Update the dependencies array to be: [props]",{"range":"1373","text":"1374"},{"range":"1375","text":"1368"},{"range":"1376","text":"1368"},{"range":"1377","text":"1368"},{"range":"1378","text":"1374"},{"range":"1379","text":"1374"},{"range":"1380","text":"1374"},"Update the dependencies array to be: [delayedSearch]",{"range":"1381","text":"1382"},"Update the dependencies array to be: [props, props.show]",{"range":"1383","text":"1384"},"Update the dependencies array to be: [props.questionnaire_phase, state]",{"range":"1385","text":"1386"},{"range":"1387","text":"1364"},{"range":"1388","text":"1366"},{"range":"1389","text":"1366"},{"range":"1390","text":"1366"},{"range":"1391","text":"1368"},{"range":"1392","text":"1366"},{"range":"1393","text":"1368"},{"range":"1394","text":"1368"},{"range":"1395","text":"1374"},{"range":"1396","text":"1374"},{"range":"1397","text":"1368"},{"range":"1398","text":"1366"},{"range":"1399","text":"1374"},{"range":"1400","text":"1374"},{"range":"1401","text":"1382"},{"range":"1402","text":"1386"},{"range":"1403","text":"1384"},[1468,1491],"[props, props.onTryAutoSignup]",[3393,3395],"[location.state.company, props]",[4401,4403],"[location.state.supplierchild, props]",[3391,3393],[3418,3420],[2758,2760],[3394,3396],[2910,2912],"[props]",[4346,4348],[2777,2779],[12894,12896],[1122,1124],[3272,3274],[991,993],[3522,3556],"[delayedSearch]",[2141,2153],"[props, props.show]",[1652,1679],"[props.questionnaire_phase, state]",[1468,1491],[3418,3420],[3394,3396],[3393,3395],[4346,4348],[3391,3393],[2777,2779],[4401,4403],[2910,2912],[1122,1124],[12894,12896],[2758,2760],[3272,3274],[991,993],[3522,3556],[1652,1679],[2141,2153]]